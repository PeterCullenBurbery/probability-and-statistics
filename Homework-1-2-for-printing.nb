(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    330302,       6953]
NotebookOptionsPosition[    198647,       4388]
NotebookOutlinePosition[    312708,       6570]
CellTagsIndexPosition[    312327,       6556]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["STA 446 Exercise Set 1", "Title",
 CellChangeTimes->{{3.8830607734174175`*^9, 3.8830607902844176`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577,ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36"],

Cell[BoxData[
 StyleBox[
  RowBox[{"Peter", " ", "Burbery"}], "Author"]], "Author",
 CellChangeTimes->{{3.8830607832364016`*^9, 3.883060785295416*^9}},
 CellTags->"AuthorName",
 CellID->960727095,ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c"],

Cell["Abstract", "Abstract",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573,ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e"],

Cell[CellGroupData[{

Cell["Section", "Section",
 CellTags->"SectionHeader",
 CellID->453852445,ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940"],

Cell["XXXX", "Text",
 CellTags->"ExampleTopicSentence",
 CellID->816667160,ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f"],

Cell["XXXX:", "CodeText",
 CellTags->"ExampleCodeText",
 CellID->66178570,ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0"],

Cell[CellGroupData[{

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Input",ExpressionUUID->
  "199b1e12-e32a-43d2-bb61-3ded10db1ed0"]], "Input",
 CellTags->"ExampleInput",
 CellLabel->"In[1]:=",
 CellID->844129532,ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5"],

Cell[BoxData[Cell[BoxData[
 "XXXX"], "Output",ExpressionUUID->
  "3d10bd36-6381-4cae-81b3-785c45643fb1"]], "Output",
 CellTags->"ExampleOutput",
 CellLabel->"Out[1]=",
 CellID->171130590,ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9"]
}, Open  ]],

Cell["XXXX", "Item",
 CellID->316654537,ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c"],

Cell["XXXX", "Item",
 CellID->316654538,ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Question 1", "Section",
 CellChangeTimes->{{3.8830607966764016`*^9, 3.8830607980924215`*^9}},
 CellID->101102159,ExpressionUUID->"827b26de-1acb-4959-ac7b-d16051626238"],

Cell[TextData[{
 "In an experiment to measure mice intelligence, the variable ",
 Cell[BoxData[
  FormBox["T", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "69412421-c397-455b-bfe3-ecce06af4d6f"],
 " represents the time in seconds for a mouse going through a maze to reach a \
reward of food. The probability density function (PDF) of T is given by the \
following, where ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "02ec18e9-f74a-477b-be28-95c3e90f0b49"],
 " is the minimum possible time to traverse the maze."
}], "Text",
 CellChangeTimes->{{3.883060807988417*^9, 3.883060865123401*^9}},
 CellID->38633345,ExpressionUUID->"b726fe33-5b42-4830-a845-67397d6e2c15"],

Cell[BoxData[
 RowBox[{
  FormBox[
   RowBox[{"f", "(", "t", ")"}],
   TraditionalForm], "=", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         FractionBox["k", 
          SuperscriptBox["t", "4"]], 
         RowBox[{"b", "<=", "t"}]},
        {"0", "True"}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True]}]], "Input",
 CellChangeTimes->{{3.883060928815945*^9, 3.8830609631319466`*^9}, {
  3.8830610547209487`*^9, 3.883061099534966*^9}},
 CellID->32553739,ExpressionUUID->"231297d5-4cc9-407c-bf80-8833b680e735"],

Cell[CellGroupData[{

Cell["Find the value of k.", "Subsection",
 CellChangeTimes->{{3.8830608024054008`*^9, 3.8830608031024046`*^9}, {
  3.8830608673004026`*^9, 3.8830608721944065`*^9}},
 CellID->117902179,ExpressionUUID->"a95c8d1a-df91-4dae-a933-73c638d477fa"],

Cell["We know", "Text",
 CellChangeTimes->{{3.8830608737124076`*^9, 3.883060874808417*^9}},
 CellID->141620958,ExpressionUUID->"e85edff4-cc26-4a57-bff7-55a0374462b0"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"f", "(", "t", ")"}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}], "=", "1"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.8830608776504045`*^9, 3.8830609001169558`*^9}},
 CellID->51445768,ExpressionUUID->"c17df9cf-b15a-4183-8db3-c09313575fd0"],

Cell["We will solve this equation.", "Text",
 CellChangeTimes->{{3.8830609058319454`*^9, 3.8830609122539473`*^9}},
 CellID->85525521,ExpressionUUID->"2f2a9244-e8ef-49cb-bb31-e8f5b1bc6e71"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["k", 
             SuperscriptBox["t", "4"]], 
            RowBox[{"b", "<=", "t"}]},
           {"0", "True"}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False,
      StripWrapperBoxes->True], 
     RowBox[{"\[DifferentialD]", "t"}]}]}], "=", "1"}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{3.883061089081946*^9},
 CellID->32076184,ExpressionUUID->"d9221eb4-7239-4c3b-b21b-c73b2f7298fa"],

Cell["We will use ProbabilityDistribution.", "Text",
 CellChangeTimes->{{3.883061229045947*^9, 3.8830612358929615`*^9}},
 CellID->347581280,ExpressionUUID->"612de431-99a3-48ae-b626-bc29eae69f55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Q1$Probability$Distribution", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           FractionBox["k", 
            SuperscriptBox["t", "4"]], 
           RowBox[{"b", "<=", "t"}]},
          {"0", "True"}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}},
         Selectable->True]}
      },
      GridBoxAlignment->{
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}},
      GridBoxItemSize->{
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8830612366309433`*^9, 3.883061290600942*^9}},
 CellLabel->"In[116]:=",
 CellID->274759697,ExpressionUUID->"7e43e43b-1c5b-412b-aa1e-21be498043c9"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox["k", 
           SuperscriptBox["\[FormalX]", "4"]], 
          RowBox[{"b", "\[LessEqual]", "\[FormalX]"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.883061291075945*^9},
 CellLabel->"Out[116]=",
 CellID->10525875,ExpressionUUID->"fa3829c8-3ebe-4542-811f-d0b3ef8da300"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"$Q1$Probability$Distribution", ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.883061303669945*^9, 3.883061311809956*^9}},
 CellLabel->"In[118]:=",
 CellID->221818627,ExpressionUUID->"b72ffd6e-47d6-4c60-9bde-5a68ece60066"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["k", 
         SuperscriptBox["t", "4"]], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], "+", "t"}], "\[GreaterEqual]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.8830613080779476`*^9, 3.883061312167943*^9}},
 CellLabel->"Out[118]=",
 CellID->52693951,ExpressionUUID->"344848f0-a5ad-41cf-af94-db3f9d328e08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"PDF", "[", 
    RowBox[{"$Q1$Probability$Distribution", ",", "t"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883061324821943*^9, 3.883061343879964*^9}},
 CellID->142049760,ExpressionUUID->"416a9691-1cce-4665-9fbd-b17c622b6d60"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox["k", 
         RowBox[{"3", " ", 
          SuperscriptBox["b", "3"]}]], 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "||", 
         RowBox[{
          RowBox[{"Im", "[", "b", "]"}], ">", "0"}], "||", 
         RowBox[{
          RowBox[{"Im", "[", "b", "]"}], "<", "0"}]}]},
       {
        RowBox[{"k", " ", "\[Infinity]"}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.883061334629953*^9},
 CellLabel->"Out[119]=",
 CellID->317666335,ExpressionUUID->"f6e57575-2628-43d2-8dc7-beba39e7f37a"]
}, Open  ]],

Cell["I can assume b>0.", "Text",
 CellChangeTimes->{{3.8830613457129583`*^9, 3.883061350042948*^9}},
 CellID->1620886,ExpressionUUID->"022ad5bc-c1c5-4c59-a004-7574b4aa1185"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{"$Q1$Probability$Distribution", ",", "t"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830613513229585`*^9, 3.883061358324947*^9}},
 CellLabel->"In[120]:=",
 CellID->109320042,ExpressionUUID->"2c162b4d-f753-4945-a59c-765d0bb8a6f6"],

Cell[BoxData[
 FractionBox["k", 
  RowBox[{"3", " ", 
   SuperscriptBox["b", "3"]}]]], "Output",
 CellChangeTimes->{3.883061359094944*^9},
 CellLabel->"Out[120]=",
 CellID->29094259,ExpressionUUID->"74f83149-7885-4708-9122-5560582563f1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Refine", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{"PDF", "[", 
         RowBox[{"$Q1$Probability$Distribution", ",", "t"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "}"}]}], "]"}], "==", 
    "1"}], ",", "k"}], "]"}]], "Input",
 CellChangeTimes->{{3.883061361417959*^9, 3.8830613651059437`*^9}},
 CellLabel->"In[121]:=",
 CellID->10025442,ExpressionUUID->"3a2c6d8b-1036-4d6a-a099-f929f2214c37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"k", "\[Rule]", 
    RowBox[{"3", " ", 
     SuperscriptBox["b", "3"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8830613659519567`*^9},
 CellLabel->"Out[121]=",
 CellID->212342756,ExpressionUUID->"2d0269a5-48fb-4050-a4f4-0cfb262c2c1d"]
}, Open  ]],

Cell["I can update the PDF.", "Text",
 CellChangeTimes->{{3.883061368784943*^9, 3.883061373208947*^9}},
 CellID->167161462,ExpressionUUID->"2cbfe79d-b7b3-41a2-b1a1-5acb05aa9f63"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$Q1$Probability$Distribution$with$k$specified", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{
     TagBox[GridBox[{
        {"\[Piecewise]", GridBox[{
           {
            FractionBox["k", 
             SuperscriptBox["t", "4"]], 
            RowBox[{"b", "<=", "t"}]},
           {"0", "True"}
          },
          AllowedDimensions->{2, Automatic},
          Editable->True,
          
          GridBoxAlignment->{
           "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
            "Rows" -> {{1.}}, "RowsIndexed" -> {}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.84]}, 
              Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}, "RowsIndexed" -> {}},
          Selectable->True]}
       },
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.35]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}}],
      "Piecewise",
      DeleteWithContents->True,
      Editable->False,
      SelectWithContents->True,
      Selectable->False,
      StripWrapperBoxes->True], "/.", 
     RowBox[{"First", "[", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Refine", "[", 
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{"PDF", "[", 
              RowBox[{"$Q1$Probability$Distribution", ",", "t"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", 
               RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "}"}]}], "]"}], "==", 
         "1"}], ",", "k"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8830613819399457`*^9, 3.8830614057889457`*^9}},
 CellLabel->"In[122]:=",
 CellID->281029717,ExpressionUUID->"54066147-44a7-4660-a923-a7bd904c3afc"],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{"3", " ", 
            SuperscriptBox["b", "3"]}], 
           SuperscriptBox["\[FormalX]", "4"]], 
          RowBox[{"b", "\[LessEqual]", "\[FormalX]"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{3.883061406592944*^9},
 CellLabel->"Out[122]=",
 CellID->241113582,ExpressionUUID->"3399d172-fdf6-4394-91d3-20d2595264c3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the cumulative distribution function (CDF) of X, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", "t", ")"}], "=", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "t"], 
     RowBox[{
      RowBox[{"f", "(", "s", ")"}], 
      RowBox[{"\[DifferentialD]", "s"}]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "531b18e8-8b6e-436d-a1cc-b4b87422fd4f"]
}], "Subsection",
 CellChangeTimes->{{3.8830614209779453`*^9, 3.8830614786939454`*^9}},
 CellID->127239515,ExpressionUUID->"1f19be83-8ae5-4d5e-9a91-fc07df87022b"],

Cell["I can now calculate the CDF.", "Text",
 CellChangeTimes->{{3.88306141213896*^9, 3.883061416558943*^9}},
 CellID->30685943,ExpressionUUID->"72ae5945-41dd-43d0-b9b5-88b29444bed4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", "$Q1$Probability$Distribution$with$k$specified", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8830614826809425`*^9, 3.883061486297941*^9}},
 CellLabel->"In[123]:=",
 CellID->17875601,ExpressionUUID->"08d89223-1f1f-409a-a2f6-a4879f48cec6"],

Cell[BoxData[
 RowBox[{"Function", "[", 
  RowBox[{"\[FormalX]", ",", 
   TagBox[GridBox[{
      {"\[Piecewise]", GridBox[{
         {
          FractionBox[
           RowBox[{
            SuperscriptBox["\[FormalX]", "3"], "-", 
            SuperscriptBox["b", "3"]}], 
           SuperscriptBox["\[FormalX]", "3"]], 
          RowBox[{
           RowBox[{"\[FormalX]", "-", "b"}], ">", "0"}]},
         {"0", 
          TagBox["True",
           "PiecewiseDefault",
           AutoDelete->True]}
        },
        AllowedDimensions->{2, Automatic},
        Editable->True,
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.84]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}},
        Selectable->True]}
     },
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.35]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    "Piecewise",
    DeleteWithContents->True,
    Editable->False,
    SelectWithContents->True,
    Selectable->False,
    StripWrapperBoxes->True], ",", "Listable"}], "]"}]], "Output",
 CellChangeTimes->{3.883061486667943*^9},
 CellLabel->"Out[123]=",
 CellID->601167601,ExpressionUUID->"63f4a816-0dbc-4aad-aea1-c82c1f042247"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{"$Q1$Probability$Distribution$with$k$specified", ",", "t"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8830614826809425`*^9, 3.883061488870946*^9}},
 CellLabel->"In[124]:=",
 CellID->732666548,ExpressionUUID->"c569e65f-299b-41b7-9eef-eabdb2e71275"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["b", "3"], 
          SuperscriptBox["t", "3"]]}], 
        RowBox[{"t", ">", "b"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.883061489233944*^9},
 CellLabel->"Out[124]=",
 CellID->96615651,ExpressionUUID->"e2d8ac2e-519b-42fa-9c37-3049a9f92256"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What is the probability that a mouse requires b+c seconds to reach the food \
reward?\
\>", "Subsection",
 CellChangeTimes->{{3.883061497592944*^9, 3.883061511263951*^9}},
 CellID->627902216,ExpressionUUID->"dd024d63-e56e-4d7d-8ae1-071078ae7795"],

Cell["\<\
I did this on paper. Here are some additional ideas with Mathematica.\
\>", "Text",
 CellChangeTimes->{{3.8830616891209497`*^9, 3.8830617025739527`*^9}},
 CellID->399418,ExpressionUUID->"c32ee5cc-6c2e-4428-825a-b274b32b7d3f"],

Cell["This gives the exact probability.", "Text",
 CellChangeTimes->{{3.883061600919959*^9, 3.8830616058189473`*^9}},
 CellID->38180419,ExpressionUUID->"20a83273-35da-4476-bad3-4e062cb72081"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"$Q1$Probability$Distribution$with$k$specified", ",", 
   RowBox[{"b", "+", "c"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830615965479455`*^9, 3.8830615967669425`*^9}},
 CellLabel->"In[128]:=",
 CellID->654196850,ExpressionUUID->"6a8b2a39-6d2f-4c4d-a4db-af9f0e7dcd62"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["b", "3"]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"b", "+", "c"}], ")"}], "4"]], 
        RowBox[{"c", "\[GreaterEqual]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.883061596989951*^9},
 CellLabel->"Out[128]=",
 CellID->2985966,ExpressionUUID->"275aeb4d-ff2a-4959-af87-e290f09b13d8"]
}, Open  ]],

Cell["This gives the sum of probabilities.", "Text",
 CellChangeTimes->{{3.883061608132943*^9, 3.8830616163889465`*^9}},
 CellID->97755920,ExpressionUUID->"de96b299-f557-4767-a40f-d633673298e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{"$Q1$Probability$Distribution$with$k$specified", ",", 
   RowBox[{"b", "+", "c"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830615472809477`*^9, 3.8830615503359613`*^9}},
 CellLabel->"In[126]:=",
 CellID->147068514,ExpressionUUID->"83199168-b642-46c1-865b-b5c240f5ea04"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{"1", "-", 
         FractionBox[
          SuperscriptBox["b", "3"], 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"b", "+", "c"}], ")"}], "3"]]}], 
        RowBox[{"c", ">", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.8830615506669464`*^9},
 CellLabel->"Out[126]=",
 CellID->213461328,ExpressionUUID->"1504b407-7195-450a-be1b-9bd75566e60e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", 
    RowBox[{
     RowBox[{"T", ">", 
      RowBox[{"b", "+", "c"}]}], "|", 
     RowBox[{"T", ">", 
      RowBox[{"b", "+", "d"}]}]}], ")"}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "bb399462-c16c-40fe-b6cc-cff672f0147a"]
}], "Subsection",
 CellChangeTimes->{{3.8830616207379484`*^9, 3.883061633143942*^9}},
 CellID->536163033,ExpressionUUID->"4f396326-732c-4f0c-81cf-f794ae0b09ab"],

Cell["I tried to figure this out but got confused.", "Text",
 CellChangeTimes->{{3.8830617050239596`*^9, 3.8830617110279446`*^9}},
 CellID->201313502,ExpressionUUID->"2e5293a1-9c71-48e2-8a88-37d1aa021c90"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Find the expected average and the variance for the variable T\
\>", "Subsection",
 CellChangeTimes->{{3.8830617156169558`*^9, 3.8830617257059445`*^9}},
 CellID->382497433,ExpressionUUID->"d43bb07c-53a9-4589-8992-a71931f71cc7"],

Cell[CellGroupData[{

Cell["average", "Subsubsection",
 CellChangeTimes->{{3.8830617280939655`*^9, 3.8830617291519456`*^9}},
 CellID->163095230,ExpressionUUID->"92db9055-5e63-498f-9587-f464a27bca31"],

Cell["I will compute", "Text",
 CellChangeTimes->{{3.8830617684829435`*^9, 3.883061770449963*^9}},
 CellID->170821093,ExpressionUUID->"9644f2f2-f6c1-4200-8244-da2197151787"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"E", "(", "T", ")"}], "=", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{
     RowBox[{"s", " ", 
      RowBox[{"f", "(", "s", ")"}]}], 
     RowBox[{"\[DifferentialD]", "s"}]}]}]}], TraditionalForm]], "Input",
 CellChangeTimes->{{3.8830617723549595`*^9, 3.883061811110944*^9}, {
  3.8830618463739443`*^9, 3.883061852368946*^9}},
 CellID->628785154,ExpressionUUID->"e3b79dbc-c200-42c6-9a30-8fb3a95a446a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDF", "[", 
  RowBox[{"$Q1$Probability$Distribution$with$k$specified", ",", "s"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883061730126943*^9, 3.8830617626869435`*^9}},
 CellLabel->"In[131]:=",
 CellID->138576246,ExpressionUUID->"2ca9d808-cf08-4f36-99fd-54c7a583044e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"3", " ", 
          SuperscriptBox["b", "3"]}], 
         SuperscriptBox["s", "4"]], 
        RowBox[{
         RowBox[{
          RowBox[{"-", "b"}], "+", "s"}], "\[GreaterEqual]", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{{3.8830617414689474`*^9, 3.883061763111944*^9}},
 CellLabel->"Out[131]=",
 CellID->489462843,ExpressionUUID->"8fea6d8b-8734-4024-adfa-f330008d4000"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
  RowBox[{"s", " ", 
   RowBox[{"(", 
    TagBox[GridBox[{
       {"\[Piecewise]", GridBox[{
          {
           FractionBox[
            RowBox[{"3", " ", 
             SuperscriptBox["b", "3"]}], 
            SuperscriptBox["s", "4"]], 
           RowBox[{
            RowBox[{
             RowBox[{"-", "b"}], "+", "s"}], "\[GreaterEqual]", "0"}]},
          {"0", 
           TagBox["True",
            "PiecewiseDefault",
            AutoDelete->True]}
         },
         AllowedDimensions->{2, Automatic},
         Editable->True,
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.84]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}},
         Selectable->True]}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.35]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}],
     "Piecewise",
     DeleteWithContents->True,
     Editable->False,
     SelectWithContents->True,
     Selectable->False,
     StripWrapperBoxes->True], ")"}], 
   RowBox[{"\[DifferentialD]", "s"}]}]}]], "Input",
 CellChangeTimes->{{3.8830618692809477`*^9, 3.883061896518944*^9}},
 CellLabel->"In[133]:=",
 CellID->218470861,ExpressionUUID->"6a79218f-a811-4c0e-bdf1-adf8da44a254"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        FractionBox[
         RowBox[{"3", " ", "b"}], "2"], 
        RowBox[{
         RowBox[{
          RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "||", 
         RowBox[{
          RowBox[{"Im", "[", "b", "]"}], ">", "0"}], "||", 
         RowBox[{
          RowBox[{"Im", "[", "b", "]"}], "<", "0"}]}]},
       {
        RowBox[{"Integrate", "[", 
         RowBox[{
          RowBox[{"s", " ", 
           RowBox[{"(", 
            TagBox[GridBox[{
               {"\[Piecewise]", GridBox[{
                  {
                   FractionBox[
                    RowBox[{"3", " ", 
                    SuperscriptBox["b", "3"]}], 
                    SuperscriptBox["s", "4"]], 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "b"}], "+", "s"}], "\[GreaterEqual]", "0"}]},
                  {"0", 
                   TagBox["True",
                    "PiecewiseDefault",
                    AutoDelete->True]}
                 },
                 AllowedDimensions->{2, Automatic},
                 Editable->True,
                 
                 GridBoxAlignment->{
                  "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
                 
                 GridBoxItemSize->{
                  "Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.84]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.4]}, 
                    Offset[0.2]}},
                 Selectable->True]}
              },
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.35]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}}],
             "Piecewise",
             DeleteWithContents->True,
             Editable->False,
             SelectWithContents->True,
             Selectable->False,
             StripWrapperBoxes->True], ")"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", 
            RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}], ",", 
          RowBox[{"Assumptions", "\[Rule]", 
           RowBox[{
            RowBox[{
             RowBox[{"Im", "[", "b", "]"}], "\[Equal]", "0"}], "&&", 
            RowBox[{
             RowBox[{"Re", "[", "b", "]"}], "\[LessEqual]", "0"}]}]}]}], 
         "]"}], 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.8830618978619432`*^9},
 CellLabel->"Out[133]=",
 CellID->98358706,ExpressionUUID->"bd979e48-93d6-44bf-a7f4-e5d75245acd5"]
}, Open  ]],

Cell["I can add an assumption.", "Text",
 CellChangeTimes->{{3.883061904303951*^9, 3.883061909017948*^9}},
 CellID->166656436,ExpressionUUID->"eabdee0b-3932-4244-9d86-5cec46d1b5cb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", 
     RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
    RowBox[{"s", " ", 
     RowBox[{"(", 
      TagBox[GridBox[{
         {"\[Piecewise]", GridBox[{
            {
             FractionBox[
              RowBox[{"3", " ", 
               SuperscriptBox["b", "3"]}], 
              SuperscriptBox["s", "4"]], 
             RowBox[{
              RowBox[{
               RowBox[{"-", "b"}], "+", "s"}], "\[GreaterEqual]", "0"}]},
            {"0", 
             TagBox["True",
              "PiecewiseDefault",
              AutoDelete->True]}
           },
           AllowedDimensions->{2, Automatic},
           Editable->True,
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.84]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}},
           Selectable->True]}
        },
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.35]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       "Piecewise",
       DeleteWithContents->True,
       Editable->False,
       SelectWithContents->True,
       Selectable->False,
       StripWrapperBoxes->True], ")"}], 
     RowBox[{"\[DifferentialD]", "s"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830619099119444`*^9, 3.883061915447943*^9}},
 CellLabel->"In[134]:=",
 CellID->561467092,ExpressionUUID->"de05be84-07a6-4058-9373-c0d0ec9b691d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", "b"}], "2"]], "Output",
 CellChangeTimes->{3.883061916498948*^9},
 CellLabel->"Out[134]=",
 CellID->299808776,ExpressionUUID->"873a43ce-32b8-40ff-aef3-ac76307ab9f1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["variance V(T)", "Subsubsection",
 CellChangeTimes->{{3.8830619242709446`*^9, 3.883061928005945*^9}},
 CellID->53982976,ExpressionUUID->"c2de0eb3-3829-4ee4-9146-5b2c049f80c8"],

Cell["I will compute", "Text",
 CellChangeTimes->{{3.8830617684829435`*^9, 3.883061770449963*^9}},
 CellID->169186762,ExpressionUUID->"a0a9f56e-aa96-4ba5-8302-450e0636ed00"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"V", "(", "T", ")"}], "=", 
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"f", "(", "s", ")"}], 
      RowBox[{"\[DifferentialD]", "s"}]}]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
       RowBox[{
        RowBox[{"s", " ", 
         RowBox[{"f", "(", "s", ")"}]}], 
        RowBox[{"\[DifferentialD]", "s"}]}]}], ")"}], "2"]}]}], 
  TraditionalForm]], "Input",
 CellChangeTimes->{{3.8830617723549595`*^9, 3.883061811110944*^9}, {
  3.8830618463739443`*^9, 3.883061852368946*^9}, {3.8830619370419426`*^9, 
  3.8830619532719584`*^9}},
 CellID->99651704,ExpressionUUID->"f844272e-4e21-4152-9117-81453fb0bc91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Refine", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SubsuperscriptBox["\[Integral]", 
      RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["s", "2"], " ", 
      RowBox[{"(", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              FractionBox[
               RowBox[{"3", " ", 
                SuperscriptBox["b", "3"]}], 
               SuperscriptBox["s", "4"]], 
              RowBox[{
               RowBox[{
                RowBox[{"-", "b"}], "+", "s"}], "\[GreaterEqual]", "0"}]},
             {"0", 
              TagBox["True",
               "PiecewiseDefault",
               AutoDelete->True]}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
            GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}},
            Selectable->True]}
         },
         GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
         GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True], ")"}], 
      RowBox[{"\[DifferentialD]", "s"}]}]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", 
        RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
       RowBox[{"s", " ", 
        RowBox[{"(", 
         TagBox[GridBox[{
            {"\[Piecewise]", GridBox[{
               {
                FractionBox[
                 RowBox[{"3", " ", 
                  SuperscriptBox["b", "3"]}], 
                 SuperscriptBox["s", "4"]], 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "b"}], "+", "s"}], "\[GreaterEqual]", "0"}]},
               {"0", 
                TagBox["True",
                 "PiecewiseDefault",
                 AutoDelete->True]}
              },
              AllowedDimensions->{2, Automatic},
              Editable->True,
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
              GridBoxSpacings->{"Columns" -> {
                  Offset[0.27999999999999997`], {
                   Offset[0.84]}, 
                  Offset[0.27999999999999997`]}, "Rows" -> {
                  Offset[0.2], {
                   Offset[0.4]}, 
                  Offset[0.2]}},
              Selectable->True]}
           },
           GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
           GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
           GridBoxSpacings->{"Columns" -> {
               Offset[0.27999999999999997`], {
                Offset[0.35]}, 
               Offset[0.27999999999999997`]}, "Rows" -> {
               Offset[0.2], {
                Offset[0.4]}, 
               Offset[0.2]}}],
          "Piecewise",
          DeleteWithContents->True,
          Editable->False,
          SelectWithContents->True,
          Selectable->False,
          StripWrapperBoxes->True], ")"}], 
        RowBox[{"\[DifferentialD]", "s"}]}]}], ")"}], "2"]}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", "b", "]"}], ">", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830619710749464`*^9, 3.883061987605944*^9}},
 CellLabel->"In[135]:=",
 CellID->549326758,ExpressionUUID->"ef13bc56-2337-4d7c-be3e-c7af11fd6773"],

Cell[BoxData[
 FractionBox[
  RowBox[{"3", " ", 
   SuperscriptBox["b", "2"]}], "4"]], "Output",
 CellChangeTimes->{3.8830619940379486`*^9},
 CellLabel->"Out[135]=",
 CellID->285545988,ExpressionUUID->"2130ca5c-78d9-4faa-8e3d-162f61aed2d7"]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Question 2", "Section",
 CellChangeTimes->{{3.8830620030509477`*^9, 3.883062004301948*^9}},
 CellID->28347930,ExpressionUUID->"04b7ece0-e23c-4fdd-9c01-d0abba729048"],

Cell["\<\
The length of time to failure (in hundreds of hours) for a transistor is a \
random variable Y with CDF given by\
\>", "Text",
 CellChangeTimes->{{3.883062015059945*^9, 3.8830620323499427`*^9}},
 CellID->235834719,ExpressionUUID->"a9b8c6cd-a2b0-4721-82ec-21a9f9d90054"],

Cell[BoxData[
 RowBox[{
  FormBox[
   RowBox[{"F", "(", "y", ")"}],
   TraditionalForm], "==", 
  TagBox[GridBox[{
     {"\[Piecewise]", GridBox[{
        {
         RowBox[{"1", "-", 
          RowBox[{"Exp", "[", 
           RowBox[{"-", 
            SuperscriptBox["y", "2"]}], "]"}]}], 
         RowBox[{"0", "<=", "y"}]},
        {"0", "True"}
       },
       AllowedDimensions->{2, Automatic},
       Editable->True,
       GridBoxAlignment->{
        "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
          "RowsIndexed" -> {}},
       GridBoxItemSize->{
        "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
         "RowsIndexed" -> {}},
       GridBoxSpacings->{"Columns" -> {
           Offset[0.27999999999999997`], {
            Offset[0.84]}, 
           Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
           Offset[0.2], {
            Offset[0.4]}, 
           Offset[0.2]}, "RowsIndexed" -> {}},
       Selectable->True]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxItemSize->{
     "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.35]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   "Piecewise",
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True,
   Selectable->False,
   StripWrapperBoxes->True]}]], "Input",
 CellChangeTimes->{{3.8830620350469437`*^9, 3.8830620728809457`*^9}},
 CellID->935198403,ExpressionUUID->"4c542c79-95b1-41f9-9fac-ab299209eb51"],

Cell[CellGroupData[{

Cell[TextData[{
 "Show that F(y) is an increasing function with ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", 
     RowBox[{"-", "\[Infinity]"}], ")"}], "=", 
    RowBox[{
     RowBox[{"y", 
      OverscriptBox["\[RightArrow]", 
       RowBox[{"\[Limit]", " ", 
        RowBox[{"F", "(", "y", ")"}]}]], 
      RowBox[{"-", "\[Infinity]"}]}], "=", "0"}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "5e5f5a7f-a906-4dca-8996-5f49f13b424c"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"F", "(", "\[Infinity]", ")"}], "=", 
    RowBox[{
     RowBox[{"y", 
      OverscriptBox["\[RightArrow]", 
       RowBox[{"\[Limit]", " ", 
        RowBox[{"F", "(", "y", ")"}]}]], "\[Infinity]"}], "=", "1"}]}], 
   TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "153960be-e7a6-4937-9852-2f8c060ab8e9"]
}], "Subsection",
 CellChangeTimes->{{3.8830620801319475`*^9, 3.8830621077449484`*^9}, {
  3.8830621571809425`*^9, 3.8830622193969417`*^9}, {3.8830622586939793`*^9, 
  3.8830623252429433`*^9}},
 CellID->199948858,ExpressionUUID->"ad7d240f-dc84-4477-92ac-9cc7ffb28150"],

Cell["I can use FunctionMonotonicity", "Text",
 CellChangeTimes->{{3.883062332451943*^9, 3.8830623380199437`*^9}},
 CellID->301683163,ExpressionUUID->"b32ae52f-d33b-44ef-8143-4e41d136bbb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Q2$Distribution", "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<CDF\>\"", ",", 
       TagBox[GridBox[{
          {"\[Piecewise]", GridBox[{
             {
              RowBox[{"1", "-", 
               RowBox[{"Exp", "[", 
                RowBox[{"-", 
                 SuperscriptBox["y", "2"]}], "]"}]}], 
              RowBox[{"0", "<=", "y"}]},
             {"0", "True"}
            },
            AllowedDimensions->{2, Automatic},
            Editable->True,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{1.}}, "RowsIndexed" -> {}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.84]}, 
                Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.4]}, 
                Offset[0.2]}, "RowsIndexed" -> {}},
            Selectable->True]}
         },
         GridBoxAlignment->{
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{1.}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.35]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        "Piecewise",
        DeleteWithContents->True,
        Editable->False,
        SelectWithContents->True,
        Selectable->False,
        StripWrapperBoxes->True]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8830623453719444`*^9, 3.883062379233944*^9}},
 CellLabel->"In[137]:=",
 CellID->28715596,ExpressionUUID->"b8917b27-ca0f-4aab-ba75-affa496b327d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CDF", "[", 
  RowBox[{"$Q2$Distribution", ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.883062339012943*^9, 3.883062341341943*^9}, {
  3.8830623818459435`*^9, 3.8830623977789507`*^9}},
 CellLabel->"In[138]:=",
 CellID->529604306,ExpressionUUID->"b0c9e1a3-0480-4ea9-ada2-fe9f05d180da"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\[Piecewise]", GridBox[{
       {
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           SuperscriptBox["y", "2"]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["\[ExponentialE]", 
            SuperscriptBox["y", "2"]]}], ")"}]}], 
        RowBox[{"y", ">", "0"}]},
       {"0", 
        TagBox["True",
         "PiecewiseDefault",
         AutoDelete->True]}
      },
      AllowedDimensions->{2, Automatic},
      Editable->True,
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.84]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}},
      Selectable->True]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.35]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  "Piecewise",
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True,
  Selectable->False,
  StripWrapperBoxes->True]], "Output",
 CellChangeTimes->{3.883062398235945*^9},
 CellLabel->"Out[138]=",
 CellID->237067158,ExpressionUUID->"ea814f2e-ca82-4a1e-847a-f984638289c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FunctionMonotonicity", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"$Q2$Distribution", ",", "y"}], "]"}], ",", "y"}], "]"}]], "Input",
 CellChangeTimes->{{3.883062401057949*^9, 3.8830624079759436`*^9}},
 CellLabel->"In[140]:=",
 CellID->90766594,ExpressionUUID->"0fd5ba8b-b029-496e-8152-24dcc2e73bce"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.8830624041649466`*^9, 3.8830624084779577`*^9}},
 CellLabel->"Out[140]=",
 CellID->229294726,ExpressionUUID->"528dc780-d288-470f-ba8b-8ac1f802204a"]
}, Open  ]],

Cell["\<\
An output of 1 means the function is increasing. This is a screenshot of the \
documentation for FunctionMonotonicity.\
\>", "Text",
 CellChangeTimes->{{3.8830624135469604`*^9, 3.8830624673649535`*^9}},
 CellID->161214560,ExpressionUUID->"be05f1bd-4f74-4863-9a9c-aee52e3cf723"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3W9sHMed8Pm5Oxzm3hC5e8FXBhEciIAHCLo94Z7zEdEBAp8XEowYhvQY
J2N1UORdnbQRc/LS3jBcwnli2SHXsZlNSNsbJZkNk7WphIgVKglXksmNqYxl
U6Rl06RNSiElkRJNWaSskU3JEu22Fd10V3dP/+/q+c/h9wMhiIfd1dXV1X/q
11XV//Pf/v1/2fvfxmKxf/gf0v/zX/6mpeGxx/6m9cH/Mf0f//cj/7Dv7x7Z
8//e98i39vzdnsfq//a/S//4+/8mFvvefx+Lqf//LgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAleiL98evnhz/5Lb1t+WPhwcW
hwY+/PNyqXKVi0/G1Mwvji2UOiPhvAofAAAAAIDKdal3dl9sek9suuOwpTV8
fuEJ9cfzh8+XLmfZWzqo7dHBoVJnJIx34QMAAAAAkJ2F1JD2at7y78OpK7eX
lbym/84nuaQx2XV+j9YWfrL7RubXtReIuH391tSIcYyuKvk6RBrRQyM17/qD
d+EDAAAAAJCdoYuimen8F595cv/lN5fu5Cf9pqWcElFuDnVe+mXi6kVr23sN
BSLuXDm98KN1M45jtK/6QuL4jTx1UxD5uZh0/8Wz8AEAAAAAyI4eiDj/bMul
n2n/Xth2/lvVZjji3E+HPs0leWUwH4EIT2slEPHp2x0X9hnRoce3XVQP064L
5jF6bPsHZ3MPESiLL/gFIgAAAAAAyCM9EOFogX7x/qmFf64VTd1z3aPZ94uY
SZwnEOFFNhAx061HIb6178q5FcsfFGW8Z/YxEYtoWrqWY3b0wiQQAQAAAAAo
MO9AhCa1dLBGi0Wsnx/3fud+Z/nqR6Pq3AJX35n71DFG4Pb1G+8kF3/XeE5N
4Wvz5hwU7u9EZKY+GPlo8YZX0MPzAxkBgQhFWTz7oZpgMnXh+hdBu59dTswp
L1Y+NZe/tuKxeCZHN26mSyO95OhZUVBygYiFD74fDwg13LnSN6eFKWYODn1m
/cPHMx9ai/r2deMwzbtmllj59ML41aEXL35bTWf2JXOqEHMfQ75OElQHDJ/9
+XXrBBRfXBNHZ+DDKf+jo9y4Lcr25PiN4LIFAAAAAKwmAYGIdGNw+NIjenvZ
2SpX5hcT9bZZC/bVzv1+KtOuTDZ5TT1ha3rfuXL68r9smtlnW2CmrSvlbHR7
xhy8AxF3LvZf/Mcq2xa/df/7r4dMdhExJw0LF5TbbybmvhW3LF91/t+GvYax
rNw4/sj5b9oL6vDYFZlAhD5RZHzuj76fKP3k9/dpyd53+ZLlV9ER5YnE8u3Z
xYR9v75Zf2lo3lIafpOEmJ1Y/AM+18acM1eo01YM3nRFrZYPb0z/9cJv59TJ
LoyeNnohf7f9Q2chKzcH7SW2J37unzqvXmGSCgAAAACoAIGBiLt3P/r1erUl
+MgBW2NRmV54Mq63vp9pvPSzlrm2e7QGafzC4Wm9kfvuy+qME8+uF30qZn9m
zEFxdFJPY+Sp86KB/M17RCIXnzFatT/st7fopQMRHycvidEK31w3+0J6c42z
elCiYeGCbxFEz0nd3PNbZrTlL/xIm7HhEVEa7oiB8vHhBr01/cgGNUsvbDv/
iCV8ERiIEO336Uce/zCgCf5x/5yW1Gz/YuZHEYh4ZMN5LVQy8+jmuXTJ/2jz
Ob11X3MxmTIWnfxAPS4PnndMFfKzlz8KKOe0a0MXH4vZ6sCTxrQVTyY+tmdY
7Mi5H+67oGag6lzbLtvynces3Tk+O9l8TsQo/lGbECNdYt/ksx0AAAAAUBZu
vPWb4AX+otxWlmYCFwkJRNwdPaA1yTcuZJJRrnVrQzYe222dteCLyYPqbAb7
dl6xxiz0fhFec0QoE/Pfrb90fPK2pdH6abJJa4Suf3/SuqhsIOJ2/1at5d64
mMmD2nVhvn86qEdE9Jyo7+if78t8sUKZ1n//Yb+1TX1n9MA5fc7PwUziytK1
w9vPhQcilq/8UFvmhcHA7hyLH3zflZQ+NUf6cGy49OpsppvKtbF5EUF67MA1
W6wgoBp4Fr45ZmT3FcvXNMx5Nc/9NGktBz2i4pzpQvn4N+L3nVc+du7OzAuD
mRCQWmLt+ZiTEwAAAACQvQ9/25Jur90YPeS3wJ2V5fmOTXP/9X9Rrs35JxMW
iNCbtNWXRo1fLvVc8Jk4QnSfsL2aDwhEeJte+K8x0Y3f8qNsIEJv8Ia03POQ
k3M/O+kYhWHEQKxdRxYut2ut7ycOfuwsKv0rFYGBCGNbPRPBGdWnm3gikemN
oR+1uvm3XY13Y7jHxaT1T9ECEXdOPT7jUwc+HdzpHiqiH5dvt1x1jML4oHfW
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
uum5/tmf1ms7WnXPZnX5ll2b79HKyL5B946Hb0ayQjg4q5YynWiIu46YqKPV
1VVm8uaxdcxsIpMLPejQOJhZUYs4xONxRyhuoqMuZhmxJF+Zoxf68rHdcWu+
xSLx+381H1Rw7mcYqVIKrcQi9Yea1MXEnjbuf0nci4yzzNgZM6tbe80SkKpl
YVUqhz1UJjrWxywZMLb/lQceVbPzfNIV/fPhLqgNmZuu7bogUyxG7bZkTKs+
8S0vzeWl3G++ur/KkttMdq0PEqGnst+NVqLip/p3xj2K60tffdh2pQ6V3xM+
Wore3IdOr1POsjKzZBwEsxRqDlg++CV3H7m3sUndqsjwrmcHlqU3kJdrThmc
gvl9gIiyB8E54spbyMMemMPJl9O/PagtUN2wV3+kMlL2L7/IT3MS28mkJuZS
c1Wg4HZc5Vclv0BEoaqS1B0wQilHuOxbFan+Bj9PFL7+Rng+kropFvr5qFBV
uujPR+Xq/ZO9P3XoPfm+3LqZbjRaE9jSJlRbylrNdAciFnq3qgUYbzhoiRSl
xjq0alTdNGQeVqNHQLyh47T5psW4xFg+gKKMHtBqdE3TYOaFjDLfv7vGdcb7
jBuQT0E2Tx5bMvfbsqYaxOvLxNQ85rHxybGo8Y6T3NH2dXKmLpKue3oss8tL
p/sG/d/PLxze/3DitPVFu35yWPsCuDIcuhnpCuFgr1oenSEse53+w+6+WTN5
Pd/WzxlJ5kJcXa3hX7Xq13Uk9MCbPXOZ0IR0xXGSKHSxiw/1ZXbcXq28C879
DBOllPwrcWZPDzp6vWhnme0cU1eeem6jrUAldji0SuWwh2JOlvXfOZUpPlG1
bLe9UOYlZXf/vDWXoj5ZcyZVLJnkLLm373Su5a6MPrut9fisZVW9emaWCb9i
+N1owyu+GJAa33bIUlzas4UtHCMhzyd8hBR9ZM6ZMesZ2ue+u2hLOo+fsnS8
sdpS+6XvI+5jLreB/FxzSn8KFuABIseawJW38Idd4qnGb7pA3/LL7mkubDuZ
1ERUz/EGSbzz8G2wVn5V8gtEFKwqSdwBI+RB/rJvU5z6K/E8Udj6K/98JHXP
KsLzUYGqdNGfj8pVfgIRomVsNIy1l8QiQuYKRIgmdHxnv7OdpB8R52G1vX1W
TR+813Zt0N/NrO+YcFxiloeaqh1XEe9mfYQUJPPksSU9WBb09jtCIEKPQtoi
EVocIuDFjDN10aaue+q05DQFdsqNq1fmxl/WhpFZr7+uDIdtRr5CeP5d2x/v
zhAasdf3Hpy2536w0Z62dC70i03HhPXvjYMp9bKbqQBipy1Zl644gbwLXUx/
9NBvfMdieO+S+xlGspSCK7GeurWNohFn2ea2o87RbdpQROemA3c4tOZmv4cf
Ht6e/u8vPz1mW0xbOXPMw+ljeNxno89NPKRY9CtU4FvXvJb73ZXrV66cHRET
1Ji3w/Arhu+NNrTiv91e4869M5wnI98nvHSKPvT03OeMdw+1L+/tdo3/1A6D
XoLy9xHrA1GEDThlec0p+SlYiAeI3GoCV96gPczTYZd4qglpYLnKL8unOfmG
nN7F1daSE+04/w1UflXyDUQUpyp53gHl8yB/2bcrSv2VeZ4oaP2Vfz6SumcV
/fkof1W66M9H5SpPgQhRJuI01w6tfsY7AxH6rKheZSfKPlMHfdrgzp/FI5HX
BUa/OFgOu3eSEVKQzJP7l4D9zogQiNDPH8upFxaHcKdu9GaqWret/ZDcvInK
jZkTiVZrJ6pYyI6HbSZChXAwq5bRyeuvnvPoBeZzNXX8HCEX4j5u3Jq0FdXb
jxaxNOqQuM56XG/CK46H0ELXCyBevWl/4pXwqdN8n2FyKKXwXRJnmS9bt8Gw
HQ6ruVnvoXF4Nx60RLT0+LRfm92LdjJ6XVJcOZMqFv8rVOA+y29At3J5vK/T
2oM0Zi+d0CuG7402tOLr17PGQcudVn/l4NNC9pH3E14yRTEPlYWYkkofzOWx
Ie/AsC+xYLb3EekN6HK+5pT8FCzEA4TcHuhTw1kYM4lx5Q34OU+HPfypRr6B
5fcXqcMRaTti5zPttrA4xBqoSr6BiEJWpbA7oPQ1QPqy71SM+ivzPFHQ+iv9
fCR3zyrS81EhqnTRn4/KVb4CEeIdvRrC0YrMeFfvDEQEtbxsyUkfooAT29Ud
wzvJCClkHYiQanFGCUToUUgz8hAah/DcTWX+ZJc5AUv6odLeM80hNdScmSul
6p66us279CksAgMRwZuJUCEcxJrGUOiqKs/3m5L3jSi5EBdRcYvRrrciFe1n
PT6hXdxs18WsAxFShZ5e7ExfZpqlqnWOTmShG829lEJ3SaSVmezEru2osWnJ
HQ6suTk8Dhs3k6r6XZ2H0m2IQ+3313qMFA3he0lx5UyqWMIeXnz2WX4D2n53
bzEfv+LVtXX3bmsUo0TtLdTAK0b2N1qjaRuvvb81cWRg4Ehif73HFDTh8n/C
y6VodNk1ib/4b8h7qFxmSK5D9+hySL7DikBqA6p8XHNKfgoW4gEiUt2yMLbF
lTfo5zwd9tCnmtwbclKHI9p2RBdXo+UWGodYA1Uph0BEdlVJ7g6YaylL3MsL
Xn9lnicKWn+ln4/k7lnFeD4qUJUu+vNRucpbIEIEr6oPDFnjEK5buRjq4hnE
0f8UNRAhxoN5RjrFn0IDERFSyDoQEbDfGZECEXoUUp+YQMQhArv4B5ytK5fH
XzEqdk1z0rNin+8Wwb761r7MC7DwHQ/bTIQK4cyQ+bynDslIaf1o7RHDgL12
/BwpF2JOULXctZ4PRsBB+1mLT2jvVO2TdWQZiJAsdINyY2bEuOnGG7p9rstZ
P8NIVWK/3IlTKWg6DG3taDvsU3NzeRxOP4/0bHUEyeO1+/qdczQH8u6/6ZUz
qWIJuEL5pxxlA3eXk83aC+7aHV0nMpF8/0uGzxUjlxvt3dTw4+vt5R6r2tIV
/Okct/yf8HIpavN7WYm5vXy6Xnokq48CDZ5qINv7iPQG8nXNKfkpWIgHCMl3
zuos0zbGTGJceQN/zs9hD8lhPhpyUocj4nbEK0+xtGjHBY71qfyqlEsgIouq
JHsHjBSIkLjs+ytc/ZV5niho/ZV+PpK7ZxX++ahgVbroz0fl6vNb1685XL/1
udy6jldHWlWsrqmJu1rulpIXPWE8Xt2n+h6yHyTJQ6R33nFH35Sxp7UhPK4p
BJ1JRkgh60CEsd/+cy/ejRyIEFFILSKmxSRCulqFXwFTg+oMMN4XEHFFcI47
jhaI8NyMfIVwMAIRxvyUoqOSMxQhee+Kkgsx8EItbXWtzISC2ucz0nVF1Cd7
r7zsAhGyhe6gTB/U4sg+cansHxZlKrFf7vSzLPgOnOUOO2tuLo/D2mC8mqbj
4yOHOtWQeOLIyEzYYBef/fC4pLhyJlUsMgvlVO767dg5gDL0kuG8YuRwo108
vF2blOpU+g7eli74zkPOz3zLyf8JL//460WUrMeGXOvLnF3Z3kfkN5Cna07J
T8FCPEDkVhO48gbtYd4Oe0gO89GQkzuTIm5HdHFVX+GJNl3kwRMVVpVyCURk
UZVk74CSeZC/7IcpQP2VeyYoYP2Vfz6SOtMK/nxUuCpd9OejSuTsw2p808tS
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
xOPAvzyZOejuQITETjnKw+Mom1vxPFqRjn14fsyvsmiLmCVw/6/mvcpW8iTV
y+ehpqYaI5+N+1+akit0N9lAhPF5E6NgxCWq9runbpr5ekn7Dqt+nmaWsVwf
peuP+ekU254DAAAAq8/7J3t/6tB78n25df2+mvGl9Y/+6oz1baNoejgen52t
Rztl9IAWhqjZ3Z95d6gsne4QT+yWtoBYsqZp0PZKdWXquY22F+fe4YSFw/sf
Tpy2rpnq36luIfMyNftAhO9vkvxWNV5px2v3ZQrHaEJbZuaQLBnv1G27ax4N
a1rKfP/uGs8Wf1ipyCYnBslbDoUWu9qZSGy1pacMNdlDEz6BCK069WU+56If
ausXMfUvhnznVKb6ioCYtd3otNC7VUunocPyjn1lts9VOrIHxOvA+wUiJHbK
Kz3fmUBcy0Y99qH5EYs91Gctq+N9w/7dE2RO0sxJ0XDQ0SEhm7NAMhAhNlr3
9Jj1EtU3mInOaFXDmSVl6XhjtSX30vUnp0+nAAAAAGUk90CE7asZjdvu1T6b
ofYstnS2VoYfr3ZEIkQcwv4CP0O0Ld29KNwNKBHk2Nx21DmeX5vrIPM6XWIO
RuXG1Stz4y9rcyRYGk7lGoiwNuVU0wfVntyZtpVsyXinbt1d/R22+4uey0NN
1bZtSgUipJPTa4Exxkf8dzrjWleJTCtUi1cEN+TFL859VgYbY7b27IeHt6f/
+8tPj9kW01a2dcHwKjB3VXZmQ/qARApEhO5UboGIyMc+ND8ivPTQb7Kb6cDn
JPU7KbI8CyQDEaJTV91Tp31mhtA6THx5b7drshFtho7GQcWS8/D6AwAAAFSM
3AMR7gdl42We9S2y6MOcedgOjkPovfI9Gn+uBpRo1vgyF/RteSk3Zk4kWq3j
Puwrlm0gwjtDmZ9lSyY8dZGSV1Ncb2UGjYpw/ySfnN6VxmhvqitqDV+t44Jt
DpJ401CmXesXiPBpWFp+FtV048Fp12gN38CNqMmZaIl/6tIHJFIgInyncgpE
5HbsPX/WB13FqzftT7wiN1Vl6Enqu0PZnQWyQzOMQRVV67a1H3JNVal/4seP
SF6+/gAAAAAVoxCBiLvud9nGRBFG5CEkDhH2QQ5Xoy0z1t2u7eh5vxU1qaHm
zBx2VffU1W3epY+eX/2BCNmSCU89YB+cpSATiIiQnKgnejNYjU6JgIP2sx6f
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
ttQ551t7bcIratRAhPyR8qcsTfap0ZGqdQ93nfDuORVYvHJbAVafEgYiPrmt
7P/nP4ooxLMvjZQqG8DqQSACALIkGhvx2n19Zo9uZaJDbRbVdZgTXevN6Zqm
wcw73pWpg1o7ydLYkkpLkvahgli8oSPzAlhZOt2hbdLSNNIWs+VLDzyYzRYj
77szmbqrzJ88ab4N1t9I2zYll7T634nEKUvDVt/dTK9+rUjqnh7LFNvsicym
/QIRao+NzAyWetghM5Oh+OSFddYBka8ogxXCAxEy+y9By6xPyGD64L2x2L0H
p80f1FGURoNbzVu6LV5dr0VBOgftL9q1pmhwtVq5PN7XuUtr6G5rTfi0dHPM
8N3l0W4z4Gb9+klquPP+2hpL54TgDLvb/JLnnF/tdQitqFEDEfJHykv6LBCd
IDa1BgWGQoo3bCvAalXCQMS//uFdEYVofv5PpcoDUO5Wrl/JOLInfYe69wdv
ZX656vu8QSACACw8Gxvis5Lmj6Lh6+7WIIIFmcaVTFq2q7ebcfVWe7Lb3yhr
nHNEaIvd23rYMU+COuJeb7Ys9+9U2zA7+32baSJNVxMxPGmH9J7NjSe1wf6Z
BRYPb4+rrcRT3q0tn0CE4yYlyj/zo9dMGVpK1lf1IUIDEZH335sof5/PQWiZ
dv/NaCUfaN/RPOj3RRGfdTXnj7ZqbeSaze19PtN25DXDRn21/WX5WPMB6xkT
lGF3RZA953xqbxDPiprl0AyZI2VbIbwThBfv4pVcGVh1ShWIOH3miohCtP64
6N+UBlYR20cw3PyfrQhEAICFZ2PD0dL1aAYIjiCDTFpyV29lsNGzeeVITDQa
fYilfPPuSNN5X5BIWqO2rDr1QQueC5hzRFTds3m/8728XCDCeedShpri6f8+
mOlZoTcII8wrGBaIkN3/EHpWfTYjJhXxSGyh576YvSeJ97o+CavTDiTUWIQ6
FiFaLCLLDIvisqymTHTt6z7vWjcwYWvKsuec3FwfdyUqanaTVUocKX378yfl
OkF48S7eaGkAq0epAhHffuFPIhAxce5qSTIArA7GRzAyX8LQxnMa/MfIEogA
AAuZ4IGj7ZOh9VSPFoiwXb3d9Ku3aHjY+sB7Jaa/NrZe/jPESHvfvDvSdN4X
JJK2DIvX4gx1dZt36YP9HdsTgwT0RmDN9swkgdkFIoxpL6rq9yeODAwcSezX
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
IiJ6oeNk7i8bAoyR0U5EZCz4504zF3H6XFaemwMmEv1/WhIRACDpvxRXNQ4d
Dy4yH1/Tnl5PmooeG6h7ckq+ZW5ZoGhR0P48vHIs5YZZx0VptLSxYrq1pflz
qsyG6ne/ZwR7BupWGFEKVrd5nKF1PzPyzILEwbU+sE3Dj/VstzYuL3965eHE
kxhJp2Q0pruv3tbg/DnV9rn9+jqKlrBpT/DTD5SycqS96of2s1tRN6A8xNfW
gq4NPj5NC/Cd5dVuL2DQVl8oeKbFHlKMqDtOJro5NtQVDn1kP2znhuLk/UxH
ny0I5D8we2WwOb3cSaYNltmaXmsTo32ttldteDdYfhJW5vWg8BPmc/U6Ti3F
hZpRIkLhk0pJxGiuWjIlP1Dw7FHvOim6F5jgcjYRISz/fUgmIn69+fC33347
1s0BxhUSEQBgof9SDAS0MUv+lPml5eWlxno69nHU2epZ+tZAwcySclFpvhwx
Bf6hyjJpXTFWGg1LSkSkjq5NpZfD+Qdma00t0QZkgTlv9Rsnog3lAkVFhfEo
JetDw5YzDBRM07aKM5ymDeSsN7Z7/zTTWqNEjvSsNfRlDs3myQgFZeHr1jNI
SkTIczI6tsRISFgfFJC37BNhZdd/94dPifqbwq438p0UEhHD4bJCS7eVl8x+
QDtO4eo2xY9uMLxJ7Lbke38jznnW8vLytfudR9NX6yxtNOOdb6qUfWR2YqRl
tZ4XcC6rqS2qEFjV5NkSbXrA1sr52vh22vzKPWpvxEy/wXeGO7dXxJtsmSfR
Xz1LbJla1Z26wfpB9bmZeVMX6BM1d3bp31D6CfO8em1SX6jpJiLUPylvsaGu
PVp2JH/Kkqpm9zksyt0LTGy5nIgQXqvtkLmIraGTY90WYFwhEQEAFnL4ESha
scec4x3r3KANlIo3dMYrGav8F65qTNyWjHZv1kdOlvGBUqz0GuZMRKi2dGmi
0p3YwAcfmHeDjTvSgVkbbPea9f0CszZ3W26p629SsJ5fpCkYPGZ5cMI4vDmr
X8b+8R4zcGzoeLPlMB6JCG3mRWIFSyPtkFjJUL7ywrrqgJ5rSesNk6kTEXoO
xfYBx4+T1oMJemM9UgY9mx/My3twc4+5QXtmMj7g1tomxuIF0/UsyMZG+412
fSiqchFFL3Ts2ViiD3fnV6hMkUirwXeG26rNBJj17SeRlo0PFxVaJif4Nzh5
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
    "], {{0, 259.82251795155577`}, {846.6733783594577, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{846.6733783594577, 259.82251795155577`},
  PlotRange->{{0, 846.6733783594577}, {0, 259.82251795155577`}}]], "Input",
 CellID->463624413,ExpressionUUID->"b6359aaf-11d6-4e19-9e13-52acdc861ada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"$Q2$Distribution", ",", "y"}], "]"}], ",", 
   RowBox[{"y", "->", 
    RowBox[{"-", "\[Infinity]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830624722909503`*^9, 3.8830624852179527`*^9}},
 CellLabel->"In[142]:=",
 CellID->384047707,ExpressionUUID->"1d8aaf72-ecbf-428a-8ebb-6fe4aecfa4ae"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.883062485809946*^9},
 CellLabel->"Out[142]=",
 CellID->902042668,ExpressionUUID->"f042d657-8d4c-45af-96cf-a5b8bce3c9f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"CDF", "[", 
    RowBox[{"$Q2$Distribution", ",", "y"}], "]"}], ",", 
   RowBox[{"y", "->", "\[Infinity]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830624722909503`*^9, 3.8830624885119457`*^9}},
 CellLabel->"In[143]:=",
 CellID->10754465,ExpressionUUID->"324ae388-41c5-411f-a784-6dac1e78cbca"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.883062488869944*^9},
 CellLabel->"Out[143]=",
 CellID->365582670,ExpressionUUID->"56ae7a39-c2c4-43ba-9118-5df3fc6909e1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Find the 0.50th quantile, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Phi]", "0.50"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "fafded73-8493-4439-85ea-3719297153d5"],
 ", of Y. What does this value represent?"
}], "Subsection",
 CellChangeTimes->{{3.8830624944599485`*^9, 3.8830625118819456`*^9}},
 CellID->113214160,ExpressionUUID->"a99c8314-0446-4b4a-a6b9-62156b10f3df"],

Cell["I will use 1/2 instead of 0.50.", "Text",
 CellChangeTimes->{{3.883062514548947*^9, 3.883062521700957*^9}},
 CellID->829067146,ExpressionUUID->"548d3594-be59-4bb9-8cfc-6ec5633ed1d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", "0.50", "]"}]], "Input",
 CellChangeTimes->{{3.8830625232089415`*^9, 3.883062527019944*^9}},
 CellLabel->"In[144]:=",
 CellID->496306759,ExpressionUUID->"8419d17c-2e17-44ef-a4ff-d707df7a6c16"],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{3.8830625274169436`*^9},
 CellLabel->"Out[144]=",
 CellID->66240140,ExpressionUUID->"38155a13-24d7-40c0-b2db-2afefde39500"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Quantile", "[", 
  RowBox[{"$Q2$Distribution", ",", 
   RowBox[{"Rationalize", "[", "0.50", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830625293019648`*^9, 3.883062535111945*^9}},
 CellLabel->"In[145]:=",
 CellID->7899629,ExpressionUUID->"2c39831a-2965-441e-82d7-c2a2dba7ff0e"],

Cell[BoxData[
 SqrtBox[
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.883062535582945*^9},
 CellLabel->"Out[145]=",
 CellID->46415396,ExpressionUUID->"d0ce937d-337b-469b-9127-65ff31877ce7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Quantile", "[", 
   RowBox[{"$Q2$Distribution", ",", 
    RowBox[{"Rationalize", "[", "0.50", "]"}]}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.8830625293019648`*^9, 3.883062539851945*^9}},
 CellLabel->"In[146]:=",
 CellID->670896559,ExpressionUUID->"863288a1-d6f0-45f1-bfed-459e21a1b1ca"],

Cell[BoxData[
 FormBox[
  SqrtBox[
   RowBox[{"log", "(", "2", ")"}]], TraditionalForm]], "Output",
 CellChangeTimes->{3.8830625404499474`*^9},
 CellLabel->"Out[146]//TraditionalForm=",
 CellID->297677466,ExpressionUUID->"02538f7c-2158-4dfb-a88b-2593176fe308"]
}, Open  ]],

Cell["This represents the median.", "Text",
 CellChangeTimes->{{3.8830625507339506`*^9, 3.8830625543949437`*^9}},
 CellID->298902481,ExpressionUUID->"8306fb07-a490-4a96-9de5-1b053bfe7dd6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Median", "[", "$Q2$Distribution", "]"}]], "Input",
 CellChangeTimes->{{3.883062555290943*^9, 3.883062561277943*^9}},
 CellLabel->"In[147]:=",
 CellID->161111358,ExpressionUUID->"03783ccb-77d8-4e26-85c2-dabe7fa51993"],

Cell[BoxData[
 SqrtBox[
  RowBox[{"Log", "[", "2", "]"}]]], "Output",
 CellChangeTimes->{3.8830625615079436`*^9},
 CellLabel->"Out[147]=",
 CellID->464259687,ExpressionUUID->"a01da1d6-de1e-41d4-bce8-a363a9b87c71"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What is the probability a transistor operates more than 100 hours given that \
it will fail within 200 hours?\
\>", "Subsection",
 CellChangeTimes->{{3.883062566570947*^9, 3.8830625875799537`*^9}},
 CellID->260186631,ExpressionUUID->"fcc65fb4-03f9-4ba6-823c-def3a02ab74a"],

Cell["I will use QuantityDistribution to add units.", "Text",
 CellChangeTimes->{{3.8830625931139436`*^9, 3.883062600095945*^9}},
 CellID->170768007,ExpressionUUID->"8fa4b086-3aea-4f9b-8eb6-79daf868c1ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Q2$Quantity$Distribution", "=", 
   RowBox[{"QuantityDistribution", "[", 
    RowBox[{"$Q2$Distribution", ",", 
     TemplateBox[{"100", "\"h\"", "hours", "\"Hours\""},
      "Quantity"]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.883062600907949*^9, 3.883062629951943*^9}},
 CellLabel->"In[150]:=",
 CellID->321884278,ExpressionUUID->"878541bd-936d-4167-b863-18a4aab6bfa6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", ">", 
     TemplateBox[{"100", "\"h\"", "hours", "\"Hours\""},
      "Quantity"]}], "\[Conditioned]", 
    RowBox[{"t", "\[LessEqual]", 
     TemplateBox[{"200", "\"h\"", "hours", "\"Hours\""},
      "Quantity"]}]}], ",", 
   RowBox[{"t", "\[Distributed]", "$Q2$Quantity$Distribution"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883062589060955*^9, 3.8830625906709433`*^9}, {
  3.8830626333009615`*^9, 3.883062708672184*^9}},
 CellLabel->"In[154]:=",
 CellID->186209584,ExpressionUUID->"ec122a36-076d-4c42-9983-5eb719c91e46"],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", "30000"], 
   RowBox[{"1", "+", 
    SuperscriptBox["\[ExponentialE]", "10000"], "+", 
    SuperscriptBox["\[ExponentialE]", "20000"], "+", 
    SuperscriptBox["\[ExponentialE]", "30000"]}]]}]], "Output",
 CellChangeTimes->{3.8830627111071634`*^9},
 CellLabel->"Out[154]=",
 CellID->237169104,ExpressionUUID->"b1219f17-f02b-4941-b6bb-06be5495bf6b"]
}, Open  ]],

Cell["This is a very small amount.", "Text",
 CellChangeTimes->{{3.8830627197107058`*^9, 3.883062726593692*^9}},
 CellID->137335987,ExpressionUUID->"e87843c2-bdfc-4910-ab39-362fd422e142"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"t", ">", 
     TemplateBox[{"100", "\"h\"", "hours", "\"Hours\""},
      "Quantity"]}], "\[Conditioned]", 
    RowBox[{"t", "\[LessEqual]", 
     TemplateBox[{"200", "\"h\"", "hours", "\"Hours\""},
      "Quantity"]}]}], ",", 
   RowBox[{"t", "\[Distributed]", "$Q2$Quantity$Distribution"}], ",", 
   RowBox[{"WorkingPrecision", "->", "403"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830627130981646`*^9, 3.8830627303316946`*^9}},
 CellLabel->"In[156]:=",
 CellID->488546082,ExpressionUUID->"2d2a2724-6819-487d-9c77-0a5f4e9944c5"],

Cell[BoxData["1.\
135483865314736098540938875066248401957431610090318842671552659157304302412739\
157840776517904312521461215132591867454369800199087034960500040230933327799900\
311880714992580848498780342050645076036338073924978387649714391118203394748243\
637772420495411087599363944692006351139042251479816873227816811924325660864133\
289100485821236411966666757213595275736726627609152874149332691657765565498976\
461249262669642558871889`403.*^-4343"], "Output",
 CellChangeTimes->{{3.8830627165531645`*^9, 3.8830627311927156`*^9}},
 CellLabel->"Out[156]=",
 CellID->319590750,ExpressionUUID->"833d30db-30d8-41ba-a6b4-ddc26a93e627"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Question 3", "Section",
 CellChangeTimes->{{3.8830629167622004`*^9, 3.8830629202751985`*^9}},
 CellID->6161900,ExpressionUUID->"0de08371-7de0-4a64-928a-b074e4d8f857"],

Cell["\<\
The operator of a pumping station noticed that the water demand in the \
afternoon hours has an exponential distribution with mean 200 cubic feet per \
second (cfs).\
\>", "Text",
 CellChangeTimes->{{3.8830629278952*^9, 3.8830629549821978`*^9}},
 CellID->603596772,ExpressionUUID->"732c0c4d-60de-4ae4-af47-d9009e0ce786"],

Cell[CellGroupData[{

Cell["\<\
What is the probability that the demand on a randomly selected day will \
exceed 270 cfs?\
\>", "Subsection",
 CellChangeTimes->{{3.8830629573922057`*^9, 3.8830629712071986`*^9}},
 CellID->560038540,ExpressionUUID->"e14c2cec-d1f6-4610-a8b9-d633d3951013"],

Cell["I can solve for what value of \[Lambda] I should use.", "Text",
 CellChangeTimes->{{3.8830629923631988`*^9, 3.883062999328198*^9}},
 CellID->85697443,ExpressionUUID->"28ebec66-c864-49b1-933a-1d28564979fd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Mean", "[", 
     RowBox[{"QuantityDistribution", "[", 
      RowBox[{
       RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}], ",", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", "\"s\""}], "foot cubed per second", 
         FractionBox[
          SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
        "Quantity"]}], "]"}], "]"}], "==", 
    TemplateBox[{"200", 
      RowBox[{
        SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", "\"s\""}], "feet cubed per second", 
      FractionBox[
       SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
     "Quantity"]}], ",", "\[Lambda]"}], "]"}]], "Input",
 CellChangeTimes->{{3.8830629733771954`*^9, 3.883063000806196*^9}},
 CellLabel->"In[157]:=",
 CellID->412194370,ExpressionUUID->"6e4a5258-e263-433d-b914-edb8ea791203"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", 
    FractionBox["1", "200"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.883063001259201*^9},
 CellLabel->"Out[157]=",
 CellID->63289,ExpressionUUID->"34dc8d61-84df-4076-b80c-156c011f51a5"]
}, Open  ]],

Cell["I can use this.", "Text",
 CellChangeTimes->{{3.8830630118932066`*^9, 3.8830630163622155`*^9}},
 CellID->222599452,ExpressionUUID->"17008176-d213-48bc-b952-ad244e14f644"],

Cell[BoxData[
 RowBox[{
  RowBox[{"$Q3$Quantity$Distribution", "=", 
   RowBox[{"First", "[", 
    RowBox[{
     RowBox[{"QuantityDistribution", "[", 
      RowBox[{
       RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}], ",", 
       TemplateBox[{"1", 
         RowBox[{
           SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", "\"s\""}], "foot cubed per second", 
         FractionBox[
          SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
        "Quantity"]}], "]"}], "/.", 
     InterpretationBox[
      DynamicModuleBox[{Typeset`open = False}, 
       TemplateBox[{"List", 
         StyleBox[
         "\"solution\"", "IconizedCustomName", StripOnInput -> False], 
         GridBox[{{
            RowBox[{
              TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
              TagBox["List", "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Dimensions: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox[
               RowBox[{"{", 
                 RowBox[{"1", ",", "1"}], "}"}], "IconizedItem"]}]}, {
            RowBox[{
              TagBox["\"Byte count: \"", "IconizedLabel"], 
              "\[InvisibleSpace]", 
              TagBox["208", "IconizedItem"]}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
          "Column", 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
         Dynamic[Typeset`open]},
        "IconizedObject"]],
      {{$CellContext`\[Lambda] -> Rational[1, 200]}},
      SelectWithContents->True,
      Selectable->False]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8830630223602133`*^9, 3.8830630640781975`*^9}},
 CellLabel->"In[161]:=",
 CellID->732681,ExpressionUUID->"818b4558-8d4b-44de-afe2-59b2f1a2ca53"],

Cell["I can verify the mean is 200 cubic feet.", "Text",
 CellChangeTimes->{{3.8830630509231963`*^9, 3.8830630583302064`*^9}},
 CellID->919943060,ExpressionUUID->"b039f2b8-60af-4998-a07c-a23b6f2f0ac7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "$Q3$Quantity$Distribution", "]"}]], "Input",
 CellChangeTimes->{{3.883063059211196*^9, 3.88306306821021*^9}},
 CellLabel->"In[162]:=",
 CellID->228774775,ExpressionUUID->"c10bbe8a-fab8-4717-89f0-ac5d20b1d5f3"],

Cell[BoxData[
 TemplateBox[{"200", 
   RowBox[{
     SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
     "\[InvisibleSpace]", "\"s\""}], "feet cubed per second", 
   FractionBox[
    SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8830630684701977`*^9},
 CellLabel->"Out[162]=",
 CellID->428502241,ExpressionUUID->"89922a47-a510-47d5-9ced-e3ea55e2ec47"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Probability", "[", 
  RowBox[{
   RowBox[{"t", ">", 
    TemplateBox[{"270", 
      RowBox[{
        SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", "\"s\""}], "feet cubed per second", 
      FractionBox[
       SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
     "Quantity"]}], ",", 
   RowBox[{"t", "\[Distributed]", "$Q3$Quantity$Distribution"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.883063072046195*^9, 3.883063094557201*^9}},
 CellLabel->"In[164]:=",
 CellID->87306535,ExpressionUUID->"2e21f786-7ebd-4c87-9b2c-f95f4aa65cf6"],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"27", "/", "20"}]]]], "Output",
 CellChangeTimes->{3.8830630949872*^9},
 CellLabel->"Out[164]=",
 CellID->775647705,ExpressionUUID->"23cc8e62-b5e9-4ebf-9e30-cfbc6fbfdb96"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NProbability", "[", 
  RowBox[{
   RowBox[{"t", ">", 
    TemplateBox[{"270", 
      RowBox[{
        SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
        "\[InvisibleSpace]", "\"s\""}], "feet cubed per second", 
      FractionBox[
       SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
     "Quantity"]}], ",", 
   RowBox[{"t", "\[Distributed]", "$Q3$Quantity$Distribution"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8830631063841963`*^9, 3.883063106915202*^9}},
 CellLabel->"In[165]:=",
 CellID->12904128,ExpressionUUID->"b3357491-feb2-45a8-91c8-c0b7265947c4"],

Cell[BoxData["0.25924026065970796`"], "Output",
 CellChangeTimes->{3.8830631072631974`*^9},
 CellLabel->"Out[165]=",
 CellID->107125615,ExpressionUUID->"30936b5f-9210-469d-8551-bcaf286f1873"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
What water-pumping capacity should the station maintain during early \
afternoon hours so that the probability the demand will exceed capacity on a \
randomly selected day is only 0.05?\
\>", "Subsection",
 CellChangeTimes->{3.8830631293962216`*^9},
 CellID->69590040,ExpressionUUID->"9d4dbb8c-8117-46b5-b0c6-360b4d0250c2"],

Cell["\<\
I use \[DoubleStruckV] for volume. I can get an exact answer by rationalizing \
0.05.\
\>", "Text",
 CellChangeTimes->{{3.883057303082051*^9, 3.8830573121970587`*^9}, {
  3.8830631990742135`*^9, 3.883063199770212*^9}},
 CellID->312614943,ExpressionUUID->"71085842-aa49-4b04-a4c6-dd65275cfd16"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Rationalize", "[", "0.05", "]"}]], "Input",
 CellChangeTimes->{{3.8830573128950415`*^9, 3.883057317866043*^9}},
 CellLabel->"In[167]:=",
 CellID->146247622,ExpressionUUID->"7f44cec9-5c46-46d7-8c3c-77a20e5b1009"],

Cell[BoxData[
 FractionBox["1", "20"]], "Output",
 CellChangeTimes->{3.883057318116044*^9, 3.8830631713312025`*^9},
 CellLabel->"Out[167]=",
 CellID->95293501,ExpressionUUID->"301d3a37-3f91-4745-8b74-05855631d71f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Probability", "[", 
     RowBox[{
      RowBox[{"\[DoubleStruckV]", ">", 
       TemplateBox[{"200", 
         RowBox[{
           SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", "\"s\""}], "feet cubed per second", 
         FractionBox[
          SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckV]", "\[Distributed]", 
       RowBox[{"QuantityDistribution", "[", 
        RowBox[{
         RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}], ",", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"",
              "\[InvisibleSpace]", "\"s\""}], "foot cubed per second", 
           FractionBox[
            SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
          "Quantity"]}], "]"}]}]}], "]"}], "==", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        StyleBox[
        "\"rationalized number\"", "IconizedCustomName", StripOnInput -> 
         False], 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Rational", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["56", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Rational[1, 20],
     SelectWithContents->True,
     Selectable->False]}], ",", "\[Lambda]", ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.8830573745300446`*^9, 3.8830573770720544`*^9}, {
  3.8830631772012014`*^9, 3.8830631843091965`*^9}},
 CellLabel->"In[169]:=",
 CellID->124363904,ExpressionUUID->"69f83320-9213-485f-9c90-baa829151c1a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", 
    RowBox[{
     FractionBox["1", "200"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "2", "]"}]}], "+", 
       RowBox[{"Log", "[", "5", "]"}]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8830573775080423`*^9, 3.8830631877942*^9},
 CellLabel->"Out[169]=",
 CellID->328553822,ExpressionUUID->"5281c68a-c0dd-4c1d-92a1-bf72a3f52910"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Probability", "[", 
     RowBox[{
      RowBox[{"\[DoubleStruckV]", ">", 
       TemplateBox[{"200", 
         RowBox[{
           SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"", 
           "\[InvisibleSpace]", "\"s\""}], "feet cubed per second", 
         FractionBox[
          SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
        "Quantity"]}], ",", 
      RowBox[{"\[DoubleStruckV]", "\[Distributed]", 
       RowBox[{"QuantityDistribution", "[", 
        RowBox[{
         RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}], ",", 
         TemplateBox[{"1", 
           RowBox[{
             SuperscriptBox["\"ft\"", "3"], "\[NegativeMediumSpace]", "\"/\"",
              "\[InvisibleSpace]", "\"s\""}], "foot cubed per second", 
           FractionBox[
            SuperscriptBox["\"Feet\"", "3"], "\"Seconds\""]},
          "Quantity"]}], "]"}]}]}], "]"}], "==", 
    InterpretationBox[
     DynamicModuleBox[{Typeset`open = False}, 
      TemplateBox[{"Expression", 
        StyleBox[
        "\"rationalized number\"", "IconizedCustomName", StripOnInput -> 
         False], 
        GridBox[{{
           RowBox[{
             TagBox["\"Head: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["Rational", "IconizedItem"]}]}, {
           RowBox[{
             TagBox["\"Byte count: \"", "IconizedLabel"], "\[InvisibleSpace]", 
             TagBox["56", "IconizedItem"]}]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
         "Column", 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
        Dynamic[Typeset`open]},
       "IconizedObject"]],
     Rational[1, 20],
     SelectWithContents->True,
     Selectable->False]}], ",", "\[Lambda]", ",", 
   TemplateBox[{},
    "Reals"]}], "]"}]], "Input",
 CellChangeTimes->{{3.883063189778201*^9, 3.8830631906352043`*^9}},
 CellLabel->"In[170]:=",
 CellID->26772912,ExpressionUUID->"65f0511d-9632-456b-8a83-e1ebe95e4857"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Lambda]", "\[Rule]", "0.014978661367769954`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8830631909662*^9},
 CellLabel->"Out[170]=",
 CellID->559429468,ExpressionUUID->"c6d14a72-16cf-4b77-87fc-c174a651eaeb"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Question 4", "Section",
 CellChangeTimes->{{3.8830632159461994`*^9, 3.8830632171051955`*^9}},
 CellID->6179500,ExpressionUUID->"c1fab472-518d-47f4-a95b-2c735fb1c8f9"],

Cell[TextData[{
 "Use the definition of the ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "13d8772d-0403-4131-915c-75f8838b6812"],
 "th moment and the PDF of a random variable X to show that if \
X\[Distributed]\[CapitalGamma](\[Alpha],\[Beta]), then ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubsuperscriptBox["\[Mu]", "k", "'"], "=", 
    RowBox[{
     RowBox[{"E", "(", 
      SuperscriptBox["X", "k"], ")"}], "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", "k", "-", "1"}], ")"}], 
      RowBox[{"(", 
       RowBox[{"\[Alpha]", "+", "k", "-", "2"}], ")"}], 
      RowBox[{"\[Ellipsis]", "(", 
       RowBox[{"\[Alpha]", "-", "1"}], ")"}], 
      SuperscriptBox["\[Alpha]\[Beta]", "k"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "45d7efb2-4794-438b-88df-fff1f865fbef"],
 "."
}], "Text",
 CellChangeTimes->{{3.8830632227261953`*^9, 3.883063360509207*^9}},
 CellID->490849167,ExpressionUUID->"c9ecf58c-818c-4d6f-ac31-930fa4567a48"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", "k", "-", "1"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"\[Alpha]", "+", "k", "-", "2"}], ")"}], 
    RowBox[{"\[Ellipsis]", "(", 
     RowBox[{"\[Alpha]", "-", "1"}], ")"}], 
    SuperscriptBox["\[Alpha]\[Beta]", "k"]}], TraditionalForm]],
  ExpressionUUID->"4af83c3a-ba72-428e-acd5-584e2d5ea32a"],
 " can actually be expressed as the Pochhammer function ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"(", "\[Alpha]", ")"}], "t"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "37dd0a0a-c53b-429b-b097-2767ff8309d6"],
 "."
}], "Text",
 CellChangeTimes->{{3.8830635232032113`*^9, 3.8830635355162077`*^9}, {
  3.883063634909197*^9, 3.883063657566206*^9}},
 CellID->16200135,ExpressionUUID->"c73d9847-8b4d-4a49-9297-c77d754af937"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Moment", "[", 
  RowBox[{
   RowBox[{"GammaDistribution", "[", 
    RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "t"}], "]"}]], "Input",
 CellLabel->"In[174]:=",
 CellID->12952238,ExpressionUUID->"83f3b3ef-a026-424e-84a0-1a71b3ad76fa"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[Beta]", "t"], " ", 
  RowBox[{"Pochhammer", "[", 
   RowBox[{"\[Alpha]", ",", "t"}], "]"}]}]], "Output",
 CellChangeTimes->{3.883063606241197*^9},
 CellLabel->"Out[174]=",
 CellID->314943087,ExpressionUUID->"bf12e8be-b890-4b3b-9ec1-3f8d410c99a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Moment", "[", 
   RowBox[{
    RowBox[{"GammaDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "t"}], "]"}], "//", 
  "TraditionalForm"}]], "Input",
 CellChangeTimes->{{3.883063660829208*^9, 3.883063662345196*^9}},
 CellLabel->"In[175]:=",
 CellID->761671029,ExpressionUUID->"f1b7d825-3234-48f2-9860-2991c087b827"],

Cell[BoxData[
 FormBox[
  RowBox[{
   SuperscriptBox["\[Beta]", "t"], " ", 
   TemplateBox[{"\[Alpha]", "t"},
    "Pochhammer"]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.8830636627011976`*^9},
 CellLabel->"Out[175]//TraditionalForm=",
 CellID->413828399,ExpressionUUID->"e5658726-c08b-41a2-9b67-b9eab156182a"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qt8lMW98PE9x9Zara3VeuSg1hA9xhAP0ii3KiTYmKrBSxOgCoqGgwpo
AbEqWNikxQS1ARUoPeGiQBESEZogKC1JUDFRoYkKRMWgYrAF4/GSVl6j2Wze
eZ7Zy3PfZ5PdJMDv++Gjm93nMs/MPJf578xsn/FTs2//d4/Hc88J4j/ZufcP
nz49d2bOKeKPUVPumXTHlNsmXDXl17fdcdv0weOPE2/++N88niHHezzK63YA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAICeomntlPXHX7H++Ck7DmnePfTnzccveFu+fmWB
usAV217plgQCAAAAAADgWKGEqkb/uUn7lhKnumJ9KFSlqN1GqAoAAAAAAABx
pg9VHdoxWu1ANXcBoSoAAAAAAAB0MWOoam2t8v9XCFUBAHA0alo3PqFPou2/
uXXt7XUFgRdx2X9JbmhHkRwszVVTVbAzPmkJbl/9V1jbuY0pGZtb2hR5QXs7
C9WUjC85GHlvLrKxpXZuZvaKhs6kKGaa60tmLg3msJr4TuZVl1NPnEAl0b6O
knJy5a6zOnRf8551M5YEy1PdhZuaEImukmv+xSz/I1XFKGr1EShwdLHNUgdK
/QldD2vndtl+g/sy/YvZxTlCPYnmxnGs6bmnWDSl1nOPosPUR6nQBT/eBxjL
a5FScNb3KdeiuDo5PelZDABs72SoKpoHy668xh5R9DUkmrrdE7I0xmlQDr+z
LYijRA9rVUVT0Pq71WdbpqbmVR12TFsMLub2LQKTxs152UOSlRSOWfbH+LSh
OtG0AWKpeeeqovnzAv+m54hqnz19XvidLY3HTKgqmJJYPNrF5sYX01BVS928
jKGFtS2dSVDM6C+AhKqsDl2t7aGqHvdQVSweJGRKj+FQVaApqonzx5PpetgT
QlUJrh+0IiBU1WE99xQjVNVloaoYXov0ye4oQlVHL1MNOYZDVcFv/2ngt/fA
VlXHQ1Xt7Q0rcpJmbbNrQnV1qMpXI5ZMGjWvbHtNdd0bqwlV4dih3l9M9+u4
hqp6jli2fbr85hsx8Y0rs2PUhIyFo+ACeDSGqmJSQwhVddWJFu9epo4cQlWx
ObUJVXXY0XGKHR1HodOV14cY7qtrL2vtXR6qQmd1qoYQqjp6HV2tqsPbvClp
C3fFdaeuQ1XqRTLe1+SjoKWGo5BTqKqmsaIwV+1t2C9j0sIazQmijFQKdERM
GpIztbimyWe59dDtrC4YaRdPoeZLmf7bQO1pYniACT/KakP3+tNK0zAXa9ne
REzt98AVwPC+8SKpS2rwomFIv/bQ9F8xaK7eoYtwbXA8prI107O6YbSm5jIV
4Y7Qsj0vqc+055vDbzSsyxuT0V9ZJTVzzKzSPeGP2pvrywsmZvZTdtE/Y2Jh
2d7Q1wjyKtog1s1OFZ8mD5iwqFokobluiVw+Nce7riH8pYNNxdA1cpUEa3tV
xWYXEY/RoKlm6dRRg5LEkimDsqcvrQ7na82S6WMzUtWkpgzKmrgo9JFTqOpg
zULrDAykSk2wOLSlew7b3Ji0YzfULQdCVfV1K6fn9JPpnFXaoO2N7LRT7WKW
rYBgpdXWH10azA1Gy8rfrquKmi1Yfd9qe9ra1nNN4sO1SNYczakaWj78bKO/
DrTrKqHtFUP7UfjSEToow7mmyy65I/MDfPCQA7U9Ul5Z5Ia2yml3pxSQ5bOc
7nTTfmSZma4jA5b7CqZKuxHbi57D0Wny066euMk621tJdBUjylpnPmrNuWZ5
E9TnSHh39ve1duO9SXc6h7POsgmpfdNVDXTYV5SnWDS3+yhDVfY3R9O5aaqE
tueI8di1peAq6/SZ4NSryjIn7S8ytue7xfGGisz5ecaylO02Zbe8wrqSm1Nr
CHebtxz7UFV4y6GKV1hr3p19hTEcRSxLTR6eQzU25rnTNUGsqN2RxaNvMFU2
Beq6qlvWEPPJa1/3nDIk0sXQ+snZohBNlxHNp+ELu/u8sr5o6G929qWs42uq
Lp5m+RArHyyrdi5SHoZTMwu2GR5hIz1guM69JrcXf8vmmOZUsl1Rs+XYtqpc
3Ju0dcNc2aJqVdXOTU64s9yyJaH7NvlwQ8msQMOhX8ZY77r6ZutGcXuEFoFN
A8eQ5kD5aivh3JqmmkUT1eaPWFHXaFKaeKVey/aOsnawHSGaWpsbG51CVS0N
GwsnZqnbCRymZi/KdkYMSElUjitr0sLtPaWbBI4GDqGqlOR+WdOWbKyprlh1
f5Y4cXJW7pefNpXd2T8hZcTU4vLq7TVlxdOyUhKTJpQ2WpyYpquNcmYZrgam
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
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAOgB2traNm3aJP7b3QkBAAAAAADAMa2xsdHj8aSn
pw8ZMsTv97tfMaqFAQAAAAAAAGd+vz8tLe2xxx576aWXJk+e7D76JJYcNmwY
0SoAAAAAAADESltbm8fjqaysjHbFvXv3ihUJVQEAAAAAAMCZz+errq5uU4nX
7733nl1MqbW11ePxbN26VU5U9eWXX7711lu1tbViLe3UVeL1q6++WlBQsGPH
DrGpf/7zn7fffntaWpp2MfHi0KFDCxcurKysDO2uQiUW27Jli/hULub1etev
Xy92XVVVFd+MAAAAAAAAQLfy+/0ej2fIkCGjRo36zW9+k56eLv5cvny5edZ0
saRYQHw6e/bsWbNmiQXSVSNHjrz66qvXrl0rI05NTU1ZWVlnnHHGPffc069f
v8rKSq9KLDlL5Vf96le/Epu69dZbzzvvPPFCbK2srMyjuu666y6++OLJkyc3
NzefeOKJ48aNW7BgwWWXXdaB3lwAAAAAAAA4gpSUlHg8nqeffrpv3767d+8W
74jXV199teUP/BkGAF5zzTV5eXl+v7+iokK87/P5xOvbbrtt4MCBMmw1efLk
TZs2iRderzctLS3Ue+q111774Q9/KJaXf4pPxVriU9lrS6zy5ptvlpeXV1VV
9e7dW7wplnnuuecIVQEAAAAAABzdtm3b5vP5brnllrFjx8p3xOsZM2ZYjgE0
hKrEn3Pnzh06dOi1114re0YJCQkJubm5hhVlqCoU/lq6dOmgQYNCuxCfirXk
8EOxnQ8++EC+39zcLBY75ZRT0tPTCwoKmOoKAAAAAADgqPfJJ5+cdtppf/jD
H8TrL774QrwuLS21XFIbqhKvR40alZ6evmPHjieffFK8/8033/h8vt69e48Z
M8aw4qpVq2Qwyuv1VlVVlZSUiD9DoafZs2eLtUKhKm2Hri+//LKsrOyuu+5K
TEx8+umn43L8AAAAAAAA6DHWr1/v8Xj27t0rXm/fvv3000/3+Xy5ubnmXkza
UNX8+fPF608++US8Fu+I1y0tLXffffeIESPOP/98GW4SWxg1alS7Ol+6jEGJ
T5977rlDhw6JP19//XW52cGDB2dlZYUGAIZ2J9a699575Wux5ZtuuinueQEA
AAAAAIBu5fV6R4wYIQNTf/rTn376059u3LhRGzKS2traZs2aJd7Py8sTqzQ1
NYnXTzzxRHFx8VVXXZWQkLBmzZrRo0eLxVJSUtLS0rZu3frAAw/IzlrvvPOO
WFi8eemll4oFxL5Gjhx53nnnPfbYYxMmTDj33HN9Pp+cgF0slp+fL160BwNc
s2fPrq6uFi9eeOGFrs8cAAAAAAAAdKWqqqo333xTvm5ra6uoqHjkkUcsfwGw
QlVZWSn+K/784IMPnnrqqRtuuEF8Kl4/9thjckmfz7ds2TKxkdra2tDqmzZt
8nq9oc2KF8uXLx8/fnzoTZEMueVKlXhnz54969atmzNnzuDBg1tbW5mrCgAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4CjQ2tqalpYm/tvdCQEAAAAAAMAx
ra2tbeTIkd/97ndzcnLMc7MDAAAAAAAAXeOLL77Iyck58cQT582bR7QKAAAA
AAAA3cLv9//lL38ZMGCAx+NZuXJlW1vb0qVLxevU1NQ//vGPBKwAAAAAAMAx
yO/3+1QHDhz4O+Lpo48++vLLLz/44INXX3118eLFI0aM8Hg8xx13nNfrlYEp
8V/xWrwj3u/Vq9eVV155//33b9y48cMPPxTrdnfyj2Yiez/++GNxFogiEGdE
d5+UAAAAAAAci0SrvKSkZOrUqYMHD/Z4PMnJyR7E0ymnnGJ45+c///mLL76o
jY2I1+Id8X63pPBYlp6efuaZZ/7iF7/47W9/+8wzz9CrDQAAAACALuP3+ysq
KjIzM7VN9ZSUlO6KEhwjfvjDH4Ze9+vX75FHHvH5fJYFJN4Xn1544YXdmNpj
TUZGhvZPcXaIc4SAFQAAAAAA8SZa39OnTw81ydPS0n75y19OnTp14MCBv0I8
3X777fn5+VVVVU1NTREHmolPxTKHDh3asmXLnXfeeccdd3R38o9mIoevuOKK
SZMmXX755WeeeWbo7BBnCtEqAAAAAADiR7S7p0yZItrg//Ef/zF16tTXXnvN
r+rudAE9gjwdPvzww/Xr1w8cOFCcKePGjSNaBQAAAACIOaIxQmtrq/yNuV/9
6lf79u3r7uQAPdpXX33l9Xpl3ypx7nR3cgAAAAAAR4a2trbZs2c7d3vw+/3/
8R//0UO6RrTpiSaw4Z347XrLli2i3b1s2TICd4Ab4kwRlxdx1jz77LPdnRYA
AAAAwJHB6/VmZWVFXGzevHmLFy/uCSGatrY2kebpQXPmzJk2bVroz8OHD8dp
v+LY09LSxO56QiYARxBxwopzhxMHAAAAABBRZWWlx+Npbm6OuKRoZl522WUf
ffRRF6TKmexJFfLVV1+16sV11zS3gQ7gxAEAAAAAuHHrrbfefffdLhf+85//
fNddd/WQYYCA1BNiID0hDT0KGQIAAAAA6IC2trYf/ehH+/fvD70jXr/55pui
mSk+evvtt30+n7bJKd45//zze0ioSqSttLS0ublZdrKqqKjoma1jkbzrr7++
rKysuxNiQWSgx+OJ2A/tjTfeGD58+Oeff941qYpKXl7eyJEju7dOir0vX768
srKyG9PQo3i93m4vFAAAAADAkai1tdXj8YRalLt37xZ/nnXWWaKlmZmZmZ6e
Lv5saGgILf///t//E+/0hDGAgkjJ4sWLU1JSnnnmmcGDB4vU3nLLLT2tdezz
+S655JLZs2d3d0IUlqMXZ86cmZGR4RCt2rVr13e+853NmzfHOXURiJyUc+Yb
DkG8c/XVVz/wwAPdVfQiYcOGDbvuuut6ZqS0C5gPXJRFWlrao48+2tPORwAA
AABAD9fY2NirV69Qc7Jfv34VFRVTp04N9YiYNm3aww8/HFpetEnPOuusrVu3
dk9yNURKPB6PSK34b0lJSbs6OPHkk0/2+XzdnbQwkYf33XdfZmZm9zbYZR85
kVfjxo0zB80OHz58ySWXTJ8+3TLSIvLzZz/7mdfr7ZKUWhOJF1VuwIAB3/ve
984+++zs7Oy///3v2ix9+eWXv/Wtbz355JPdkrwHHnjgsssu61EVrwvIStXa
2rp48WJxDpoPXxTKt7/97R07dnRL8gAAAAAAR6iXXnpp0KBBoVZ/VVWVaHKe
f/75S5YsaVdbowMGDHjuuedCy4t3Bg8e/Mgjj3RPcvWefvrp4uLi2267TcZY
7rvvvrS0tB7Vi2Pr1q2iFf/iiy/GdrPiePft2+dy4dbWVlHEZ5xxxoUXXigS
Y9m/a8OGDeKj1157zfxRUVHRRRddFPMfVZT9o1wuvG7dOlGyu3bt+vTTT0tL
S88880wZpdQu4/V6U1NTuz5e1NjY2Lt37xdeeCHmWzYcYE+Tk5PTt2/fH/zg
Bx6VZc6LQsnNze1RpyQAAAAAoIfbt2/fGWecoe1OU11dLRqeu3btEq8PHjwo
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
si+++KI4BKJVAAAAAAAc0WIe06irq0tJSWlubo5DYt3atGlTWlrasGHDxH9f
f/31LtuvyBZDgE78OX369MmTJ3dx0CweEcjRo0fPnTu3e6dbHzlyZJpKJMac
kscffzw5ObnrA4MAAAAAACBWYhvT+Oc//5mUlPTkk0/GJa2uVVVVyZ5diYmJ
8Y4Rie03Nja+8MIL99xzj2WvnpaWlssuu8zr9cY1GQYxD1X9/ve/T0tL6/Y+
S88++6zISZHUxYsXmz/1+/1XX3319OnT+flCAAAAAACOUDGMabS1tXm93oyM
jJgHNHbv3v3Xv/41qlVqa2tFOq+55pp4Ry1mz57dq1evn/zkJzJnLI99yZIl
KSkpXRnniW2o6uDBgz/+8Y83bNgQ20SKolm6dGm0scS5c+eKpO7YscPy0z17
9vTu3Xv//v2xSCAAAAAAAOhqMYxptLa2XnTRRTNmzIh5ItevX3/fffdFtcq8
efNEOufMmRPzxBi0tbX5fD5x7A6hqv3794uP1q5dG+/EhMQ2VPXHP/7xu9/9
7hdffBHbRPr9/iFDhkQVwRO5fckll3znO99paWmx2+bAgQO9Xm+3T1MGAAAA
AAA6IIYxjeeee0589Pzzz8c8kSUlJXfddZf75dva2q677jqRmGeeeSbmibHk
9/sdQlXi00suuWTSpEldFj+JYbGKI7ryyiuHDh0a8/5pYoMXXXRRVKGqV155
RaRzyJAhoZw0p2rmzJn9+/dnxioAAAAAAI5EsYpptLW1PfTQQ+Ijc4hAfLR2
7dr777+/uLj4zTffFH/+z//8zwMPPLBp0yaXiRSrjx8/3v1BiV2ceuqpJ510
0qeffir+/OabbzZu3CiSV1lZ6X4jUXEOVQlerzc9PV2kJE4JMIhtZ7lTTjll
9uzZ5o/EwS5YsECU5vr160We19TUjBo1avny5Y2NjW4SKVb5r//6r6hCVY8+
+qhIp+y5J/L8rbfemjdvntijNmAljuK4446TRQ8AAAAAALpAa2urz52Im4ph
qOq6664755xzzD+B9+tf//rcc899/PHHZ8+enZKScscdd4wcOXLOnDn9+/d3
GaZYu3btDTfc4GZJ6c033xSJFOkRe6+vrxevBw4cKP67bNky9xuJSsRQ1fLl
y0899VSHrj5iCy7L1E3XrBiGqnbu3Ck+Euk3vC/HPObm5ubn5/fu3VsU7gkn
nLBkyZLf/OY399xzT8QUykM+66yz3IeqxPJjxowRO/3b3/4mMmH48OGyF5+o
VNo8ee+998T71dXVLjcLAAAAAAA6yeNaxLBGDENV//3f/52WlmZ4/6233jr9
9NNlMuQWcnNzv/nmm//8z/8Ur8Wnbo537dq1OTk5bpaUFi5cKDbu9XqfeeYZ
8WL79u3yZ+Pi9zN8EUNVlZWVzsebl5fnskzdHEUMQ1Xr1q0zfyQK9Oc//7mc
QEwcuyj344477oUXXpg/f75Y+MYbb3QzWlAsc+qpp7oPVbW2tiYkJPzwhz8U
9UfsZfDgwXISMEO2i7SJd5544gmmqwIAAAAAoGu0ReIPirgpbaRi69atLpc0
xzR8Pt8ZZ5wxbtw4w/sjR45cuHChfP2///u/Yt3i4mLx+pZbblm8eLFlMEF2
HNJ66qmnsrOzzYdpmU5x1L/85S/FjvLz8z3BAYleld1EUhHzM2LQI2Koat++
feLT9evXO2zBvFOR+O4tVmHRokXio/fee0/7ZklJiXhTpkQkrG/fvr169RIv
ysvL77zzTrsBgIajE3l1wgknfPPNN+b3LVeXHeT69Okj/jt58mSxZFNTU2Zm
ZllZmTZPxPsJCQlTpkyJ948/AgAAAACAmItV9xvZ0cXc4ScULmhra7vyyivF
Mrt373bYS3Nzc1paWmZm5tChQy+66KLExMTTTjtNrDVs2DDx/vDhw3/2s59l
ZGRkqp599lnzFsSOzjrrrPT09BNPPPE3v/nNvn37nHNg1qxZbvoyOWdOxFCV
eN9lh6iYiGGvKtkhzTzLVqhkZdFnZ2c7h4b++te/WmasKFZRWJdffrko2Suu
uEIUq91gz2XLlonlRbH+8pe/FK/tdicqgNimqDARA4wAAAAAACAmzP2OOtYX
qD12MQ2RpJ/85CfmXlUhhw8fPu2000499dSIqTIfhdjj7bff7vLoGhoaxPLj
x4/fv3//xIkTxeuVK1c67K4re1UtWrSok8no4mIV1q9f7zH1qtKSoyznzZsX
MVWGo5DhO/e9qkTtEsvX1NSsW7fu3HPPHTRokGVWtKm9qkaPHk2vKgAAAAAA
uoabXkBSxLBGrGIara2tt9xyi3muqg8//PCNN94QyXjppZc86ixG8n3xzm23
3ebyeM8555zc3FyXC69YsULsaNWqVeL1P/7xD/E6PT1dvN6zZ09JSYnLjUQr
YqhK5t66devstuB+rirLH+Oz3F1MQlVvv/22xzSK8PDhw7W1tZ999pkoR1Hu
YgHxp/xo1KhRBw8ejJjC9mCmuZyrSuzovPPOS05OlstPmjRJJlhsxOv1GgYA
io/uuusuy1CVyxGUAAAAAADAvR7Y/UY0/+fNm2f4BUCRgP79+4vlKysrR44c
6dF0cBozZszUqVNdBg2GDh160003uVlSbHDKlCliR++//3578Mfg5LC7a665
xnnWps5w8wuA4tOdO3c6bMFlmUY7V1UnQ1Wtra2nnnqq4RcAi4uLZQzw008/
PeWUU84//3xZ2cTh9+nTx+GHDg2H7D5UdfDgQbHwhAkT5OHL+JjYUV1dnage
baZfACwqKjJvRCx2/fXXX3DBBQ0NDW52CgAAAAAAulgMYxqbN2/2BKcxl+RQ
rJEjR/7pT38SH6WkpEybNk28+cQTT1x44YUuAxrCTTfdNHr0aDdLio1nZGSI
HcmN+3y+k08+efbs2a+88spPf/pTN7G7aImsqKqqKi8vlznz8MMPr1UZAkpe
r/eUU04xz/gUJ7ENVQ0fPtwwy9aqVatEJn/wwQfjxo2T/cG2b9++Y8eO3/zm
N8uXL3cZgYwqVCVrl+xRJlaUk72LdXNzc9esWWM+ohdffNG8kXfeeUce6R/+
8Ac3OwUAAAAAAF0shjENOR1TeXl56B2/3z979mzx5k9+8hOxyhtvvJGVlXXW
WWfNmzfvH//4h/tEPvDAAzk5OW6WlIO/8vPzQwl45513rrzyymHDhsWpS5U4
QDnT+2WXXTZ8+PCrr7565MiRaWlp2nCNeH3RRRddddVV8YiVWYphsYo0T548
efDgweZBdsKvf/3rb775xuv1nnPOOaNHj96yZYv7Y4wqVPXHP/4xJSVFOyf/
Y489JoNXhj1OnDjxjDPO+Pzzzy23M2vWLFFAX375pctEAgAAAACArhTDmIbP
50tLS5s6dar2zdC4Nvmn+5GJWsXFxS5DVe2aX6YLiXeAyB8kR+eZE7Br1y5P
cPqsrhHDYhXWrl0rPm1sbNS+KXNVHmzHijWqUFW7qWQth0OKP5OSkqZMmdJl
UUEAAAAAABBDsY1pLFiwIDU1NeZRArHB+M2I3gWKiopEtrgf8Nh5sS1Wkf99
+/ZdvHhxzNOZl5cX20nOX375ZXEgr776agy3CQAAAAAAukxsYxqHDh0699xz
4xHTOHI1NjZ2fZ7Etljb1bm2UlNT3feA6hZ+v/8Xv/hFaOp1AAAAAABwxIl5
TOPll19OSUnZtWtXHBJ75PH7/RMmTDDPpxRvMS9Wkf5f/vKXXq+3xw6sk3Ot
Z2dn9/B4GgAAAAAAcBDzmEZ7cBAWPVuEkpKSlJSUrs+KeBRrW1vbgAEDemyX
uT179px99tkHDhzo7oQAAAAAAICOi0dMo91qbvNjk+Us610gTsVqnsa8R+mx
Pb4AAAAAAIBLBQUFoUjFgw8+GJMl0e0oVgAAAAAAcATx+XyVlZUPP/ywR0+8
I97Xzvbj9/tdLolu51ys2g5RFCsAAAAAAOgh/H7/sGHDPPbEpzKsIf6blpbm
vCSjrnqIiMUqitJ9sfbkgX4AAAAAAOBo4vf7W1tbffbEp6GYhssl0e0oVgAA
AAAAAAAAAAAAAAAAAAAAAAA4OlRWVlZUVFRVVXV3QhBLnSnWNhVD/wAAAAAA
QNebPXu2x+OpqKiIai2/3//RRx+VlZWJdZlQvQfqcLF6vd5vf/vbN9100w9+
8ANKFgAAAAAAdLHdu3d7PJ4vvvgiqrVKSkoyMzO9Xi+hqp6pY8X6xhtvnHji
ifv27ROvJ0+eLMqXvlUAAAAAAKArLVmy5Pzzz+9YuKmiooJQVc/UgWL1+/33
3Xff9ddfL/+srKw8+eSTDx8+HJ8EAgAAAAAAGPn9/vHjx99yyy1tbW3l5eWz
Zs1699133a9OqKpn0hbrxIkTTz/99MrKSjdrDRw40Ov1yj/FKqJw3awIAAAA
AAAQE21tbX379l2+fHlxcfGKFStuv/32YcOG1dfXz9aYNWuW9s9QKKM9GKpq
bW3txkOAmSzWJ554wqMSxSpKLWKxirV69epFqAoAAAAAAHSX/fv3ezyeVatW
LVy4sF2dnmjDhg3twd+Ak3w+X5teaHV6VfVMsljlzOrtarE+++yz7ZGKVTjh
hBMIVQEAAAAAgO6yZs2aoUOHejyea6+9tgOrE6rqmULFeuutt7pfS5TjBRdc
QKgKAAAAAAB0i7a2tilTpkyYMMHv96enp8sYxaZNmwwjxQzMAwAJVfUoslhv
u+22aItVLH/DDTeMHTtWbkcWrlirW48GAAAAAAAcK9ra2vr3779s2bJQTCMv
L+/FF19s148UMwttQUYzfD6f2EL3HQd0zMUquCzW1atXJyQk/POf/xSvi4qK
Bg0aRBwSAAAAAAB0jV27dnk8nr179/r9/qeeeuqUU065+eabfT6fm3UrKysv
uuiik08+WWwhLS0tPT2daFUP0ZlibWtru+GGGy677LLrr7/+W9/61ptvvhnv
1AIAAAAAAIRo40vidVRdaAyzc8chdeigzhSrWP7555/3er1NTU1xSBoAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACOOod2jL5i/fFXrB/95ybtn+Z3
An8CAAAAAAAAcaJEojavPRR6vX5urfzg7bnh101rpxCqAgAAAAAAQJxpQlWH
/rz5+Ck7DoU+EX8ueFt9SagKAAAAAFw7WLNwwqCkPon9MiYtrKElBQDR0Paq
0ntlwXpCVQAAxFXTuvEJfRJt/82ta2+vKwi86CY7CxP6jC852KX7bNm1dGJG
fyUHUgqrW+K/P+UYEwt2ulm0qSQ3MSG3NNqnoqbtiwo2ulmpg9uPjq95z7oZ
SzpQp6LIKPdaaudmuqjhymLZKxpiu+8ucnDH47+rtHrc7j6vrDzJ81jpgc5t
RHtcn22ZmppXdbiTyeqS+t81DpTmpiTnrm0UL1v2idf9J7q4AhwBd4R46/hF
Rq08R37OqHWgUB3bFJsj0t591I138oau1MDcdV1zjmr21YlHEU2WWnyoZHLw
FOvs3U1JpN2O3DlYmus6JbVz1WQfHRdMS3ahKt37hKoAAIiL5p2riubPC/yb
niOeOrKnzwu/s6Wx+xsm3RCqaiwZk5iQMWNlRU319obmLthh3ENV7p/tu6Sp
rj4Md+SZPOahKl9z7eKcJBc1vKVuXsbQwtouiFvGwau/yz9p1OajL1RlOK6G
FTlJs7Z1roiOllCVr2FldmLCneWhy1fj6pyElGnPfxZhvSPgjhBvhKpiHKrS
3X0IVVl9FApVdSpngpsiVBU7lqEqddIqTWyKUBUAAPFn/Yje3Q2TbghVdfkh
x6WzkBahKgstB2oW3txf013EQaNo+HdV4yj2jpFQVfvhbd6UtIW7OrPJoyVU
tbMwSZzyGzTHsW9VVp/E7NWNUW2kJ94R4o1QVTxDVbFwVIaqOhdfivWmXDoW
Q1XGOFU7oSoAALqCU8OkprGiMHdIcoJ52hNlMFdetvpR0pCcqcU1TT6Lbe9Z
nJbQJ69K2+PBV1eQkjh0Qb36uqm6eNoYOeauT/KALM0utM+H5mdFwzsHaxZO
zOynbKR/xsTCsr1OPSyati+dOkqZyCUhZVD29KXVTeFMCP2zfh4WqV0wKSM1
UeZGwcYGzW5aGjYWTsxSN6t8Ota7Tvtpe1ON7U4LtjdWzR0/IEUmflG19YOP
vindJI53hLqKmmnbrdYJfkmq/dK2ZW95QWDFxITUzDGzShsOW23/cF1RVnJC
Rl5VcMPN9aVec/rbgwWxt6FkVk6EQ9DlcOChurlepMdFwcmMqlD20k9N+cQF
+vrmVDQGasVOGXH/5pqIzbGW7XlJfaY9r+lgFyED59Y01SySY0jFSWGoAwZf
7N4885oHEz35J/V6MHvS+lc/CX4ggzlvv1t6b1GK+mnuIzu+EMvvXD95cP5J
nvyUq5aVvv0vddGDpaPyT/rdji+2P5V7ofJR6jXLSnd/Hv7IE/h348q//LZX
fuLvdAf71V+XWUaNDq157CTPylc/2fH4jUryEi8smrnmrS8CH8o9vvTqI0ra
UgavfEFJSOuhqvV3Wx6L8C/lQFJ7qQeyYNdXmlBVYEfmXYdS+Hblw7kPpqiH
cHnuynLlqPXHtSZwCaidm6ztShTSvHma7kLRvGWqKLgJ5U26BcQFKlD/99St
mpptXXwxOAXE9XBBmu4K01yvVunk3HXRhJLsqdfb5CJtOftqCqJtVMb+jtDS
sC4vcJ1Xz5o92qJyffVWTq6sQBFkiUyWxbp/Vbbpit2wYkRCSmGtL3xWBtKc
nVcitu9rLJOFlTIoN3QliXiRaa4vm2t5kdEHdg6LLYwNLiZuBPXNVndGeTxL
pgeWDBxR8CBkiKNq56LsVCUlBduao8qodrs7TnvgnmtZTE6hKsddW+zLdPcJ
96qqXzS0T6JX3wtSOX+HLtrjc95XMHzUUuNNSUzSX7pbtuXZBpQON9gUnMNd
2z5U5fzk0xRMfGqOd3Njo3WoSjf0TxPzUU8x011Sk0vmVew2Zbe8uk4otBW6
KYvMNPeq0hWi1ZYtryrh7WjTZsoE/caDOw2uEirc4GLhEzyQZu3DoetjNI10
to18GkJVtduOD//wXwihKgAA4s+hYZKS3C9r2pKNNdUVq+7PEs9mOSv3y0+b
yu7sL9r7U4vLq7fXlBVPyxKPjhNKG83P5Op3+rrnUuV7/7SFSqSqpWpWcmgj
VevmTcwQDw+Z6kdRhKpa6haJvfe7ubCkQqSztEDpMJNZsNP6MV48Oorn0oyJ
S8uUPRaOEY+vKeNLRMP5s4bq7UsnikO+c6lITO0B0+otdQtFDqSOLVi3rXr7
tpK5Y8XjaMbcOrlcw4oc8Vw9Zm5p1faa6o2r7h8l8ip56uZm7U5lCgM7zZin
jClTcz4ppX/WFDU9q2eIA0nIXmXVatWEklrqCoYmJo2asVKUy/byJRMzxb68
280JbqxVjyhrjsjeusYWpSyyg8kQK66cqYyAS5qypdmwfV9jyQRxpJPKgkGM
po2TRGtaJrJ649KpIh9kpgUKIi0jI3AIsiZYH4LI4Y2FojJMXB4YX9myszBD
JGCUmh65WbuCC2RUcr+bF6l7maSsGAo4OBaNSd3CCbKRG7HngKifiQmB/FFF
zMCMzAyZjEA9tCoX1aENi1I8+Vfftr68ascLG9ZPHp5/Uq/HSj9QP1OCOQ9e
Plh++lLpzKJET/6Nv/rfy8977PEN6sKDxcLLXviqPRC3GfzQ5b0emvnESy88
t/m31+Sf5Hno4Z3is68O7dxRfFv+SVesFLt448BXSk+kXtq40Fcv3Jt/Um7l
F+a0KfGih5QE3F2+JZiAywt3KTuUe+yVn3LNU0raVtWJ1T9Y85iyQK5yLFvW
rLzxPM2xtL/1uJLaQPIeHvVg7s2PuQxVffXKyss9+YnDFxVvCGdR+QHjcQXW
VK4qoauThtrSCZ2JstORJnje/PwUWcRq8aUkJwVqUflCffHF5hSQWrZ5+4xY
uU/svGbJ3HLRNq6ek6i0061S7jR/lFUTuGyCeTCRbP9G0+Mi1ncEtXmYOXG+
cnkUF8BsTf64v3qLy8XQPsnZM1fJIlBuFil56oyC5h5xDSuvld+G6M9KudbQ
afdP6J81c1WVuFbMUU7hQJcz54vM4boCZY85snosmTIiKXyR0V5J5B4nFclr
kXb7BkpXwMQkmZliyfnK7hIyAuEaNcdEbcwp2ihyrLT2s47c5izuOPLaLspC
KabApVJfTBahKuddW++r2Xj30QwAVEonQTtiV357tbg+0r7C4SMltKWEIsO1
Q7lWWwWrgwUna6YsuGTZ7dDxrm0XqnJ88vlsy1RRt1PHLtworxIjcieMcB2q
MsSpDOe4aZXApy6jXrpvrMwT0yknuyFUZXn9CZ5lbkJVdnu3TIAxlBTccnhJ
q11bbSeQY5bHaLlf62iVNlSl9qcyxanaCVUBANAVnBommvmK1S+vx8jZepXe
JjlL9moWV1rxlg1zZQiV9rlUeci8dpUyS3XTFm9Gf91zgvb7cbehKmX7SbO2
NeueWpNtoiXl4uF56JyacCqb1fZCvnzHaYSLOuVLXpW2g822vGDruH7JtYN0
sRH1a9/ApuRXwNonc5FX8oty2TjSfKTspc/YEovhUZrmmLKWZhlfw5Jr+2fM
t4zM6EZM7Fk+YkCGdtqllur8ZF3bRGzf16g+io8Pb19Nf/Zyzbzi6nw4gUxT
D0GbpU5zkmgHAPrqFw5V9hgOb4oDybZp45sySs38ZLkpx6JxEClUpYQUAhVe
ipyBfTT5pra/rLf/Vc1ve+VnL35X89b7K67KT5xZo0RelFBV/k9n7/gq9NEV
+Up454Pg2kpvqPyHlWOXXYweeviVf2m3c9JV5XJZ3UC510t/KtZ6JZyGmZ78
yRu0/Z8C1HhR/uW/qwsmoP2DJUUneYrUqeXlHv93S2iHn1RO1qW2vf3zl2b2
ChzLFxsW6ZN3QF3dTahKdyCKf9XMPO/BG59413hcktpdSjfwLUBpF4c6YCid
jjIyMwKh8kART9zYHCy+HCWCJMlTeE5N6HVsTgHZ/SNlXu3huiXF8pxVw2Xm
UFVHBCthHENVHbgjqKmSOalqqZiRNERGwqO4eitN1DGl4ff3Ls1KzSxSgxjN
Gyfpjlr5fkQOCDWelWrfG21hqWETGY9yvMio3eHGa6/MDctzgpE6zZVEXuI0
x1p1b/KAieXmw2nakpeRqisp9eKvCybcXxG+M0Rxm7O/46gZlVagvQFWKMco
b9w2oSrHXTvc3eznqlKPVNPXWgkgq8HbCIep2eCuRUODRaMuFTqRjdR9ac5r
ZYP9B9wsnkAc79o2oSrnJx+lkmhvnYdrCobannqGUXuGEE2os5A8xlCMJXDI
wU9lCs0DAIP9qUIVLBi5MkR4dB3ndKGqwBaCCwRXCWzQXagquPfQO5pzxGrj
2oiZfkfhowuE5pQDN3a4ChyjPk+0x2jsshXcuFUBaUJVyk/+XaH/N2WH+gmh
KgAA4s+hYaJpX2gjOUo3gIEzVm6vqQ7/U7skWTXMdc+lavvdfuIUZRdZ8tfW
XIaqDpSOEc2l+Vs0KakpmzPCsqmoDvYZoXlqVahtEJk8h1CVOuP6zfOe1x6y
2kfIpgO5+lAkH+Dr5iVpH6q1ZM7XmN6xWFgTqlJbiBn3rqrdH3Em6QiTe6iP
c/LY5faXlszNTOgzVhfkqRFJGnT/am1Z1yy5M/iAF8Uh6ENVVsNA1JaUsYCC
29RPRqQOa0qaXxd90YSPPkKoSu0Q6Dx3jTEDtU1ph+mPtiv9pmY+seOFqvA/
paeQjNKooarfbg8trUaHfrH5g9AbH2y+MRB0Uj/SB23UaM9j5Wrl14d0dj3e
PzwG8IuNi07yLCq3iFQFtqAbGHhA2WPu05+Y96hu5yHDDyS+8ciDJ3mWvfCV
2nHrCk24ST/q0ClUdfAvuZrxfQZWc3CpkU+r0lTCU4FAkFIiY9aWiyVDjdCk
wIXCsfhieArI8Oas8qriVYHhTmorOxgt76T4h6o6ckdQDzklp6iioclwkNFc
vdX7SOb9q+sazb/2qH4HEY7JyxL3tVsUq6mwlJSHvwKwu8iotcswdb+6U/Vu
pbmSyNDNqHlV+5pa7Mb92VESELj6GaOd0WSU/R1HDYrK74nCxxg+NOtQlfOu
He5uDtOqq7ew0MVf+fZKBqMiHKZmg2qyQyFo9c4+qczitwPUfoZuR79q7to2
oSrHem7qLSYHokY9V5X5lwFNw+LU5IWy3bQpXdAmQDNuzhB3CrCdVl3bQSuK
UJV279oUWh249gA1wSh93zBDIMu8HW24z+oYwxkbecYzu18A1CFUBQBA/Lmd
RDf0jmVfdPWfZhKYMPXpIvBcah6n42tp3l+vDKeanycn+Qns1GWoSj/HlOaf
fsIWlSawYHgz/CRsE7uw7E6v/FMbMsEDOdhQu31bSXFhYOIO+ci0wb6LhTnn
3YSq2lv2FI/tJxOQmjlm+tKyXXYPSxahqpbmpoadNVXrlhZMl1PraJrqwazT
9k6x/xX78WVNUR2CPlSlaZdFXtdiYls1wcrQLRdFYy1SqEo2XeuNbztloO7R
3TZUJbstWf1TQ0xqqCrc/ckcjzqgD1XpZ6DSrm4I6SgRpMAYwM+3TMo/aZLF
6L92qwiSqEgPe+SOjIlRF5ajEQ1beKz0gLrwvTW6D5XOXS5CVTufStRlgo5V
qMo+MBjqs6EEhZQCVdqbaotSiWkEWu5OxRfLU0COdcoYu6Q+vHCSZX/UDg0A
jHuoqmN3hANb1NGCiXJuvYJ1NYEfWI3m6t1+uH5J8NcQ+mWMnVpcvid8mM1l
d4aKTwliyNFkFsVqOjSl0R0OVTldZLIMAVnD4QdzpnGzOo67j5x+qrBke4Pt
XFXKQTU37lJGnxXNCkympOlFo0lMVLc52zuONhSjfzNcz02hKsddO93dnH4B
UJMS7bdXEQ5T30lY6cIkxwCGhvFapKHIrmurZHPXtglVOddzi0qixtBchqqs
N24TqnLclGXQSfOmdZTMuJbTEEJ3c1Vp3tQEyizX1b4Z7tAV2FRhgfqOUhxy
O9rFbC6M1sdorGD2V0VCVQAA9BAda5hEMU+v0o6Q3QbC358qwiGXpCEjsm6e
VrC6MNw1K5pQlcufbepsqMr+iTfcPEnNzLp2krd4kfda7fN/bENVqpbGPRtX
eYNTfNtMzaQPVYUbjP0zrh0xcdbShbNG6B7CU0YU7WxSJxAL/7p9hB8Z795Q
ldLY6fAPk7kJVel3GjEDowhV2f8KXkxCVWoeGkM6Spjowcdfb2//vPJuT/7d
Gz+33L9dqCqxcFcMQlUN5Ve7CVUZM0EnulCV2m1JOQuUHiCF1T61/Zgyr1bO
aGQX0zA24WN0CqidCYdqzlZ11h0551IM1M5PNp5WppnkI4vPHaF5X03J/OCP
aMhxUtH/6F7Lgfqy1XnBqbDDMyaF+9UoORyKMMciVBW8yLgMVSl8zQ3bS4uC
U6Zbz+IYjrwlD8gaMWZ64cq5k5xDVdHc5mIcqrLbteOp4RCqUjvQymqv/fYq
wmHqb2eyoHcFanh4PjrTKraD+u3v2k6hKtt6blFJ1AGnrkJV4cBLuDZ2Y6hK
EzfTzUbeFaGq4MKFJXKnIgHBCFWJZlhiR0JVuuzSZ7iBOj/V8caf/ItmAQAA
EBNRN0zUKUxNMR8HgefSw8r3p+FHTWW6icTc5ZofSFIblTahKl3/lvCXueoo
LVMjwiYZtgMAlQas42Ot2rffMHQiRE6BNWtLY4t+efkIZDFEoq4oddCY1Q2d
ClWF+Jqr5ohD0P1QXWhHmmd7tePB0LznNTPGq8MTTA/hB8tzNdOPyNldDCP1
nBLc2QGAVlN1mTs4qWNz1DiDY9E4ibZXlesM1G7fqsjkZFMz//qV6RNVtKEq
fecoNdqzaIsahTKFdJRpr376yC511J4xvmS5Be0e1dCW+wGAK19tdzMAULej
Nwrz7QcAflJ+c/7ls5XAV3ShKtnpYta2PaKwZNcL5aIxtqRG1Eb7mIbmnRie
AmqF0Y5UshpZ1gnqXDr6Zrt6otmPubYS5ztCy75VufLkjebqbfTZNmUioFBf
muBsRZqecu3Rh6rsLjK2AwDVqbrsryS+lobV4y07Z8rJr5bsCpeUrGbWoaqo
Msr2jvO67QBAdVyndajKedcOdzfHUJWae0pnQiVUGyqgCIdp6CQcmDw/+COe
lqtYDAAUDw/9MgqrPnS8a1uHqpzreWcGAGpHvbUHd2oKHIUPRFflOjoA0CFU
FdiCaYxhFwwAbDd06NKmR/OOUzAq4qdWmQwAAHqkqBsmgQZRrmbG6fYD4vmk
f/Zqm4dM5XvP5IK5hUmaZpr6LKGLS6hTvFqFqtTWVnjSVF+jZpyLOm370MLq
8AQmLdVz0pKG6ObZDrCbVv1e2d6JNK26fkLalprCoSmDvMHZ0XWT1exdmh16
kDNNPKusKB/vOxSqatwwLSNVNy9Hw/IRLkJVpqlm5DTmVpGWxrXjwwcrJ5vV
zX+u5H+/UWqTp8OhKrtp1TP+f3tnGxvVkeZ7Syvlw/JlP8xK2V0hGSuK5e3I
srwihJUIM1FjbaY9lqYdMhsImbXFKCbstQGFACNiOyFuQ2QgMZ4w2EmEvU6w
Yxna1jruS4ybweN2xsiGdewQaGaI2opAHU2glzD0HRr61st5qTrnVJ1z2m1j
wvOTFZHu0/VeT1X9T9VTbRZtyOS5mlw7pTiWkVWNDGe+qvQCc1GAeviWk3ni
Vn3JWsb9FPE37vlZ31dp91IV43E9fWcK37in3utnlnSufNi0pKh933bVhbsV
9HziCx1az7xz/u29qmMrU2JEbtX/zxmUhhuf/jYv5603Rhi36ht0t+pE5iK7
vCg3x98oqhe6VSceuqh45cpXVZqaGs+mqo3aKhgfC/L7y5lLxKTVl7UugMPk
3FKpF6Qms6VVEX/v7FVo2DgwmyQdkd0RITnZ5FvhbWbEmlvhHYoE5Nx6x4LV
JYXsFW/4Ogn22BfxiFUdaChjdTm3UpXQyAjcqpcQD9u6JUme3e9bWcI6vEoO
7bSSqkxOtFIJvJ1VJFW5GubEI47IrfoOUooSt+rCqCWjm1yqIgJy/p5Ag4d1
hy7PpvE8O7b8qwINu2Wu3oxu1enkAdW4fNSWuVUXznyiR0q4RkIvH3QjVamx
65uarN2q857JM3Wrbi9VmbSj+XerzqWfH16ZTVNsOGqT4PQuqzwaMmWtqgEA
AAAAsLhwvzBR77wuIFd+R4KddeSK6sCE2eGtAtnYsIy/TnqmBd8G7tvZPhTB
t0hvKy/0FBV6rKSq1Mwh7aJwcoG1d2OlT5s9ng3ga77pDdFD3U30Nuoe610E
9GZtbxW+Vl65WVu/skd6lEyZdhataybXfB9gbqlmr6jGN4BXLkcZKWaUHzbS
zp3kh/qdU653VdFdT74tyn3o5JZzwQ2AZP3uDwTxdeGoCgrU9OO8V6wsKCwu
slZaaIHT+83V9Cs11d9Ry14g7kqqIic1VlWjNoN91dCKy19L7iXHV3sXCK9f
JxsevN4iXzUqQ+WOdf3Mo6RqZNhJVWRPBfOK300Bpi0/0bny8Tt5OfV5P/nt
0U/HTx/v28Ve5Odaqqpf8tg7+z4+c/rTvl0/qV/yqK5cnT/w1pKcpn3Hx8/P
qkpStM+P4n20/o1hkVKlu9J64c2B0PCZo1v3oqRWfDxrnRg1L89U9PYNj4c+
bn/hMTYNRJt6dO8rzadOD596d63ikks5/Pjtqa2P1i95quXIcVQIva/8pL5i
g34k8PZY+zMoqT9r78ZF9BEO9qmPzt8W5Et2CEhRhBjHPoo5Yla4NtWXnS5A
EsnuzlKOJF8MBS27b2Zgu1pSO4QTnpjqqPAUVfVr2aKrOTu/VVkeEZITB0pw
x9ndEcRXHnTsWFuArG7QpfWOH0dVUOCr3o/NBXqyCoVZ0sRe4DZSl+8p4H0h
ut5VZWNk6BiERiucTu1b1q36ZJMXZ6e2E1uJYOdOv2bteabfK9GKC1s/f1F+
cVG+UKqawzDHjjhKNZVUHSGmkuRRM5UCqcomamFc3OhjkSOyGyrP4A5dGpfJ
9SJ2z16AKt3q6mEVvuIOkZ6Lm43NqG0tVdnMfGhcxevJRKVDPS3u5gZA05/a
Vi09WbHbzg3H2Sw9TRnikvmqEhyvcyVVCVIryKzVHjA9CstbC60Syd2hacij
oJDVZ0ikIFsBAAAAwOIig4UJIhUfPbLFv5JMxopL1u3unpbuYaGnGwxryXik
RXGljkPomLgax0tI6szK4DkkHjlUVVJInqxqjsTxq0z92+TFvgb6LXHbe2hE
NtmIj7QpDlQ9K/woUv1ZO69Ht6LBRsX5bf7KUpwMVQxJXuyuVcP0VbUMXybn
UBgXNPGIGilNP/1hxgcAvw43qF6q8leW1/bMiDz3xgbq/MXqIv1WtGs39QRO
SmkomiBXfusXyjMzz+TkfqyAvaeej9LSv6zIu6Gua0atR1dSFfZOVkldkQdJ
TIkZreKKvKjcRHca0sZwcaZVaQPlNZ2TXJbFVSPGTqqixz1YcdVNAdo68Lkx
0rv1Z2/lEVHombXvd3+hHoRzK1WtHfi8/33/EyScio9OX72jx3Hl1K5n8efE
zRSF7FZ6VHj6L615mho5tYskz/NUy7vDWj+0kKrS6TvXhtW8PPqWf3vfefZi
wTtXT7/d8sxjSvI+/6Sd9dN1+8IAjSXviaZdH1+6jfOue6+6feHUvoq3PEqw
A19pm7NM+SLmRexOiq6amZM7sWPrcznVyL765t4FyNqc2/2It2EUr2+KZHlx
hM2RH9vVQj+TTi1T8yFVpaUjQiox0al6qSI9fZQVYRxb79hQQPVSVbB8rSFr
6uY33Rdi2r1UJTUyiRnNyBR6UfePcTqnVg6JyXbVSxVn7Q2g4mrWQltf2zkZ
j2Mlk24Js/QB5W6Ysxxx0lw14bEDxat+JZKqbKMWxcWOPhY5ouf9Te7QxXGZ
bwkhu7BsXb3powNpNheTakSSUVsgVaXtZj6JGWWMwLOL7uEPKp2fUGOEF/Sh
hX8qXpmxOkAnDJA3ZY7cqjNh4t9yhwod+qric2T9GK/Imb7Vsi86rMd5Sjfd
BmgXr9k4gFQFAAAAAAAALH6SZwOrrO9AXyRYCkf2P8l7UyLQ2Xl9X4yQw1+s
qAg8hKR4X4jADx9yojaTOzWAecPSrToAAAAAAAAAANkEv7V355J6QXEvVeED
gIx7KCsePKkK+6BbzToIAh5CkuG6/EUtLAPZ5nKHHzr+YgOkKgAAAAAAAACY
f/BByFWBiex5EsoqLqSqG2N97779Pvb4ZPf8AydVRY+W55uOEQEPD7HQ/qY9
2EPdqsYs+vwCFi+Jsx1NB4ifKPEJa+D+AFIVAAAAAAAAACwEyYnGEr/Da+IX
GjdS1ae/9eTUe55tP/2tzZMPmFT1Xaim2OUNd8APi+gH2Pn28uqOqPBeD+AH
RWJoZyF2xRYYBqFqsQFSFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
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
Z8Rqdqrk3eRTXZ+Nmw7x8QtMi6m1dv+77bEavjFkayUl3VUlGXkdSlVkYYtG
q8INeMI83LnTh9qYR5hTarG9VXg2O9wTwMnW2oydVMUNtXKpysXQYNxVNVhd
oDZ4nMKKlQWFxUXZkqrStyK1xVyXwbNxJ7uqZlq8WnbQ3H5beSHq4x7rKUr7
LtJH6PZpsotpVTVqJ9ilkHR1I91V9V6J1t7wD/1F+cVF+dZSlfzgMJ2ioHrf
rzxPd3Szh/G5MnQx5TNAM8u0TGal7FSqcml/pB1Tnni+efPIa9/c5LhK5/oF
3wBaSPL2E68ITHvO1FZz2IxKDuybp7QGt2e6WBYquvZkIFXhNMRHj2zxryRn
gYtL1u3unha45HIkVWH4U+emDsKLIUbviBlLVWlOB0Od1Grj0zxJVaZcm28D
tD0AaBDxjPWoDdASR1Ju8sWXlSAuc0rmRapKxwbq/NgloOa33NgFEjN9DVUl
RBQq8la1DPPXo8RHWqhTu0LvpkORPu4tWzxyiP6wuKSqORLHWjQT+K1osJF6
IyxYvrau6yLzsvKiFiN2VXdoJO40RvYxMl6MzoZqif+6/JWVDUPGhTkVzP2y
oxYiL7LqbDz157GjJ8ueUz2TB8YvMNedp29cOXEw9HQZ/vbxX4QODn9jPCpG
t+XsmLietoJ1rv7thYOvBh8nsbx8+MJ1/CKbWRFo3/qCLx2+cK6XXS98f+HE
KZrCwl+dOnaRHDbRDgDGphpVL1VLn+t/7cQV9RhL6spnp8rKZL58pVIV4q/X
xkarfxVcSlJVFhg79y1TMky54ZIZV9Zpc/BVlbo+fkZxaIwrYmzs2p/xjjK6
LW2+pCoar5pNtIjejEr4fwV5cSZVIb4ON6i+MvJXltf2MFudeeSd1zjNkHYr
BhfDFk5e56S+JenWTOtG4i6S6DPJi9209+V6VviQ6bicIOqQupMB9U0/7sjY
OYPBmomjcDU9I2+utfugE8O7ivJXbmnXTM3FNrSU8O0Jx/nixYlk769HaWuc
nGhUokDWm70W2W41wWyYJ05TuV1e8pm8rMqs21I80qa460S2ekNd14zVfIK9
nVAtBy+abh2IxC2bGaciJiY6VZ8MZDgYFcyXbKqeRS6wpCVWNKtSFeKmHtHS
55CZnbmmF4huXpY+N3Bw/JJTy2MwpOY00NOC3BltzO2LE43UpCO7/WLo4Jhs
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
AAAAAAAAAAAAAAAA8PDw/wHnyRRq
    "], {{0, 171.61487328901836`}, {955.882843179742, 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{119.98960000000002`, 119.98960000000002`},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{955.882843179742, 171.61487328901836`},
  PlotRange->{{0, 955.882843179742}, {0, 171.61487328901836`}}]], "Input",
 CellID->13245239,ExpressionUUID->"173fee4e-9633-4fe2-8dfd-a834cd45f91e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FormulaGrid", "[", 
   RowBox[{"list_", ",", "type_"}], "]"}], ":=", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"{", "list", "}"}], "]"}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"Left", ",", "Automatic"}], "}"}]}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Lighter", "[", 
           RowBox[{
            RowBox[{"Blend", "[", 
             RowBox[{"Switch", "[", 
              RowBox[{"type", ",", "M", ",", 
               RowBox[{"{", 
                RowBox[{"Blue", ",", "Green"}], "}"}], ",", "CM", ",", 
               RowBox[{"{", 
                RowBox[{"Red", ",", "Orange"}], "}"}], ",", "FM", ",", 
               RowBox[{"{", 
                RowBox[{"Magenta", ",", "Cyan"}], "}"}], ",", "C", ",", 
               RowBox[{"{", 
                RowBox[{"Purple", ",", "Red"}], "}"}]}], "]"}], "]"}], ",", 
            ".8"}], "]"}], ",", "White"}], "}"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", "30"}]}], "]"}]}]], "Input",
 CellLabel->"In[171]:=",
 CellID->812561,ExpressionUUID->"60f08f06-0594-480c-86b3-ebf9180efd47"],

Cell["Make a table of raw moments for the distribution.", "Text",
 CellChangeTimes->{{3.8830635606752105`*^9, 3.883063572480199*^9}},
 CellID->45786037,ExpressionUUID->"60d23e36-6a18-40a0-bb48-5b7d5fe0ea91"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FormulaGrid", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Moment", "[", 
       RowBox[{
        RowBox[{"GammaDistribution", "[", 
         RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}], ",", "r"}], "]"}], "//",
       "Together"}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", "5"}], "}"}]}], "]"}], ",", "M"}], "]"}]], "Input",
 CellLabel->"In[172]:=",
 CellID->8923541,ExpressionUUID->"2fdf935f-a301-4c4a-be6e-dbba5da16f9d"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"\[Alpha]", " ", "\[Beta]"}]},
    {
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "2"]}]},
    {
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "3"]}]},
    {
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "4"]}]},
    {
     RowBox[{"\[Alpha]", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "\[Alpha]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", "\[Alpha]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", "\[Alpha]"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"4", "+", "\[Alpha]"}], ")"}], " ", 
      SuperscriptBox["\[Beta]", "5"]}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[0.8, 0.9, 0.9], 
        GrayLevel[1]}}},
   GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}},
   GridBoxItemSize->{"Columns" -> {{30}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.883063558096199*^9},
 CellLabel->"Out[172]=",
 CellID->79767116,ExpressionUUID->"92366045-b1f4-4f51-a607-377fef862f9d"]
}, Open  ]],

Cell["The statement of the problem matches Mathematica's output.", "Text",
 CellChangeTimes->{{3.883063672984212*^9, 3.8830636966452017`*^9}},
 CellID->260428327,ExpressionUUID->"d50964bf-1415-4acb-9fef-773233d2f1ba"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1152., 615.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "UpdatedTimestamp" -> 
  3.8572120809455172`17.338848507479508*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> ""},
CreateCellID->True,
SpellingDictionaries->{"CorrectWords"->{
 "Bq", "Wallenius", "Eggenberg", "geomarkers", "Milliken\[CloseCurlyQuote]s", 
  "Millikens", "Rappahannock", "Bristoe", "Stoneman\[CloseCurlyQuote]s", 
  "Phillipi", "Philippi", "Cherboug", "Spotsylvania", "Donelson", 
  "Totopotomoy", "combinatorialist", "twelvefold", "multicombination", 
  "Ethiopic", "absement", "mol", "cd", "na\[IDoubleDot]ve", "Giancoli", "th"}},
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], DockedCells -> {
      Cell[
       BoxData[
        TemplateBox[{}, "MainGridTemplate"]], "DockedCell", 
       CellMargins -> {{-10, -10}, {-8, -8}}, CellFrame -> 0, Background -> 
       RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
       CellTags -> {"MainDockedCell"}, CacheGraphics -> False], 
      Cell[
       BoxData[
        TemplateBox[{}, "ToolsGridTemplate"]], "DockedCell", 
       TaggingRules -> {"Tools" -> True}, CellTags -> {"ToolbarDockedCell"}, 
       CellFrameMargins -> {{39, 5}, {2, 2}}, CellFrame -> {{0, 0}, {1, 0}}, 
       CacheGraphics -> False, CellOpen -> Dynamic[
         CurrentValue[
          EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]]]}, 
    AutoQuoteCharacters -> {}], 
   Cell[
    StyleData["Item"], DefaultNewCellStyle -> "Item"], 
   Cell[
    StyleData["MoreInfoText", StyleDefinitions -> StyleData["Text"]], 
    FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["ErrorText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, Inherited}, {10, 10}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0, "ClosedCellHeight" -> 0}, 
    FontWeight -> Bold, FontColor -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["WarningText", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 35}, {0, 0}}, FontSize -> 
    14, GridBoxOptions -> {BaseStyle -> {}}], 
   Cell[
    StyleData["ButtonText"], FontFamily -> "Sans Serif", FontSize -> 11, 
    FontWeight -> Bold, FontColor -> RGBColor[0.458824, 0.458824, 0.458824]], 
   Cell[
    StyleData["MoreInfoOpenerIconTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[
               0.6274509803921569, 0.6274509803921569, 0.6274509803921569, 
                1.]]}, StripOnInput -> False]}, ImageSize -> {11., 11.}, 
           PlotRange -> {{0., 11.}, {0., 11.}}, AspectRatio -> Automatic], 
         True -> GraphicsBox[{
            Thickness[0.09090909090909091], 
            StyleBox[{
              
              JoinedCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "], CurveClosed -> {1}]}, {
              JoinForm[{"Miter", 10.}], 
              Thickness[0.04581818255511197], 
              RGBColor[
              0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
               1.]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZiAAOF25VKDkD6QeAOUQckvgKHjhSIThCYoQii
HbYVy4HVqbApgOgVx06DaYaoJzIgumJfPMScpbMlQHQAj5MyiF7wXl0EmX+g
KIMfmZ9gfZ8NWb9CTD8Divm/6r7YI9l/wP3hK3sk98H4MPfD+A1TnQWR9TOc
/86JbD6D4gZmZPsZmg78skdyH4Pous/2SO6H8WH+g/Fh/ofph4UP3Hxo+MHt
h4YvzH0o4Q8Ayr1fpA==
               "]]}, {
              FaceForm[
               RGBColor[
               0.5019607843137255, 0.5019607843137255, 0.5019607843137255, 
                1.]]}, StripOnInput -> False], 
            StyleBox[{
              
              FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
                 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1,
                 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                0}}}, {CompressedData["
1:eJxTTMoPSmViYGCQBGIQzcDw4OydWhEHBoYJO6YlyIBoE+cbwkj8CybOHiB+
xY5p00D8BefunBUC0g8CDdhkgTQHk0A4iF8j97cYxP9w7o4kiL+kJZlBDomv
EmiwFpm/RPZvpDyQtjF1DgXxzzQnP5NHMv/cQUNNBSDNklHmBrJ/20HDeBD/
SHrZNRB/1UHDKhAf5n4Yf8rZOxqiSPyQs3d2iCLpfzNzpb4YkvktaWXLxJDs
v3DmzkMxJPfB+DD3w/gFgQZMckj6PV6fLJVFMh8WPgqzVu4C2e/SmjwDFH4J
s1ZqiSKFL2r4AwBR8n/j
                "], CompressedData["
1:eJxTTMoPSmViYGCQB2IQzcBQ8J9fV8KBgeFBne5FTgcEn6FB15MdSAfMWXlO
AAsfpr5j9soJQkD6x5PJjVxAWsHUeQqIv8Pr13duEH3uznQQv2BDQgMvEn/H
+gQ5fiT+lq7kGAEkvkG4gZAgEj9g77QNyPw1e6YpCiPx34QavAbx3zAKTAPx
OfZMmyQCpPecu9MH4p/ZPU1SFEirmDp3g/gTdk9bAOIfOHenFcRveXdSTwxI
x2SUNYD4d9qTD4H4LGbOk0HuilD8yyKOxF/x9qQsKJw6jJ21QOoW7Jz2RxJk
PoPADBD/y5uTm0D8KWllTSD+H8W/k0WR+DD/wOWV/woj82HhAeN31OiK8yPx
VzyeXAoKzwRj5xawvPjxD6DwPjJzZacYUnygxi8A+72aOA==
                "]}]}, {
              FaceForm[
               RGBColor[1., 1., 1., 1.]]}, StripOnInput -> False]}, 
           ImageSize -> {11., 11.}, PlotRange -> {{0., 11.}, {0., 11.}}, 
           AspectRatio -> Automatic]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["MoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], 
           "\"Click for more information\""}, "PrettyTooltipTemplate"], 
         ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ParentCell[
              EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ParentCell[
                EvaluationCell[]], {
               TaggingRules, "AttachedMoreInfoTag"}] === #], CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ParentCell[
                EvaluationCell[]], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ParentCell[
                 EvaluationCell[]], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["InlineMoreInfoOpenerButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (AdjustmentBox[
        ButtonBox[
         TemplateBox[{
           TemplateBox[{}, "MoreInfoOpenerIconTemplate"], #4}, 
          "PrettyTooltipTemplate"], ButtonFunction :> (NotebookDelete[
            CurrentValue[
             ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}]]; If[
            And[
             MatchQ[
              CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}], 
              Blank[CellObject]], CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] === #],
             CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             Inherited; CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = 
             Inherited; Null, CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoTag"}] = #; 
            CurrentValue[
               ReleaseHold[#3], {TaggingRules, "AttachedMoreInfoCell"}] = 
             MathLink`CallFrontEnd[
               FrontEnd`AttachCell[
                ReleaseHold[#3], #2, "Inline", 
                "ClosingActions" -> {"ParentChanged", "EvaluatorQuit"}]]]), 
         Appearance -> None, Evaluator -> Automatic, Method -> "Preemptive"], 
        BoxBaselineShift -> -0.5, BoxMargins -> 0.2]& )}], 
   Cell[
    StyleData["ClickToCopyTemplate"], 
    TemplateBoxOptions -> {
     DisplayFunction -> (PaneSelectorBox[{False -> TagBox[
           GridBox[{{#, 
              ButtonBox[
               GraphicsBox[{
                 GrayLevel[0.75], 
                 Thickness[
                  NCache[
                   Rational[2, 45], 0.044444444444444446`]], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 18.}, {
                   9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 18.}, {12., 
                   18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {16.5, 4.5}, {
                   16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {15.75, 17.25}, {
                   15.75, 5.25}, {6.75, 5.25}, {6.75, 17.25}, {8.25, 17.25}, {
                   8.25, 18.}}, {{9.75, 17.25}, {12.75, 17.25}, {12.75, 
                   16.5}, {9.75, 16.5}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 14.25}, {
                  14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{8.25, 12.}, {
                  14.25, 12.}, {14.25, 11.25}, {8.25, 11.25}}, {{8.25, 
                  9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25, 9.}}, {{8.25, 
                  7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 6.75}}}]}, 
                ImageSize -> 12], ButtonFunction :> Null, 
               Appearance -> {
                "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
               Evaluator -> Automatic, Method -> "Preemptive"]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}},
             AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], True -> 
         DynamicModuleBox[{RSNB`clickTime$$ = 0., RSNB`timeout$$ = 3.}, 
           TagBox[
            GridBox[{{#, 
               TagBox[
                ButtonBox[
                 DynamicBox[
                  ToBoxes[
                   Refresh[
                    If[AbsoluteTime[] - RSNB`clickTime$$ > RSNB`timeout$$, 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Mouseover[
                    Graphics[{
                    GrayLevel[0.5], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], 
                    Graphics[{
                    RGBColor[
                    0.9882352941176471, 0.4196078431372549, 
                    0.20392156862745098`], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12]], 
                    "Click to copy to the clipboard"], 
                    (RawBoxes[
                    TemplateBox[{
                    ToBoxes[#], 
                    ToBoxes[#2]}, "PrettyTooltipTemplate"]]& )[
                    Graphics[{
                    RGBColor[0, 
                    Rational[2, 3], 0], 
                    Thickness[
                    Rational[2, 45]], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}}, {{{10.5, 18.75}, {10.5, 
                    18.}, {9., 18.}, {9., 15.75}, {13.5, 15.75}, {13.5, 
                    18.}, {12., 18.}, {12., 18.75}}, {{6., 18.}, {6., 4.5}, {
                    16.5, 4.5}, {16.5, 18.}, {14.25, 18.}, {14.25, 17.25}, {
                    15.75, 17.25}, {15.75, 5.25}, {6.75, 5.25}, {6.75, 
                    17.25}, {8.25, 17.25}, {8.25, 18.}}, {{9.75, 17.25}, {
                    12.75, 17.25}, {12.75, 16.5}, {9.75, 16.5}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{8.25, 
                    14.25}, {14.25, 14.25}, {14.25, 13.5}, {8.25, 13.5}}, {{
                    8.25, 12.}, {14.25, 12.}, {14.25, 11.25}, {8.25, 
                    11.25}}, {{8.25, 9.75}, {14.25, 9.75}, {14.25, 9.}, {8.25,
                     9.}}, {{8.25, 7.5}, {14.25, 7.5}, {14.25, 6.75}, {8.25, 
                    6.75}}}]}, ImageSize -> 12], "Copied"]], UpdateInterval -> 
                    1, TrackedSymbols :> {RSNB`clickTime$$}], StandardForm], 
                  Evaluator -> "System"], 
                 ButtonFunction :> (RSNB`clickTime$$ = AbsoluteTime[]; 
                  CopyToClipboard[
                    BinaryDeserialize[
                    BaseDecode[#2], Defer]]), 
                 Appearance -> {
                  "Default" -> None, "Hover" -> None, "Pressed" -> None}, 
                 Method -> "Queued", Evaluator -> "System"], 
                MouseAppearanceTag["LinkHand"]]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
           DynamicModuleValues :> {}]}, 
        Dynamic[
         CurrentValue["MouseOver"]], ImageSize -> Automatic, FrameMargins -> 
        0]& )}], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain", 
           StripOnInput -> False], Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8, StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[
            0.5372549019607843, 0.5372549019607843, 0.5372549019607843], 
           FontSize -> 12, FontWeight -> "Plain", FontTracking -> "Plain"], 
          Background -> 
          RGBColor[
           0.9607843137254902, 0.9607843137254902, 0.9607843137254902], 
          FrameStyle -> 
          RGBColor[
           0.8980392156862745, 0.8980392156862745, 0.8980392156862745], 
          FrameMargins -> 8], "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ToolsGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           ButtonBox[
            StyleBox[
            "\"Insert Code Group\"", "Text", FontFamily -> "Source Sans Pro", 
             FontSize -> 11, StripOnInput -> False], ButtonFunction :> 
            With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
              Quiet[
               
               Block[{$ContextPath = RSNB`$cp$, 
                 ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                 False}, 
                Internal`WithLocalSettings[
                 ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                  Needs["ResourceSystemClient`DefinitionNotebook`"], 
                  ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                  RSNB`nb$, 
                   
                   ComputationalEssayHelpers`Private`\
createComputationalParagraph[]], 
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                   False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
            BaseStyle -> Dynamic[
              FEPrivate`If[
               CurrentValue[Enabled], 
               FEPrivate`If[
                CurrentValue["MouseOver"], {
                FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                FontColor -> 
                 RGBColor[
                  0.17960779999999998`, 0.17960779999999998`, 
                   0.17960779999999998`]}], {
               FontColor -> 
                RGBColor[
                 0.5898038999999999, 0.5898038999999999, 
                  0.5898038999999999]}], Evaluator -> "System"], 
            Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
              "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
            Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
            "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
            Evaluator -> Automatic], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Headings\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Section", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "4" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Section"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "5" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subsubsection", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "6" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subsubsection"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], Delimiter, DynamicBox[
               ToBoxes[
                
                Grid[{{"Title", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "1" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Title"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Subtitle", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "2" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Subtitle"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"Chapter", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "3" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Chapter"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Author\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Author"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Abstract\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Abstract"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             TemplateBox[{
               StyleBox[
                
                TemplateBox[{
                 "\"Insert Text\"", 
                  "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\
\""}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
                StripOnInput -> False], 
               "\"Insert a cell of the chosen type below the current \
selection\""}, "PrettyTooltipTemplate"], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {DynamicBox[
               ToBoxes[
                
                Grid[{{"Text", " (" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Text"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], DynamicBox[
               ToBoxes[
                
                Grid[{{"CodeText", " (" <> "Shift+" <> 
                   If[$OperatingSystem === "MacOSX", "Cmd", "Alt"] <> "+" <> 
                   "7" <> ")"}}, Alignment -> {{Left, Right}, Automatic}, 
                 ItemSize -> {10, Automatic}], StandardForm]] :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "CodeText"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Item\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`createCellBelow[
                    "Item"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           ActionMenuBox[
            ButtonBox[
             StyleBox[
              
              TemplateBox[{
               "\"Open/Close Groups\"", 
                "\"\[ThinSpace]\[ThinSpace]\[ThinSpace]\[FilledDownTriangle]\"\
"}, "RowDefault"], "Text", FontFamily -> "Source Sans Pro", FontSize -> 11, 
              StripOnInput -> False], ButtonFunction :> 
             With[{RSNB`nb$ = ButtonNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; CurrentValue[
                    RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ProgressIndicator[Appearance -> "Necklace"]; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, Null], 
                   CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
                    ""; ResourceSystemClient`DefinitionNotebook`$\
ButtonsDisabled = False; Null]; Null]]], FrameMargins -> {{4, 4}, {0, 0}}, 
             BaseStyle -> Dynamic[
               FEPrivate`If[
                CurrentValue[Enabled], 
                FEPrivate`If[
                 CurrentValue["MouseOver"], {
                 FontColor -> RGBColor[0.898039, 0.898039, 0.898039]}, {
                 FontColor -> 
                  RGBColor[
                   0.17960779999999998`, 0.17960779999999998`, 
                    0.17960779999999998`]}], {
                FontColor -> 
                 RGBColor[
                  0.5898038999999999, 0.5898038999999999, 
                   0.5898038999999999]}], Evaluator -> "System"], 
             Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqt7e3HQaAbLhiuLLz588DpR48eAC3
AsgGigDF4coePnzY19cH5yI7BigOlIW4Fqilu7sbq7OB4kBZBjAgRhmRphHv
NiJ9Sny4ERMLaABrnAIA5lG1ZQ==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Hover" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCl2EAWRBZGVCqs7WpoaoEgoBsuGK4svPnzzfWlK+o
9dve4AJBQDZQBCgOV/bw4cOOloZVtb5wNRAEFAGKA2UhrgVqaaouRlMDQUBx
oCwDGBCjjEjTiHcbkT4lPtyIiQVi4hQArnpwkw==
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True], 
               "Pressed" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQPEUCL2EAWRBZGVDqw5dvrz9BEZANVwxX9urVq3efvxUt
PujVuQGCgGygCFAcruzZs2fvPn3Nmb8frgaCgCJAcaAsxLVALc/efUZTA0FA
caAsAxgQo4xI04h3G5E+JT7ciIkFYuIUAHu5mtk=
                 "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
             Background -> RGBColor[0.898039, 0.898039, 0.898039], Method -> 
             "Queued", ImageSize -> {All, 20}, Enabled -> Dynamic[
               Not[
                TrueQ[
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
               TrackedSymbols :> {
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
             Evaluator -> Automatic], {
            "\"Open Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Chapters\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Chapter", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Open]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Close Sections\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`openCloseAll[
                    ButtonNotebook[], "Section", Closed]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]]}}, 
         GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {1 -> RGBColor[0.898039, 0.898039, 0.898039]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "ColumnsIndexed" -> {1 -> 0, -1 -> 0}, "Rows" -> {{Automatic}}}, 
         FrameStyle -> GrayLevel[0.75]], "Grid"]& )}], 
   Cell[
    StyleData["MainGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{
           TagBox[
            GridBox[{{
               GraphicsBox[{{
                  Thickness[0.03333333333333333], {
                   FaceForm[{
                    RGBColor[
                    0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27.,
                     1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                    2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                   FaceForm[{
                    RGBColor[0.898, 0.898, 0.898], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23.,
                     2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                   FaceForm[{
                    RGBColor[1., 1., 1.], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22.,
                     2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                    5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                    4.}, {11., 3.}, {8., 3.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {
                    0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{9.697299999999998, 24.522}, {
                    9.133299999999998, 24.645}, {8.861299999999998, 
                    24.259999999999998`}, {9.313299999999998, 24.092}}, {{
                    9.291299999999998, 23.933}, {8.9683, 
                    24.052999999999997`}, {9.2183, 23.726999999999997`}, {
                    9.587299999999999, 23.601}}, {{9.553299999999998, 
                    23.447}, {9.169299999999998, 23.578}, {8.760299999999999, 
                    23.456999999999997`}, {9.102299999999998, 
                    23.348999999999997`}}, {{9.083299999999998, 22.633}, {
                    9.025299999999998, 23.208}, {8.567299999999998, 23.354}, {
                    8.555299999999999, 22.865}}, {{8.521299999999998, 
                    23.551}, {9.039299999999999, 23.703}, {8.711299999999998, 
                    24.13}, {8.2183, 23.962999999999997`}}, {{8.4073, 
                    23.197}, {8.171299999999999, 22.851}, {8.171299999999999, 
                    22.445}, {8.398299999999999, 22.837}}, {{
                    8.091299999999999, 23.014}, {8.395299999999999, 23.458}, {
                    8.091299999999999, 23.871}, {7.786299999999999, 
                    23.458}}, {{8.010299999999999, 22.851}, {
                    7.773299999999999, 23.197}, {7.782299999999998, 22.837}, {
                    8.010299999999999, 22.445}}, {{7.964299999999999, 
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                    7.141299999999999, 23.703}, {7.659299999999998, 
                    23.551}}, {{7.626299999999999, 22.865}, {
                    7.614299999999998, 23.354}, {7.155299999999999, 23.209}, {
                    7.097299999999999, 22.633999999999997`}}, {{
                    7.078299999999999, 23.348999999999997`}, {
                    7.422299999999998, 23.456999999999997`}, {
                    7.0112999999999985`, 23.578}, {6.6282999999999985`, 
                    23.447}}, {{6.593299999999998, 23.601}, {
                    6.962299999999999, 23.726999999999997`}, {
                    7.214299999999998, 24.054}, {6.889299999999999, 
                    23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                    7.319299999999998, 24.259999999999998`}, {
                    7.0482999999999985`, 24.645}, {6.484299999999998, 
                    24.522}}, {{7.113299999999999, 25.217}, {
                    7.158299999999999, 24.761}, {7.356299999999999, 
                    24.479999999999997`}, {7.344299999999999, 24.904}}, {{
                    7.5032999999999985`, 24.817999999999998`}, {
                    7.518299999999998, 24.279}, {8.010299999999999, 24.113}, {
                    8.010299999999999, 24.637999999999998`}}, {{
                    7.2452999999999985`, 25.302}, {7.4712999999999985`, 
                    24.997}, {7.8622999999999985`, 24.857}, {
                    7.656299999999998, 25.122}}, {{7.800299999999998, 
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                    25.192}, {8.091299999999999, 25.689}}, {{
                    8.171299999999999, 24.637999999999998`}, {
                    8.171299999999999, 24.113}, {8.663299999999998, 24.279}, {
                    8.677299999999999, 24.817999999999998`}}, {{
                    8.836299999999998, 24.904}, {8.8243, 
                    24.479999999999997`}, {9.022299999999998, 24.761}, {
                    9.068299999999999, 25.217}}, {{8.318299999999999, 
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                    25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                    "]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11.,
                     25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                    26.}, {11., 26.}}}]}, {
                   FaceForm[{
                    RGBColor[0.749, 0.749, 0.749], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24.,
                     22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                   FaceForm[{
                    RGBColor[0.984, 0.6859999999999999, 0.365], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {
                    24., 20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 
                    20.}, {18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {
                    10., 19.}, {6., 19.}}, {{11., 19.}, {17., 19.}, {17., 
                    18.}, {11., 18.}}}], 
                   
                   FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                    0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1,
                     0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 
                    2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 
                    1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0,
                     1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{
                    0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                    "]]}, {
                   FaceForm[{
                    RGBColor[0.392, 0.392, 0.392], 
                    Opacity[1.]}], 
                   
                   FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                    3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                    3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                    3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                    0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                    "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                    "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                    "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                    "]}]}}}, {
                ImageSize -> {Automatic, 32}, 
                 ImagePadding -> {{5, 0}, {0, 0}}, BaselinePosition -> 
                 Scaled[0.25], AspectRatio -> Automatic, 
                 ImageSize -> {30., 30.}, 
                 PlotRange -> {{0., 30.}, {0., 30.}}}], 
               StyleBox[
                TagBox[
                 GridBox[{{
                    StyleBox[
                    "\"Computational Essay\"", FontFamily -> 
                    "Source Sans Pro", FontWeight -> "SemiBold", StripOnInput -> 
                    False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
                  False, 
                  GridBoxDividers -> {
                   "Columns" -> {{None}}, "Rows" -> {{None}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"], FontSize -> 24, FontColor -> GrayLevel[1], 
                StripOnInput -> False]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", 
           "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]", "\"\""}, {
           ActionMenuBox[
            TemplateBox[{
              TemplateBox[{
                TemplateBox[{"\"Sample Content\"", 
                  TemplateBox[{5}, "Spacer1"], "\"\[FilledDownTriangle]\""}, 
                 "RowDefault"], 
                "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\""}, "PrettyTooltipTemplate"], Null& , 
              "\"Clear sample content in the current notebook, or view a \
completed sample computational essay\"", True}, "OrangeButtonTemplate"], {
            "\"Insert Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    ComputationalEssayHelpers`Private`insertSampleContent[]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Clear Sample Content\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    Module[{$CellContext`cells = Flatten[
                    Map[{NotebookFind[
                    ButtonNotebook[], #, All, CellTags, AutoScroll -> False]; 
                    SelectedCells[]}& , {
                    "ExampleTopicSentence", "TopicSentenceButton", 
                    "ExampleCodeText", "ExampleInput", "ExampleOutput", 
                    "EssayStructureExample", "CitationExample", 
                    "SectionMoreInfoYourEssayTitle", 
                    "SectionMoreInfoAuthorInfoButton", 
                    "SectionMoreInfoAbstract", 
                    "SectionMoreInfoSectionHeaderInfoButton"}]]}, 
                    NotebookDelete[$CellContext`cells]]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]], "\"Open Sample Essay\"" :> 
             With[{RSNB`nb$ = InputNotebook[], RSNB`$cp$ = $ContextPath}, 
               Quiet[
                
                Block[{$ContextPath = RSNB`$cp$, 
                  ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
                  False}, 
                 Internal`WithLocalSettings[
                  ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    True; Once[
                    ReleaseHold[
                    CurrentValue[
                    RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                    "KernelSession"]; 
                   Needs["ResourceSystemClient`DefinitionNotebook`"], 
                   ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                   RSNB`nb$, 
                    SystemOpen["https://wolfr.am/SampleEssay"]], 
                   ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                    False; Null]; Null]]]}, Appearance -> None, Method -> 
            "Queued", Enabled -> Dynamic[
              Not[
               TrueQ[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
              TrackedSymbols :> {
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}]], 
           
           TemplateBox[{
            "\"Open Guidelines\"", SystemOpen[
             "https://wolfr.am/ComputationalEssayGuidelines"]& , "\"\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             TemplateBox[{
               TagBox[
                GridBox[{{"\"Tools\"", 
                   PaneSelectorBox[{False -> GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{0., 0.65}, {0., -0.65}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None], True -> 
                    GraphicsBox[{
                    GrayLevel[1], 
                    AbsoluteThickness[1], 
                    LineBox[{{-1, -1}, {-1, 1}, {1, 1}, {1, -1}, {-1, -1}}], 
                    LineBox[{{-0.65, 0.}, {0.65, 0.}}]}, ImageSize -> 8, 
                    PlotRangePadding -> None, Background -> None]}, 
                    Dynamic[
                    CurrentValue[
                    EvaluationNotebook[], {TaggingRules, "ToolsOpen"}, True]],
                     BaselinePosition -> Scaled[-0.1]]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{0.35}}}], "Grid"], 
               "\"Toggle documentation toolbar\""}, "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`ToggleToolbar[
              ButtonNotebook[]]& , "\"Toggle documentation toolbar\"", False},
             "OrangeButtonTemplate"], 
           TagBox[
            
            GridBox[{{"\"\"", "\"\""}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Center}}}, AutoDelete -> 
             False, GridBoxDividers -> {
              "ColumnsIndexed" -> {2 -> True}, "Rows" -> {{False}}}, 
             GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{2}}},
              GridBoxSpacings -> {"Columns" -> {{0.5}}}, FrameStyle -> 
             RGBColor[0.99215, 0.843125, 0.68235]], "Grid"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Check\"", "\"Check notebook for potential errors\""}, 
              "PrettyTooltipTemplate"], 
             ResourceSystemClient`DefinitionNotebook`CheckDefinitionNotebook[
              ButtonNotebook[]]& , "\"Check notebook for potential errors\"", 
             False}, "OrangeButtonTemplate"], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Publish to Cloud\"", 
               "\"Publish your computational essay to the cloud\""}, 
              "PrettyTooltipTemplate"], 
             With[{$CellContext`nb = ButtonNotebook[]}, CreateDialog[
                
                ComputationalEssayHelpers`Private`createSubmissionDialog[$\
CellContext`nb], WindowSize -> {350, 150}, Background -> White, WindowFrame -> 
                "Normal", "Evaluator" -> "System"]; Null]& , 
             "\"Publish your computational essay to the cloud\"", False}, 
            "OrangeButtonTemplate"], 
           ItemBox[
            StyleBox[
             DynamicBox[
              ToBoxes[
               CurrentValue[
                EvaluationNotebook[], {TaggingRules, "StatusMessage"}, ""], 
               StandardForm], Evaluator -> "System", 
              Initialization :> (CurrentValue[
                 EvaluationNotebook[], {TaggingRules, "StatusMessage"}] = 
               "")], "Text", 
             GrayLevel[1], StripOnInput -> False], ItemSize -> Fit, 
            StripOnInput -> False], 
           TemplateBox[{
             
             TemplateBox[{
              "\"Submit to Notebook Archive\"", 
               "\"Submit your essay to the Wolfram Notebook Archive\""}, 
              "PrettyTooltipTemplate"], 
             ComputationalEssayHelpers`Private`submitEssay[]& , 
             "\"Submit your essay to the Wolfram Notebook Archive\"", False}, 
            "OrangeButtonTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Left}}, "ColumnsIndexed" -> {-1 -> Right}, 
           "Rows" -> {{Center}}}, AutoDelete -> False, 
         GridBoxBackground -> {"Columns" -> {{None}}, "Rows" -> {
             RGBColor[0.9843, 0.68625, 0.3647], 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxFrame -> {
          "Columns" -> False, 
           "RowsIndexed" -> {
            1 -> RGBColor[0.9843, 0.68625, 0.3647], 2 -> 
             RGBColor[0.7185389999999999, 0.5009625, 0.266231]}}, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {
          "Columns" -> {5, {0.9}, 5}, 
           "RowsIndexed" -> {1 -> 1.1, 2 -> 1.3, 3 -> 1.55}}, FrameStyle -> 
         RGBColor[0.9843, 0.68625, 0.3647]], "Grid"]& )}], 
   Cell[
    StyleData["ReviewerCommentLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        GridBox[{{#, 
           TemplateBox[{
             GraphicsBox[{{
                Thickness[0.03333333333333333], {
                 FaceForm[{
                   RGBColor[
                   0.8200000000000001, 0.8200000000000001, 
                    0.8200000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{27., 
                  1.}, {3., 1.}, {3., 29.}, {27., 29.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{4., 
                  2.}, {26., 2.}, {26., 28.}, {4., 28.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  2.}, {6., 2.}, {6., 10.}, {24., 10.}}}]}, {
                 FaceForm[{
                   RGBColor[0.898, 0.898, 0.898], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{23., 
                  2.}, {7., 2.}, {7., 9.}, {23., 9.}}}]}, {
                 FaceForm[{
                   RGBColor[1., 1., 1.], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{22., 
                  2.}, {12., 2.}, {12., 8.}, {22., 8.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}}, {{{8., 7.}, {11., 7.}, {11., 8.}, {8., 8.}}, {{8., 
                  5.}, {11., 5.}, {11., 6.}, {8., 6.}}, {{8., 4.}, {11., 
                  4.}, {11., 3.}, {8., 3.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                   0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                   0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                   0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                   0}}}, {{{9.697299999999998, 24.522}, {9.133299999999998, 
                   24.645}, {8.861299999999998, 24.259999999999998`}, {
                   9.313299999999998, 24.092}}, {{9.291299999999998, 
                   23.933}, {8.9683, 24.052999999999997`}, {9.2183, 
                   23.726999999999997`}, {9.587299999999999, 23.601}}, {{
                   9.553299999999998, 23.447}, {9.169299999999998, 23.578}, {
                   8.760299999999999, 23.456999999999997`}, {
                   9.102299999999998, 23.348999999999997`}}, {{
                   9.083299999999998, 22.633}, {9.025299999999998, 23.208}, {
                   8.567299999999998, 23.354}, {8.555299999999999, 
                   22.865}}, {{8.521299999999998, 23.551}, {9.039299999999999,
                    23.703}, {8.711299999999998, 24.13}, {8.2183, 
                   23.962999999999997`}}, {{8.4073, 23.197}, {
                   8.171299999999999, 22.851}, {8.171299999999999, 22.445}, {
                   8.398299999999999, 22.837}}, {{8.091299999999999, 
                   23.014}, {8.395299999999999, 23.458}, {8.091299999999999, 
                   23.871}, {7.786299999999999, 23.458}}, {{8.010299999999999,
                    22.851}, {7.773299999999999, 23.197}, {7.782299999999998, 
                   22.837}, {8.010299999999999, 22.445}}, {{7.964299999999999,
                    23.962999999999997`}, {7.469299999999999, 24.13}, {
                   7.141299999999999, 23.703}, {7.659299999999998, 
                   23.551}}, {{7.626299999999999, 22.865}, {7.614299999999998,
                    23.354}, {7.155299999999999, 23.209}, {7.097299999999999, 
                   22.633999999999997`}}, {{7.078299999999999, 
                   23.348999999999997`}, {7.422299999999998, 
                   23.456999999999997`}, {7.0112999999999985`, 23.578}, {
                   6.6282999999999985`, 23.447}}, {{6.593299999999998, 
                   23.601}, {6.962299999999999, 23.726999999999997`}, {
                   7.214299999999998, 24.054}, {6.889299999999999, 
                   23.933999999999997`}}, {{6.867299999999998, 24.092}, {
                   7.319299999999998, 24.259999999999998`}, {
                   7.0482999999999985`, 24.645}, {6.484299999999998, 
                   24.522}}, {{7.113299999999999, 25.217}, {7.158299999999999,
                    24.761}, {7.356299999999999, 24.479999999999997`}, {
                   7.344299999999999, 24.904}}, {{7.5032999999999985`, 
                   24.817999999999998`}, {7.518299999999998, 24.279}, {
                   8.010299999999999, 24.113}, {8.010299999999999, 
                   24.637999999999998`}}, {{7.2452999999999985`, 25.302}, {
                   7.4712999999999985`, 24.997}, {7.8622999999999985`, 
                   24.857}, {7.656299999999998, 25.122}}, {{7.800299999999998,
                    25.192}, {8.091299999999999, 24.82}, {8.381299999999998, 
                   25.192}, {8.091299999999999, 25.689}}, {{8.171299999999999,
                    24.637999999999998`}, {8.171299999999999, 24.113}, {
                   8.663299999999998, 24.279}, {8.677299999999999, 
                   24.817999999999998`}}, {{8.836299999999998, 24.904}, {
                   8.8243, 24.479999999999997`}, {9.022299999999998, 
                   24.761}, {9.068299999999999, 25.217}}, {{8.318299999999999,
                    24.857}, {8.710299999999998, 24.997}, {8.935299999999998, 
                   25.302}, {8.525299999999998, 25.122}}, CompressedData["
1:eJxTTMoPSmViYGAQAWIQbb/k/j6+P8oOE9/W2JvOs3CQKL4u9OmhkgMDGFg4
wOTzhJoPnEo0d1i3Lan+ZqySw+2fdVl7TMwdPjqeT7vargSVN3MQkT351J5F
0eH64gJbru1mDk9BBugpQM0zcwicpthXulEOLl8ja5HuslIarp/ZRNDM5q80
3PwHEeLbLx6QgNuvt1udn/urFNx9MHmY+2H6VdgapzqftoCbD5G3hNuvGdN/
6KuHJZr7rODuh8nX3bStjOhQguuH+R9mPgC7F3w4
                   "]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{11., 
                  25.}, {24.000999999999998`, 25.}, {24.000999999999998`, 
                  26.}, {11., 26.}}}]}, {
                 FaceForm[{
                   RGBColor[0.749, 0.749, 0.749], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 
                  22.}, {11., 22.}, {11., 24.}, {24., 24.}}}]}, {
                 FaceForm[{
                   RGBColor[0.984, 0.6859999999999999, 0.365], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{19., 20.}, {24.,
                   20.}, {24., 21.}, {19., 21.}}, {{6., 20.}, {18., 20.}, {
                  18., 21.}, {6., 21.}}, {{6., 18.}, {10., 18.}, {10., 19.}, {
                  6., 19.}}, {{11., 19.}, {17., 19.}, {17., 18.}, {11., 
                  18.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                  0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 
                  0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, CompressedData["
1:eJx10ksKgzAYReHQdtgFZFqRIEEkPioOXUOXUOjY/c90kDvogSuEn08OaoKv
7/H53UMIz2s9rnULutL+P4txh/vyiPtvY/byWudQ52Zc0MtLnRk93aOX9byE
nub3yhG9m+xlnY/2MxsP6OUJfTZmLzd16jyicUYvd/Bs3KOXE9waZ/R8v/YT
jfkfl/0EHWIqGQ==
                  "]]}, {
                 FaceForm[{
                   RGBColor[0.392, 0.392, 0.392], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 
                   3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {1, 3, 
                   3}}, {{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                   3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{1, 4, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 
                   0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {CompressedData["
1:eJxTTMoPSmViYGAQBWIQ/YB78sqmiXoOlxjuMXF2sTisvRFf5h+n59Dj9YrF
RJDFwUzqQLQCo56D3oQFPwyfMUH4B3Ud1qs+aZ53lsHhxfb1zM959OD8lpoL
myNN9Rwq5ixS3vmH0QEo26ORC+MzOSQuvGbyfoeew7F/m6o/bWB2mLcaZKO+
g5xFuktmPqvD1mWVxzWtDBy2XwQ5iNXhjf5udf5uAwdWE0Ezm71MDs/WgSwy
cFh9/mrYG30mhw+tJ0MOrjBwiM09CjSR0QFkS/sWA7h7+koLpXkfIPgvbq75
FXPWwCHx8GXtVEkmuHoJsIXMDm0g45YYOHR8uX29sZjZgZ8b6CJ3A4fvbPEz
fETZHKqW6jjLZOs7sIO4PWwO6OEHAOM+kNE=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQ3XHp3gNuYX2HJyKyJ5/aSzgsZtzDKiSi65AbVrtu
2yMxB7VDbcvDuXQcOKXnxWmeFnSo+21VcI5D24HVRNDMZi+nQ+LCaybvd2g5
RDvZvbi5hs0hXSmnoipVy0HtSfO8s6uYHaIVHD8m82g5rFcFCTA4aElMvcKZ
geBv1MsDWqnlYLM3aJpiHzPUPm0HOYt0l8x8NofU708SF4ZpO1zRTpV8FMHp
EFyiMv1/gI7D9qT6m7aVghD3hug6HN+1o5etQMzh/wSgCw30HfbxzTFetEXc
4dOGgOxZ0w0cwM4XkHQ4Xe+xv3avocO0TTyFa7pFHfi5ty6rbDdyqFu3Lak+
Ushhho9oj5eXscOcRco7/7TzOSyrPK5p9cnYQazH6xWLCbuDLNhdJnD3r/kV
k3t0HoJfKM37QNfAxEEDbDCbwxI/B+HExcYOBrvVgSI8DidDDq5Ywmfs8OaA
pbLXbwEHq0lAF8kbOXzJAQa4magDSPuEAwYOINfdfiHpgB4/AHQArZ4=
                   "], CompressedData["
1:eJxTTMoPSmViYGCQAWIQvTz8lNGRjXoO67Yl1d/cK+MwK3T+6rUROg5rum9n
MLyXcujReMu7z0Db4ULa1edZq0Ucchcz7mEV0nJ4xWIiaGbD62AzG6RB08HZ
7sXNNb84HDzmNqgdctN0MNitzs+9lcXht1XBuY5LGg7rVZ80zzvL4ACxThPO
V3D8mHxmrqbDs3UgARaHAE+gAUxaDqwg4/dyOIBU5yVrOajs/NP+5TaPA5C3
mLFG22HG3cntrVEiDpNWNgV6ztVxYPsg5hFQI+UgmuX7ue+ynkNokPqCTgMZ
B3ZboANf6ztUN+v7LOOSdQC5atlMAwe+OcaLtmyXcZC1SHfJ9Dd0WA/yv620
wyJlkEVGDh4BfySKr4s7TPnGFj9jjYlDxBt9oI/4HL7cvt5YfMwU7n4w/xkm
/2PryZCDKxgdmordpnxzM3XQSZV8FCHO6QA2vtrEIXKF6VnrcwIOQdMU+0o3
Gju4/Hr7+oCliEO9x/5a2R+GDixH+w3L10o7AAMhaFqjAcT9XXIO6PEFAPga
wsg=
                   "], CompressedData["
1:eJxTTMoPSmViYGAQBWIQPSt0/uq1N/QdLjHcY+Ls4nNoUDvUtjxcz8Fq0ul6
j/28DmtvxJf5x+k6bL8IUsDusJtVSMS+TcdhveqT5nlnGRycZF4/MruF4DcF
es5tWKbroAbirmJzCC5Rmf5/gp5D1XFNoJE8Dkt1nIE69B3ico/+21TN6/BA
d8KCH4UGDo8ixIFW8DnIWqS7ZPIbOrQAdZ+/yuVgszdommKfocPq81fD3uiz
OkQ52b24ucbQwd9BOPHwZWaH5HdAkROGDln5H1pPhjA5gK25bwh3Ty3IQE4j
OB9oyG7194YO7PEzfER7mBxWgcw9b+jwmsVE0MyGBWLfOkOHApBxB1nBtmir
wtzD7QAKldpaAwdGUHDJ8zughx8AsHaP1w==
                   "], CompressedData["
1:eJxTTMoPSmViYGCQBmIQvb9W1iI9xchhwoIfhs/WcTs42b24uWaXkYNI4uHL
2qkcDlO+scXP4DF2YI+f4SPaw+JgszdomqKfscN61SfN884yOHTJJ7+LUkLw
d6vzc299ZuSQM6t8ziJlFgeQcb/mGDmogaRXsTu0nQw5uMLFyMFXtMfrFQu3
Q7EbyAZDh9yw2nXbHgk6gKzzKTVwaGI52m/4XdjB4WPymdhufQeXX29fH7AU
dugLLlGZ/l/XYc9jEdmTqUION+LL/OXEdB3W/orJPfqPx8FPTizL11jHYR/Q
mX2lrA5ty8NPGbHoOPSVFkrzPmB2MJipJTH1irbDKaAzlvgxOeyPVnD8uFgb
7n4QN9kHwc+uqFqq06wNNY/JYeetrr+p27UdykDG6bI4AGWdZV5rO/wEhp7q
E1aHRYx7WIWu6ED9y+uw4JrJe4ujug4z7k5ub70l5HBna0vNhWJ9B4ni60Kf
Dgo7GIG0HTZwOGftd3HiHRGHTxsCsmddN3TQ+TYdqEPAAT1+AE3XvCM=
                   "]}]}}}, {
              ImageSize -> 12, AspectRatio -> Automatic, 
               ImageSize -> {30., 30.}, PlotRange -> {{0., 30.}, {0., 30.}}}],
              "Wolfram Function Repository Reviewer"}, 
            "PrettyTooltipTemplate"]}}, 
         GridBoxAlignment -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Center}}}, AutoDelete -> 
         False, 
         GridBoxItemSize -> {
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
         GridBoxSpacings -> {"Columns" -> {{0.25}}}], "Grid"]& )}], 
   Cell[
    StyleData["CommentCellLabelTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        TagBox[
         GridBox[{{
            StyleBox[#, FontSize -> 11]}, {
            StyleBox[
             DynamicBox[
              ToBoxes[
               DateString[
                TimeZoneConvert[
                 DateObject[#2, TimeZone -> 0]], {
                "Month", "/", "Day", "/", "Year", " ", "Hour24", ":", 
                 "Minute"}], StandardForm], SingleEvaluation -> True], 
             FontSize -> 9]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0}}}], 
         "Grid"], "CommentLabel", ShowStringCharacters -> False]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.8730375, 0.83578125, 0.7955875]], Evaluator -> 
           "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; 
                Needs["ResourceSystemClient`DefinitionNotebook`"], 
                ResourceSystemClient`DefinitionNotebook`CheckForUpdates[
                RSNB`nb$, 
                 #2[]], 
                ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled = 
                 False; Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1R5n1BhlAEFANlwxXNmaCoem
KIPacD1kBBQBisOVba1zbos1QlMDQUBxoCzEtUAtjRhGQVAj2EAGMCBGGZGm
Ee82In1KfLgREwvExCkA9SYWEg==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaN1lY4QhCyIrAwo1Zds2ptsAkFANlwxXNmaCoee
JJP7c4J/r4+FICAbKAIUhyvbWufcn2L6eH4IXA0EAUWA4kBZiGuBWiammqGp
gSCgOFCWAQyIUUakacS7jUifEh9uxMQCMXEKAB4IRIc=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQbG9wgaNDUxIhCFkQWRlQ6vOz678/PIEgIBuuGK7s6Iz0
X++f/DnY+Ht9LAQB2UARoDhc2c4Wry/Pb/zZVw1XA1W5rxooDpSFuBZk1Nv7
aGogCCgOlGUAA2KUEWka8W4j0qfEhxsxsUBMnAIAq2R1ew==
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.7185389999999999, 0.5009625, 0.266231], 
        Method -> "Queued", ImageSize -> {All, 23}, Enabled -> Dynamic[
          Not[
           TrueQ[ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled]], 
          TrackedSymbols :> {
           ResourceSystemClient`DefinitionNotebook`$ButtonsDisabled}], 
        Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["SuggestionGridTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (StyleBox[
        FrameBox[
         AdjustmentBox[
          TagBox[
           GridBox[{{
              TemplateBox[{#2, #3, {16., 16.}, {{1., 17.}, {1., 17.}}}, 
               "SuggestionIconTemplate"], 
              
              PaneBox[#, ImageSizeAction -> "ShrinkToFit", BaselinePosition -> 
               Baseline, ImageSize -> Full], 
              AdjustmentBox[
               TemplateBox[{
                 ActionMenuBox[
                  TagBox[
                   PaneSelectorBox[{False -> GraphicsBox[{
                    EdgeForm[
                    Directive[
                    GrayLevel[1, 0], 
                    Thickness[0.025]]], 
                    FaceForm[#4], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], #5, 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0], True -> 
                    GraphicsBox[{
                    EdgeForm[
                    Directive[#5, 
                    Thickness[0.025]]], 
                    FaceForm[#2], 
                    
                    RectangleBox[{-1.75, -2}, {1.75, 2}, RoundingRadius -> 
                    0.2], 
                    Thickness[0.15], 
                    GrayLevel[1], 
                    LineBox[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
                    ImageSize -> {Automatic, 15}, ImageMargins -> 0]}, 
                    Dynamic[
                    CurrentValue["MouseOver"]], ImageSize -> Automatic, 
                    FrameMargins -> 0], 
                   MouseAppearanceTag["LinkHand"]], #6, Appearance -> None, 
                  Method -> "Queued"], "\"View suggestions\""}, 
                "PrettyTooltipTemplate"], BoxBaselineShift -> -0.3]}}, 
            GridBoxAlignment -> {
             "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, AutoDelete -> 
            False, GridBoxItemSize -> {
             "Columns" -> {Automatic, Automatic, Fit}, 
              "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {{0.4}}}], "Grid"], 
          BoxMargins -> {{0.25, -1.}, {0.15, -0.15}}], 
         RoundingRadius -> {13, 75}, Background -> #4, FrameStyle -> None, 
         FrameMargins -> {{0, 8}, {0, 0}}, ImageMargins -> {{0, 0}, {5, 5}}, 
         StripOnInput -> False], "Text", FontColor -> #5, FontSize -> 14, 
        FontFamily -> "Source Sans Pro", FontWeight -> "SemiBold", 
        FontTracking -> "Plain", 
        PrivateFontOptions -> {"OperatorSubstitution" -> False}, 
        LineBreakWithin -> False]& )}], 
   Cell[
    StyleData["SuggestionIconTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (GraphicsBox[{
         Thickness[0.05555555555555555], 
         StyleBox[{
           
           FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3,
             3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJJIGZigIIGAwcIQ8kBxk94ekHp9k9Vh4qXaoYcOfoO
m+a+X37stKZDbP+hrxpzdOA0TBymDqYPl7n2pnG7PHlk4PzZRxQ2FGWIwPWD
jI3p54WbLxuVYn3fnwluD8S8H/Yo9gD5KPYA+TB7YPph9sDMh9EwcZg6FPdh
MRfdXpi7YPph7oaZD/MXzB5c4QCzBwA8nn+Z
            "]]}, 
          FaceForm[#]], 
         StyleBox[{
           
           FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1,
              0}, {0, 1, 0}}, {{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1,
              3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, {{{8.175292500000001, 
             7.416875}, {7.796855000000001, 11.3084375}, {7.796855000000001, 
             13.38}, {10.11998, 13.38}, {10.11998, 11.3084375}, {
             9.741542500000001, 7.416875}, {8.175292500000001, 
             7.416875}}, CompressedData["
1:eJxTTMoPSmViYGCQBGIQ/cTvZcLf/4oOD6tE1rk/5HNQjDzAkqeL4FsusdsW
1KjgwAAGAg7hCSdehX2Xd5BvfR24Q07QwaZCOJPjjZyDHdf1xQW2Qg56LJYa
iWlyDv2HvmrEzBeG80GmVbmIwvkvtjT6Sb8Qg+t/BLLPUwJuPti6DEm4/WD7
2qTg7gMZJyIm7QBzP4y/zEVob88lJTi/7+dk7hV1ynD9c3LzfPxZVODmr3ro
0futUwVu/0bpbbqnzqjA3Qfjw9wP48P8B9MP8z/MfFj4wOyHhR/MfbDwRQ9/
ACBxmlc=
             "]}]}, 
          FaceForm[#2]]}, ImageSize -> #3, PlotRange -> #4, AspectRatio -> 
        Automatic, BaselinePosition -> Scaled[0.1]]& )}], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{66, 10}, {0, 8}}, 
    StyleKeyMapping -> {"Tab" -> "UsageDescription"}, Evaluatable -> False, 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell["", "UsageDescription"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoStyles -> False, ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain"], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    CellMargins -> {{86, 10}, {7, 0}}, 
    StyleKeyMapping -> {"Backspace" -> "UsageInputs"}, CellGroupingRules -> 
    "OutputGrouping", 
    CellEventActions -> {"ReturnKeyDown" :> With[{RSNB`nb = Notebooks[
           EvaluationCell[]]}, SelectionMove[
          EvaluationCell[], After, Cell]; NotebookWrite[RSNB`nb, 
          Cell[
           BoxData[""], "UsageInputs", FontFamily -> "Source Sans Pro"], All]; 
        SelectionMove[RSNB`nb, Before, CellContents]], {"KeyDown", "\t"} :> 
      Replace[SelectionMove[
          SelectedNotebook[], After, Cell]; NotebookFind[
          SelectedNotebook[], "TabNext", Next, CellTags, AutoScroll -> True, 
          WrapAround -> True], Blank[NotebookSelection] :> SelectionMove[
          SelectedNotebook[], All, CellContents, AutoScroll -> True]]}, 
    ShowAutoSpellCheck -> False], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    CellMargins -> {{66, 24}, {9, 7}}, ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {}, DefaultNewCellStyle -> "Notes", ShowAutoSpellCheck -> 
    False, GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.7185389999999999, 0.5009625, 0.266231]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.47902599999999995`, 0.333975, 0.17748733333333333`]], 
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[
       0.0196078431372549, 0.28627450980392155`, 0.6509803921568628]]]], 
   Cell[
    StyleData["StringTypeLink"], 
    TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        DynamicBox[
         If[
          CurrentValue["MouseOver"], 
          ButtonBox[
           
           StyleBox[#, FontColor -> 
            RGBColor[0.9686274509803922, 0.4666666666666667, 0.]], 
           ButtonData -> #2], 
          ButtonBox[#, ButtonData -> #2]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {
     BaseStyle -> {FontColor -> GrayLevel[0.46666667], "Link"}}], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData["ExampleDelimiter"], Selectable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{66, 14}, {5, 10}}, Evaluatable -> True, 
    CellGroupingRules -> {"SectionGrouping", 58}, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {100}, 
    StyleMenuListing -> None, FontFamily -> "Verdana", FontWeight -> Bold, 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["ExampleText", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{66, 14}, {15, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["Subsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Subsubsection"], Evaluatable -> True, 
    CellEvaluationFunction -> (($Line = 0; Null)& ), ShowCellLabel -> False], 
   Cell[
    StyleData["Excluded"], 
    CellBracketOptions -> {
     "Color" -> RGBColor[0.9, 0.4, 0.4], "Thickness" -> 2}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Excluded"}, 
      "Message" -> {"Message", "MSG", "Excluded"}, 
      "Output" -> {"Output", "Excluded"}, "Print" -> {"Print", "Excluded"}, 
      "PrintTemporary" -> {"PrintTemporary", "Excluded"}}, CellFrameMargins -> 
    4, StyleMenuListing -> None, Background -> RGBColor[1, 0.95, 0.95]], 
   Cell[
    StyleData["Comment", StyleDefinitions -> StyleData["Text"]], 
    CellFrame -> {{3, 0}, {0, 0}}, CellMargins -> {{66, 0}, {1, 0}}, 
    CellElementSpacings -> {"ClosedCellHeight" -> 0}, 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "Comment"}, 
      "Message" -> {"Message", "MSG", "Comment"}, 
      "Output" -> {"Output", "Comment"}, "Print" -> {"Print", "Comment"}, 
      "PrintTemporary" -> {"PrintTemporary", "Comment"}}, CellFrameColor -> 
    RGBColor[0.880722, 0.611041, 0.142051], 
    CellFrameLabelMargins -> {{0, 10}, {0, 0}}, FontColor -> GrayLevel[0.25], 
    Background -> RGBColor[0.9821083, 0.94165615, 0.87130765]], 
   Cell[
    StyleData["AuthorComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "AuthorComment"}, 
      "Message" -> {"Message", "MSG", "AuthorComment"}, 
      "Output" -> {"Output", "AuthorComment"}, 
      "Print" -> {"Print", "AuthorComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "AuthorComment"}}, 
    CellFrameColor -> RGBColor[0.368417, 0.506779, 0.709798], Background -> 
    RGBColor[0.90526255, 0.92601685, 0.9564697]], 
   Cell[
    StyleData["ReviewerComment", StyleDefinitions -> StyleData["Comment"]], 
    GeneratedCellStyles -> {
     "Graphics" -> {"Graphics", "ReviewerComment"}, 
      "Message" -> {"Message", "MSG", "ReviewerComment"}, 
      "Output" -> {"Output", "ReviewerComment"}, 
      "Print" -> {"Print", "ReviewerComment"}, 
      "PrintTemporary" -> {"PrintTemporary", "ReviewerComment"}}, 
    CellFrameColor -> RGBColor[0.560181, 0.691569, 0.194885], Background -> 
    RGBColor[0.9340271499999999, 0.95373535, 0.87923275]], 
   Cell[
    StyleData["CommentLabel", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["DockedCell"], CellFrameColor -> GrayLevel[0.75], Background -> 
    RGBColor[0.898039, 0.898039, 0.898039]], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> 
  "13.2 for Microsoft Windows (64-bit) (November 18, 2022)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"47ada8b5-4a14-4a2f-bcb4-1de8064dab4a"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[580, 22, 229, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[580, 22, 229, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "AuthorName"->{
  Cell[812, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
   CellTags->"AuthorName",
   CellID->960727095]},
 "Abstract"->{
  Cell[1066, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1066, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[1235, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
   CellTags->"SectionHeader",
   CellID->453852445]},
 "ExampleTopicSentence"->{
  Cell[1367, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[1500, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[1654, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
   CellTags->"ExampleInput",
   CellID->844129532]},
 "ExampleOutput"->{
  Cell[1896, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
   CellTags->"ExampleOutput",
   CellID->171130590]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 310579, 6513},
 {"Your Essay Title", 310765, 6517},
 {"AuthorName", 310945, 6521},
 {"Abstract", 311104, 6525},
 {"TemplateCell", 311286, 6529},
 {"SectionHeader", 311469, 6533},
 {"ExampleTopicSentence", 311645, 6537},
 {"ExampleCodeText", 311820, 6541},
 {"ExampleInput", 311990, 6545},
 {"ExampleOutput", 312156, 6549}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 229, 3, 98, "Title",ExpressionUUID->"1d92d1b8-f6d7-48ed-8825-cd049ebbaf36",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[812, 27, 251, 5, 30, "Author",ExpressionUUID->"3a631b5a-3636-4c6d-8965-482ae9171f2c",
 CellTags->"AuthorName",
 CellID->960727095],
Cell[1066, 34, 144, 2, 62, "Abstract",ExpressionUUID->"2ac58def-5955-4744-85c7-434e15df125e",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[1235, 40, 129, 2, 67, "Section",ExpressionUUID->"34c50aa5-39dc-40c2-9e96-2d752d36a940",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[1367, 44, 130, 2, 35, "Text",ExpressionUUID->"59801345-6d3c-49da-94f6-ef747999241f",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[1500, 48, 129, 2, 38, "CodeText",ExpressionUUID->"b8f16d1a-9cf8-4c1c-995b-1b11a6b7b3c0",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[1654, 54, 239, 5, 28, "Input",ExpressionUUID->"e756100c-540c-43b9-be4c-21761a8079e5",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[1896, 61, 242, 5, 32, "Output",ExpressionUUID->"c00f4ee8-0557-49a4-ab3b-dadc018208b9",
 CellTags->"ExampleOutput",
 CellID->171130590]
}, Open  ]],
Cell[2153, 69, 95, 1, 32, "Item",ExpressionUUID->"acdb2ad8-0a92-4f50-8bae-de040b09b38c",
 CellID->316654537],
Cell[2251, 72, 95, 1, 32, "Item",ExpressionUUID->"8090181c-e17a-4c99-bc3c-696fb19cb01c",
 CellID->316654538]
}, Closed]],
Cell[CellGroupData[{
Cell[2383, 78, 174, 2, 53, "Section",ExpressionUUID->"827b26de-1acb-4959-ac7b-d16051626238",
 CellID->101102159],
Cell[2560, 82, 743, 16, 58, "Text",ExpressionUUID->"b726fe33-5b42-4830-a845-67397d6e2c15",
 CellID->38633345],
Cell[3306, 100, 1824, 51, 55, "Input",ExpressionUUID->"231297d5-4cc9-407c-bf80-8833b680e735",
 CellID->32553739],
Cell[CellGroupData[{
Cell[5155, 155, 240, 3, 54, "Subsection",ExpressionUUID->"a95c8d1a-df91-4dae-a933-73c638d477fa",
 CellID->117902179],
Cell[5398, 160, 166, 2, 35, "Text",ExpressionUUID->"e85edff4-cc26-4a57-bff7-55a0374462b0",
 CellID->141620958],
Cell[5567, 164, 416, 11, 41, "Input",ExpressionUUID->"c17df9cf-b15a-4183-8db3-c09313575fd0",
 CellID->51445768],
Cell[5986, 177, 188, 2, 35, "Text",ExpressionUUID->"2f2a9244-e8ef-49cb-bb31-e8f5b1bc6e71",
 CellID->85525521],
Cell[6177, 181, 2032, 56, 55, "Input",ExpressionUUID->"d9221eb4-7239-4c3b-b21b-c73b2f7298fa",
 CellID->32076184],
Cell[8212, 239, 195, 2, 35, "Text",ExpressionUUID->"612de431-99a3-48ae-b626-bc29eae69f55",
 CellID->347581280],
Cell[CellGroupData[{
Cell[8432, 245, 2034, 54, 76, "Input",ExpressionUUID->"7e43e43b-1c5b-412b-aa1e-21be498043c9",
 CellID->274759697],
Cell[10469, 301, 1683, 48, 62, "Output",ExpressionUUID->"fa3829c8-3ebe-4542-811f-d0b3ef8da300",
 CellID->10525875]
}, Open  ]],
Cell[CellGroupData[{
Cell[12189, 354, 272, 5, 28, "Input",ExpressionUUID->"b72ffd6e-47d6-4c60-9bde-5a68ece60066",
 CellID->221818627],
Cell[12464, 361, 1488, 44, 59, "Output",ExpressionUUID->"344848f0-a5ad-41cf-af94-db3f9d328e08",
 CellID->52693951]
}, Open  ]],
Cell[CellGroupData[{
Cell[13989, 410, 412, 10, 28, "Input",ExpressionUUID->"416a9691-1cce-4665-9fbd-b17c622b6d60",
 CellID->142049760],
Cell[14404, 422, 1676, 50, 59, "Output",ExpressionUUID->"f6e57575-2628-43d2-8dc7-beba39e7f37a",
 CellID->317666335]
}, Open  ]],
Cell[16095, 475, 174, 2, 35, "Text",ExpressionUUID->"022ad5bc-c1c5-4c59-a004-7574b4aa1185",
 CellID->1620886],
Cell[CellGroupData[{
Cell[16294, 481, 590, 16, 48, "Input",ExpressionUUID->"2c162b4d-f753-4945-a59c-765d0bb8a6f6",
 CellID->109320042],
Cell[16887, 499, 237, 6, 49, "Output",ExpressionUUID->"74f83149-7885-4708-9122-5560582563f1",
 CellID->29094259]
}, Open  ]],
Cell[CellGroupData[{
Cell[17161, 510, 712, 20, 67, "Input",ExpressionUUID->"3a2c6d8b-1036-4d6a-a099-f929f2214c37",
 CellID->10025442],
Cell[17876, 532, 299, 8, 35, "Output",ExpressionUUID->"2d0269a5-48fb-4050-a4f4-0cfb262c2c1d",
 CellID->212342756]
}, Open  ]],
Cell[18190, 543, 178, 2, 35, "Text",ExpressionUUID->"2cbfe79d-b7b3-41a2-b1a1-5acb05aa9f63",
 CellID->167161462],
Cell[CellGroupData[{
Cell[18393, 549, 2784, 75, 105, "Input",ExpressionUUID->"54066147-44a7-4660-a923-a7bd904c3afc",
 CellID->281029717],
Cell[21180, 626, 1750, 50, 64, "Output",ExpressionUUID->"3399d172-fdf6-4394-91d3-20d2595264c3",
 CellID->241113582]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22979, 682, 616, 16, 56, "Subsection",ExpressionUUID->"1f19be83-8ae5-4d5e-9a91-fc07df87022b",
 CellID->127239515],
Cell[23598, 700, 183, 2, 35, "Text",ExpressionUUID->"72ae5945-41dd-43d0-b9b5-88b29444bed4",
 CellID->30685943],
Cell[CellGroupData[{
Cell[23806, 706, 270, 5, 28, "Input",ExpressionUUID->"08d89223-1f1f-409a-a2f6-a4879f48cec6",
 CellID->17875601],
Cell[24079, 713, 1713, 48, 66, "Output",ExpressionUUID->"63f4a816-0dbc-4aad-aea1-c82c1f042247",
 CellID->601167601]
}, Open  ]],
Cell[CellGroupData[{
Cell[25829, 766, 294, 6, 28, "Input",ExpressionUUID->"c569e65f-299b-41b7-9eef-eabdb2e71275",
 CellID->732666548],
Cell[26126, 774, 1455, 44, 61, "Output",ExpressionUUID->"e2d8ac2e-519b-42fa-9c37-3049a9f92256",
 CellID->96615651]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27630, 824, 256, 5, 54, "Subsection",ExpressionUUID->"dd024d63-e56e-4d7d-8ae1-071078ae7795",
 CellID->627902216],
Cell[27889, 831, 235, 4, 35, "Text",ExpressionUUID->"c32ee5cc-6c2e-4428-825a-b274b32b7d3f",
 CellID->399418],
Cell[28127, 837, 191, 2, 35, "Text",ExpressionUUID->"20a83273-35da-4476-bad3-4e062cb72081",
 CellID->38180419],
Cell[CellGroupData[{
Cell[28343, 843, 317, 6, 28, "Input",ExpressionUUID->"6a8b2a39-6d2f-4c4d-a4db-af9f0e7dcd62",
 CellID->654196850],
Cell[28663, 851, 1530, 46, 63, "Output",ExpressionUUID->"275aeb4d-ff2a-4959-af87-e290f09b13d8",
 CellID->2985966]
}, Open  ]],
Cell[30208, 900, 194, 2, 35, "Text",ExpressionUUID->"de96b299-f557-4767-a40f-d633673298e7",
 CellID->97755920],
Cell[CellGroupData[{
Cell[30427, 906, 317, 6, 28, "Input",ExpressionUUID->"83199168-b642-46c1-865b-b5c240f5ea04",
 CellID->147068514],
Cell[30747, 914, 1523, 46, 63, "Output",ExpressionUUID->"1504b407-7195-450a-be1b-9bd75566e60e",
 CellID->213461328]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[32319, 966, 484, 14, 54, "Subsection",ExpressionUUID->"4f396326-732c-4f0c-81cf-f794ae0b09ab",
 CellID->536163033],
Cell[32806, 982, 205, 2, 35, "Text",ExpressionUUID->"2e5293a1-9c71-48e2-8a88-37d1aa021c90",
 CellID->201313502]
}, Open  ]],
Cell[CellGroupData[{
Cell[33048, 989, 236, 4, 54, "Subsection",ExpressionUUID->"d43bb07c-53a9-4589-8992-a71931f71cc7",
 CellID->382497433],
Cell[CellGroupData[{
Cell[33309, 997, 177, 2, 45, "Subsubsection",ExpressionUUID->"92db9055-5e63-498f-9587-f464a27bca31",
 CellID->163095230],
Cell[33489, 1001, 173, 2, 35, "Text",ExpressionUUID->"9644f2f2-f6c1-4200-8244-da2197151787",
 CellID->170821093],
Cell[33665, 1005, 519, 13, 41, "Input",ExpressionUUID->"e3b79dbc-c200-42c6-9a30-8fb3a95a446a",
 CellID->628785154],
Cell[CellGroupData[{
Cell[34209, 1022, 294, 6, 28, "Input",ExpressionUUID->"2ca9d808-cf08-4f36-99fd-54c7a583044e",
 CellID->138576246],
Cell[34506, 1030, 1551, 46, 61, "Output",ExpressionUUID->"8fea6d8b-8734-4024-adfa-f330008d4000",
 CellID->489462843]
}, Open  ]],
Cell[CellGroupData[{
Cell[36094, 1081, 1863, 52, 58, "Input",ExpressionUUID->"6a79218f-a811-4c0e-bdf1-adf8da44a254",
 CellID->218470861],
Cell[37960, 1135, 4049, 111, 88, "Output",ExpressionUUID->"bd979e48-93d6-44bf-a7f4-e5d75245acd5",
 CellID->98358706]
}, Open  ]],
Cell[42024, 1249, 181, 2, 35, "Text",ExpressionUUID->"eabdee0b-3932-4244-9d86-5cec46d1b5cb",
 CellID->166656436],
Cell[CellGroupData[{
Cell[42230, 1255, 2097, 57, 58, "Input",ExpressionUUID->"de05be84-07a6-4058-9373-c0d0ec9b691d",
 CellID->561467092],
Cell[44330, 1314, 213, 5, 48, "Output",ExpressionUUID->"873a43ce-32b8-40ff-aef3-ac76307ab9f1",
 CellID->299808776]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44592, 1325, 180, 2, 45, "Subsubsection",ExpressionUUID->"c2de0eb3-3829-4ee4-9146-5b2c049f80c8",
 CellID->53982976],
Cell[44775, 1329, 173, 2, 35, "Text",ExpressionUUID->"a0a9f56e-aa96-4ba5-8302-450e0636ed00",
 CellID->169186762],
Cell[44951, 1333, 906, 25, 43, "Input",ExpressionUUID->"f844272e-4e21-4152-9117-81453fb0bc91",
 CellID->99651704],
Cell[CellGroupData[{
Cell[45882, 1362, 4194, 112, 58, "Input",ExpressionUUID->"ef13bc56-2337-4d7c-be3e-c7af11fd6773",
 CellID->549326758],
Cell[50079, 1476, 240, 6, 50, "Output",ExpressionUUID->"2130ca5c-78d9-4faa-8e3d-162f61aed2d7",
 CellID->285545988]
}, Open  ]]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[50392, 1490, 171, 2, 53, "Section",ExpressionUUID->"04b7ece0-e23c-4fdd-9c01-d0abba729048",
 CellID->28347930],
Cell[50566, 1494, 279, 5, 35, "Text",ExpressionUUID->"a9b8c6cd-a2b0-4721-82ec-21a9f9d90054",
 CellID->235834719],
Cell[50848, 1501, 1846, 52, 50, "Input",ExpressionUUID->"4c542c79-95b1-41f9-9fac-ab299209eb51",
 CellID->935198403],
Cell[CellGroupData[{
Cell[52719, 1557, 1135, 32, 60, "Subsection",ExpressionUUID->"ad7d240f-dc84-4477-92ac-9cc7ffb28150",
 CellID->199948858],
Cell[53857, 1591, 189, 2, 35, "Text",ExpressionUUID->"b32ae52f-d33b-44ef-8143-4e41d136bbb5",
 CellID->301683163],
Cell[54049, 1595, 2343, 61, 50, "Input",ExpressionUUID->"b8917b27-ca0f-4aab-ba75-affa496b327d",
 CellID->28715596],
Cell[CellGroupData[{
Cell[56417, 1660, 313, 6, 28, "Input",ExpressionUUID->"b0c9e1a3-0480-4ea9-ada2-fe9f05d180da",
 CellID->529604306],
Cell[56733, 1668, 1637, 49, 60, "Output",ExpressionUUID->"ea814f2e-ca82-4a1e-847a-f984638289c7",
 CellID->237067158]
}, Open  ]],
Cell[CellGroupData[{
Cell[58407, 1722, 334, 7, 28, "Input",ExpressionUUID->"0fd5ba8b-b029-496e-8152-24dcc2e73bce",
 CellID->90766594],
Cell[58744, 1731, 198, 3, 32, "Output",ExpressionUUID->"528dc780-d288-470f-ba8b-8ac1f802204a",
 CellID->229294726]
}, Open  ]],
Cell[58957, 1737, 287, 5, 35, "Text",ExpressionUUID->"be05f1bd-4f74-4863-9a9c-aee52e3cf723",
 CellID->161214560],
Cell[59247, 1744, 46965, 773, 272, "Input",ExpressionUUID->"b6359aaf-11d6-4e19-9e13-52acdc861ada",
 CellID->463624413],
Cell[CellGroupData[{
Cell[106237, 2521, 377, 9, 28, "Input",ExpressionUUID->"1d8aaf72-ecbf-428a-8ebb-6fe4aecfa4ae",
 CellID->384047707],
Cell[106617, 2532, 170, 3, 32, "Output",ExpressionUUID->"f042d657-8d4c-45af-96cf-a5b8bce3c9f6",
 CellID->902042668]
}, Open  ]],
Cell[CellGroupData[{
Cell[106824, 2540, 356, 8, 28, "Input",ExpressionUUID->"324ae388-41c5-411f-a784-6dac1e78cbca",
 CellID->10754465],
Cell[107183, 2550, 170, 3, 32, "Output",ExpressionUUID->"56ae7a39-c2c4-43ba-9118-5df3fc6909e1",
 CellID->365582670]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[107402, 2559, 422, 10, 54, "Subsection",ExpressionUUID->"a99c8314-0446-4b4a-a6b9-62156b10f3df",
 CellID->113214160],
Cell[107827, 2571, 188, 2, 35, "Text",ExpressionUUID->"548d3594-be59-4bb9-8cfc-6ec5633ed1d5",
 CellID->829067146],
Cell[CellGroupData[{
Cell[108040, 2577, 235, 4, 28, "Input",ExpressionUUID->"8419d17c-2e17-44ef-a4ff-d707df7a6c16",
 CellID->496306759],
Cell[108278, 2583, 191, 4, 48, "Output",ExpressionUUID->"38155a13-24d7-40c0-b2db-2afefde39500",
 CellID->66240140]
}, Open  ]],
Cell[CellGroupData[{
Cell[108506, 2592, 307, 6, 28, "Input",ExpressionUUID->"2c39831a-2965-441e-82d7-c2a2dba7ff0e",
 CellID->7899629],
Cell[108816, 2600, 210, 5, 34, "Output",ExpressionUUID->"d0ce937d-337b-469b-9127-65ff31877ce7",
 CellID->46415396]
}, Open  ]],
Cell[CellGroupData[{
Cell[109063, 2610, 352, 8, 28, "Input",ExpressionUUID->"863288a1-d6f0-45f1-bfed-459e21a1b1ca",
 CellID->670896559],
Cell[109418, 2620, 260, 6, 50, "Output",ExpressionUUID->"02538f7c-2158-4dfb-a88b-2593176fe308",
 CellID->297677466]
}, Open  ]],
Cell[109693, 2629, 188, 2, 35, "Text",ExpressionUUID->"8306fb07-a490-4a96-9de5-1b053bfe7dd6",
 CellID->298902481],
Cell[CellGroupData[{
Cell[109906, 2635, 240, 4, 28, "Input",ExpressionUUID->"03783ccb-77d8-4e26-85c2-dabe7fa51993",
 CellID->161111358],
Cell[110149, 2641, 213, 5, 34, "Output",ExpressionUUID->"a01da1d6-de1e-41d4-bce8-a363a9b87c71",
 CellID->464259687]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[110411, 2652, 282, 5, 54, "Subsection",ExpressionUUID->"fcc65fb4-03f9-4ba6-823c-def3a02ab74a",
 CellID->260186631],
Cell[110696, 2659, 204, 2, 35, "Text",ExpressionUUID->"8fa4b086-3aea-4f9b-8eb6-79daf868c1ad",
 CellID->170768007],
Cell[110903, 2663, 417, 9, 33, "Input",ExpressionUUID->"878541bd-936d-4167-b863-18a4aab6bfa6",
 CellID->321884278],
Cell[CellGroupData[{
Cell[111345, 2676, 612, 15, 34, "Input",ExpressionUUID->"ec122a36-076d-4c42-9983-5eb719c91e46",
 CellID->186209584],
Cell[111960, 2693, 434, 10, 52, "Output",ExpressionUUID->"b1219f17-f02b-4941-b6bb-06be5495bf6b",
 CellID->237169104]
}, Open  ]],
Cell[112409, 2706, 187, 2, 35, "Text",ExpressionUUID->"e87843c2-bdfc-4910-ab39-362fd422e142",
 CellID->137335987],
Cell[CellGroupData[{
Cell[112621, 2712, 613, 14, 34, "Input",ExpressionUUID->"2d2a2724-6819-487d-9c77-0a5f4e9944c5",
 CellID->488546082],
Cell[113237, 2728, 637, 9, 71, "Output",ExpressionUUID->"833d30db-30d8-41ba-a6b4-ddc26a93e627",
 CellID->319590750]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[113935, 2744, 172, 2, 53, "Section",ExpressionUUID->"0de08371-7de0-4a64-928a-b074e4d8f857",
 CellID->6161900],
Cell[114110, 2748, 330, 6, 35, "Text",ExpressionUUID->"732c0c4d-60de-4ae4-af47-d9009e0ce786",
 CellID->603596772],
Cell[CellGroupData[{
Cell[114465, 2758, 264, 5, 54, "Subsection",ExpressionUUID->"e14c2cec-d1f6-4610-a8b9-d633d3951013",
 CellID->560038540],
Cell[114732, 2765, 211, 2, 35, "Text",ExpressionUUID->"28ebec66-c864-49b1-933a-1d28564979fd",
 CellID->85697443],
Cell[CellGroupData[{
Cell[114968, 2771, 1016, 24, 39, "Input",ExpressionUUID->"6e4a5258-e263-433d-b914-edb8ea791203",
 CellID->412194370],
Cell[115987, 2797, 274, 7, 48, "Output",ExpressionUUID->"34dc8d61-84df-4076-b80c-156c011f51a5",
 CellID->63289]
}, Open  ]],
Cell[116276, 2807, 176, 2, 35, "Text",ExpressionUUID->"17008176-d213-48bc-b952-ad244e14f644",
 CellID->222599452],
Cell[116455, 2811, 1876, 45, 39, "Input",ExpressionUUID->"818b4558-8d4b-44de-afe2-59b2f1a2ca53",
 CellID->732681],
Cell[118334, 2858, 201, 2, 35, "Text",ExpressionUUID->"b039f2b8-60af-4998-a07c-a23b6f2f0ac7",
 CellID->919943060],
Cell[CellGroupData[{
Cell[118560, 2864, 246, 4, 28, "Input",ExpressionUUID->"c10bbe8a-fab8-4717-89f0-ac5d20b1d5f3",
 CellID->228774775],
Cell[118809, 2870, 422, 10, 40, "Output",ExpressionUUID->"89922a47-a510-47d5-9ced-e3ea55e2ec47",
 CellID->428502241]
}, Open  ]],
Cell[CellGroupData[{
Cell[119268, 2885, 611, 15, 39, "Input",ExpressionUUID->"2e21f786-7ebd-4c87-9b2c-f95f4aa65cf6",
 CellID->87306535],
Cell[119882, 2902, 252, 6, 50, "Output",ExpressionUUID->"23cc8e62-b5e9-4ebf-9e30-cfbc6fbfdb96",
 CellID->775647705]
}, Open  ]],
Cell[CellGroupData[{
Cell[120171, 2913, 614, 15, 39, "Input",ExpressionUUID->"b3357491-feb2-45a8-91c8-c0b7265947c4",
 CellID->12904128],
Cell[120788, 2930, 191, 3, 32, "Output",ExpressionUUID->"30936b5f-9210-469d-8551-bcaf286f1873",
 CellID->107125615]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[121028, 2939, 333, 6, 81, "Subsection",ExpressionUUID->"9d4dbb8c-8117-46b5-b0c6-360b4d0250c2",
 CellID->69590040],
Cell[121364, 2947, 303, 6, 35, "Text",ExpressionUUID->"71085842-aa49-4b04-a4c6-dd65275cfd16",
 CellID->312614943],
Cell[CellGroupData[{
Cell[121692, 2957, 235, 4, 28, "Input",ExpressionUUID->"7f44cec9-5c46-46d7-8c3c-77a20e5b1009",
 CellID->146247622],
Cell[121930, 2963, 214, 4, 48, "Output",ExpressionUUID->"301d3a37-3f91-4745-8b74-05855631d71f",
 CellID->95293501]
}, Open  ]],
Cell[CellGroupData[{
Cell[122181, 2972, 2134, 52, 39, "Input",ExpressionUUID->"69f83320-9213-485f-9c90-baa829151c1a",
 CellID->124363904],
Cell[124318, 3026, 478, 13, 48, "Output",ExpressionUUID->"5281c68a-c0dd-4c1d-92a1-bf72a3f52910",
 CellID->328553822]
}, Open  ]],
Cell[CellGroupData[{
Cell[124833, 3044, 2079, 51, 39, "Input",ExpressionUUID->"65f0511d-9632-456b-8a83-e1ebe95e4857",
 CellID->26772912],
Cell[126915, 3097, 274, 7, 32, "Output",ExpressionUUID->"c6d14a72-16cf-4b77-87fc-c174a651eaeb",
 CellID->559429468]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[127250, 3111, 172, 2, 53, "Section",ExpressionUUID->"c1fab472-518d-47f4-a95b-2c735fb1c8f9",
 CellID->6179500],
Cell[127425, 3115, 1047, 28, 35, "Text",ExpressionUUID->"c9ecf58c-818c-4d6f-ac31-930fa4567a48",
 CellID->490849167],
Cell[128475, 3145, 864, 23, 35, "Text",ExpressionUUID->"c73d9847-8b4d-4a49-9297-c77d754af937",
 CellID->16200135],
Cell[CellGroupData[{
Cell[129364, 3172, 264, 6, 28, "Input",ExpressionUUID->"83f3b3ef-a026-424e-84a0-1a71b3ad76fa",
 CellID->12952238],
Cell[129631, 3180, 290, 7, 32, "Output",ExpressionUUID->"bf12e8be-b890-4b3b-9ec1-3f8d410c99a8",
 CellID->314943087]
}, Open  ]],
Cell[CellGroupData[{
Cell[129958, 3192, 375, 9, 28, "Input",ExpressionUUID->"f1b7d825-3234-48f2-9860-2991c087b827",
 CellID->761671029],
Cell[130336, 3203, 320, 8, 46, "Output",ExpressionUUID->"e5658726-c08b-41a2-9b67-b9eab156182a",
 CellID->413828399]
}, Open  ]],
Cell[130671, 3214, 63663, 1047, 180, "Input",ExpressionUUID->"173fee4e-9633-4fe2-8dfd-a834cd45f91e",
 CellID->13245239],
Cell[194337, 4263, 1649, 43, 67, "Input",ExpressionUUID->"60f08f06-0594-480c-86b3-ebf9180efd47",
 CellID->812561],
Cell[195989, 4308, 207, 2, 35, "Text",ExpressionUUID->"60d23e36-6a18-40a0-bb48-5b7d5fe0ea91",
 CellID->45786037],
Cell[CellGroupData[{
Cell[196221, 4314, 495, 14, 28, "Input",ExpressionUUID->"2fdf935f-a301-4c4a-be6e-dbba5da16f9d",
 CellID->8923541],
Cell[196719, 4330, 1668, 49, 115, "Output",ExpressionUUID->"92366045-b1f4-4f51-a607-377fef862f9d",
 CellID->79767116]
}, Open  ]],
Cell[198402, 4382, 217, 2, 35, "Text",ExpressionUUID->"d50964bf-1415-4acb-9fef-773233d2f1ba",
 CellID->260428327]
}, Open  ]]
}, Open  ]]
}
]
*)

